BEGIN_ENUM(LuaTypeId, uint32_t)
	EV(Unknown, 0)
	EV(Void, 1)
	EV(Boolean, 2)
	EV(Integer, 3)
	EV(Float, 4)
	EV(String, 5)
	EV(Object, 6)
	EV(Array, 7)
	EV(Set, 8)
	EV(Map, 9)
	EV(Tuple, 10)
	EV(Enumeration, 11)
	EV(Function, 12)
	EV(Any, 13)
	EV(Nullable, 14)
	EV(Module, 15)
END_ENUM()

BEGIN_ENUM(ScriptCheckType, uint32_t)
	EV(Variable, 0)
	EV(Operator, 1)
END_ENUM()

BEGIN_BITMASK(ScriptOperatorType, uint32_t)
	EV(None, 0)
	EV(And, 1)
	EV(Or, 2)
	EV(Not, 4)
END_ENUM()

BEGIN_ENUM(PathRootType, int)
	EV(Root, 0)
	EV(Data, 1)
	EV(Public, 2)
	EV(MyDocuments, 3)
	EV(GameStorage, 4)
END_ENUM()

BEGIN_BITMASK(InputType, uint32_t)
	EV(Press, 0x01)
	EV(Release, 0x02)
	EV(ValueChange, 0x04)
	EV(Hold, 0x08)
	EV(Repeat, 0x10)
	EV(AcceleratedRepeat, 0x20)
	EV(ClearOnRelease, 0x40)
END_ENUM()

BEGIN_BITMASK(InputModifier, uint8_t)
	EV(Alt, 1)
	EV(Ctrl, 2)
	EV(Shift, 4)
	EV(Gui, 8)
END_ENUM()

BEGIN_ENUM(InputState, int8_t)
	EV(Released, 0)
	EV(Pressed, 1)
END_ENUM()

BEGIN_ENUM(InputRawType, int16_t)
	EV(enter, 0)
	EV(escape, 1)
	EV(backspace, 2)
	EV(tab, 3)
	EV(capslock, 4)
	EV(space, 5)
	EV(printscreen, 6)
	EV(scrolllock, 7)
	EV(pause, 8)
	EV(insert, 9)
	EV(home, 10)
	EV(pageup, 11)
	EV(delete_key, 12)
	EV(end, 13)
	EV(pagedown, 14)
	EV(comma, 15)
	EV(dash, 16)
	EV(dot, 17)
	EV(slash, 18)
	EV(semicolon, 19)
	EV(equals, 20)
	EV(leftbracket, 21)
	EV(backslash, 22)
	EV(rightbracket, 23)
	EV(tilde, 24)
	EV(apostrophe, 25)
	EV(num0, 26)
	EV(num1, 27)
	EV(num2, 28)
	EV(num3, 29)
	EV(num4, 30)
	EV(num5, 31)
	EV(num6, 32)
	EV(num7, 33)
	EV(num8, 34)
	EV(num9, 35)
	EV(a, 36)
	EV(b, 37)
	EV(c, 38)
	EV(d, 39)
	EV(e, 40)
	EV(f, 41)
	EV(g, 42)
	EV(h, 43)
	EV(i, 44)
	EV(j, 45)
	EV(k, 46)
	EV(l, 47)
	EV(m, 48)
	EV(n, 49)
	EV(o, 50)
	EV(p, 51)
	EV(q, 52)
	EV(r, 53)
	EV(s, 54)
	EV(t, 55)
	EV(u, 56)
	EV(v, 57)
	EV(w, 58)
	EV(x, 59)
	EV(y, 60)
	EV(z, 61)
	EV(f1, 62)
	EV(f2, 63)
	EV(f3, 64)
	EV(f4, 65)
	EV(f5, 66)
	EV(f6, 67)
	EV(f7, 68)
	EV(f8, 69)
	EV(f9, 70)
	EV(f10, 71)
	EV(f11, 72)
	EV(f12, 73)
	EV(f13, 74)
	EV(f14, 75)
	EV(f15, 76)
	EV(f16, 77)
	EV(f17, 78)
	EV(f18, 79)
	EV(f19, 80)
	EV(f20, 81)
	EV(f21, 82)
	EV(f22, 83)
	EV(f23, 84)
	EV(f24, 85)
	EV(right, 86)
	EV(left, 87)
	EV(down, 88)
	EV(up, 89)
	EV(numlock, 90)
	EV(kp_divide, 91)
	EV(kp_multiply, 92)
	EV(kp_minus, 93)
	EV(kp_plus, 94)
	EV(kp_enter, 95)
	EV(kp_1, 96)
	EV(kp_2, 97)
	EV(kp_3, 98)
	EV(kp_4, 99)
	EV(kp_5, 100)
	EV(kp_6, 101)
	EV(kp_7, 102)
	EV(kp_8, 103)
	EV(kp_9, 104)
	EV(kp_0, 105)
	EV(kp_period, 106)
	EV(lctrl, 107)
	EV(lshift, 108)
	EV(lalt, 109)
	EV(lgui, 110)
	EV(rctrl, 111)
	EV(rshift, 112)
	EV(ralt, 113)
	EV(rgui, 114)
	EV(mode, 115)
	EV(left2, 116)
	EV(middle, 117)
	EV(right2, 118)
	EV(x1, 119)
	EV(x2, 120)
	EV(motion, 121)
	EV(motion_xneg, 122)
	EV(motion_ypos, 123)
	EV(motion_xpos, 124)
	EV(motion_yneg, 125)
	EV(wheel_xpos, 126)
	EV(wheel_xneg, 127)
	EV(wheel_ypos, 128)
	EV(wheel_yneg, 129)
	EV(leftstick_xneg, 130)
	EV(leftstick_ypos, 131)
	EV(leftstick_xpos, 132)
	EV(leftstick_yneg, 133)
	EV(rightstick_xneg, 134)
	EV(rightstick_ypos, 135)
	EV(rightstick_xpos, 136)
	EV(rightstick_yneg, 137)
	EV(lefttrigger, 138)
	EV(righttrigger, 139)
	EV(controller_a, 140)
	EV(controller_b, 141)
	EV(controller_x, 142)
	EV(controller_y, 143)
	EV(back, 144)
	EV(guide, 145)
	EV(start, 146)
	EV(leftstick, 147)
	EV(rightstick, 148)
	EV(leftshoulder, 149)
	EV(rightshoulder, 150)
	EV(dpad_up, 151)
	EV(dpad_down, 152)
	EV(dpad_left, 153)
	EV(dpad_right, 154)
	EV(touch_tap, 155)
	EV(touch_hold, 156)
	EV(touch_pinch_in, 157)
	EV(touch_pinch_out, 158)
	EV(touch_rotate, 159)
	EV(touch_flick, 160)
	EV(touch_press, 161)
	EV(item1, 162)
	EV(item2, 163)
	EV(item3, 164)
	EV(item4, 165)
	EV(item5, 166)
	EV(item6, 167)
	EV(item7, 168)
	EV(item8, 169)
	EV(item9, 170)
	EV(item10, 171)
	EV(item11, 172)
END_ENUM()

BEGIN_BITMASK(VisualRTTI, uint32_t)
	EV(Moveable, 0x01)
	EV(Renderable, 0x02)
	EV(Animatable, 0x04)
	EV(Visual, 0x08)
	EV(Node, 0x10)
	EV(Effect, 0x20)
	EV(Decal, 0x40)
	EV(Terrain, 0x80)
	EV(TerrainPatch, 0x100)
	EV(TerrainLayer, 0x200)
	EV(Shape, 0x400)
	EV(Light, 0x800)
	EV(LightProbe, 0x1000)
	EV(InstanceBatch, 0x2000)
END_ENUM()

BEGIN_BITMASK(VisualFlags, uint8_t)
	EV(CastShadow, 0x01)
	EV(ReceiveDecal, 0x02)
	EV(Reflecting, 0x04)
	EV(IsShadowProxy, 0x40)
	EV(AllowReceiveDecalWhenAnimated, 0x80)
END_ENUM()

BEGIN_BITMASK(VisualComponentFlags, uint8_t)
	EV(VisualSetLoaded, 1)
	EV(ForceUseAnimationBlueprint, 2)
END_ENUM()

BEGIN_BITMASK(MultiEffectHandlerFlags, uint8_t)
	EV(Detach, 0x01)
	EV(KeepRot, 0x02)
	EV(FaceSource, 0x04)
	EV(Beam, 0x08)
	EV(FollowScale, 0x10)
	EV(EffectAttached, 0x20)
END_ENUM()

BEGIN_BITMASK(VisualAttachmentFlags, uint32_t)
	EV(ExcludeFromBounds, 0x01)
	EV(KeepRot, 0x04)
	EV(KeepScale, 0x08)
	EV(UseLocalTransform, 0x10)
	EV(InheritAnimations, 0x20)
	EV(ParticleSystem, 0x1000)
	EV(DoNotUpdate, 0x4000)
	EV(DestroyWithParent, 0x8000)
	EV(Armor, 0x10000)
	EV(Weapon, 0x20000)
	EV(Wings, 0x40000)
	EV(Horns, 0x80000)
	EV(Overhead, 0x100000)
	EV(WeaponFX, 0x200000)
	EV(BonusWeaponFX, 0x400000)
	EV(WeaponOverlayFX, 0x800000)
END_ENUM()

BEGIN_BITMASK_NS(ecl, VisualSystemSetFlags, VisualSystemSetFlags, uint32_t)
	EV(Reflecting, 0x200)
	EV(ReceiveDecal, 0x400)
	EV(CastShadow, 0x800)
	EV(ClearEffects, 0x1000)
	EV(AllowTPose, 0x2000)
	EV(IsShadowProxy, 0x8000)
	EV(SomeWeaponFlag, 0x10000)
	EV(HasHair, 0x20000)
	EV(ApplyColors, 0x40000)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, TaskErrorFlags, TaskErrorFlags, uint32_t)
	EV(NotEnoughAP, 0x1)
	EV(CantReach, 0x2)
	EV(InvalidTarget, 0x4)
	EV(CantReach2, 0x8)
	EV(TooFar, 0x10)
	EV(TooHeavy, 0x20)
	EV(CancelTask, 0x40)
	EV(OutOfSight, 0x80)
	EV(OutOfCharges, 0x100)
	EV(Encumbered, 0x200)
	EV(Crippled, 0x400)
	EV(LadderBlocked, 0x800)
	EV(BlockedByShapeshift, 0x1000)
	EV(Disarmed, 0x2000)
	EV(TooSteep, 0x4000)
	EV(TooHigh, 0x8000)
	EV(CantSee, 0x10000)
	EV(NotEnoughSpace, 0x20000)
	EV(NotEnoughStrength, 0x40000)
	EV(InvalidPosition, 0x80000)
	EV(Entangled, 0x100000)
	EV(Webbed, 0x200000)
	EV(ZeroSpeed, 0x400000)
	EV(TargetBlocked, 0x800000)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, StatusControllerFlags, ClientStatusControllerFlags, uint32_t)
	EV(Dying, 0x1)
	EV(Hit, 0x2)
	EV(HitStill, 0x4)
	EV(HitIdle, 0x8)
	EV(Incapacitated, 0x10)
	EV(KnockedDown, 0x20)
	EV(Summoning, 0x40)
	EV(TeleportFallDamage, 0x80)
	EV(StoryFrozen, 0x400)
	EV(IdleAnimation, 0x800)
	EV(Sheathed, 0x1000)
	EV(Unsheathed, 0x2000)
	EV(Climbing, 0x8000)
	EV(BackstabAnimation, 0x10000)
	EV(FlankingAnimation, 0x20000)
	EV(Thrown, 0x40000)
	EV(Polymorphing, 0x80000)
	EV(Constrained, 0x100000)
	EV(Deactivated, 0x200000)
	EV(Shockwave, 0x400000)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, CharacterTaskFlags, ClientCharacterTaskFlags, uint32_t)
	EV(IsExecuting, 0x1)
	EV(OverrideCursorOnHover, 0x2)
	EV(IgnoreAP, 0x8)
	EV(CannotActivateSameType, 0x10)
	EV(CannotPreviewSameType, 0x20)
	EV(SupportsPicking, 0x40)
	EV(IgnorePreviewCancel, 0x80)
	EV(NeedsPreviewToActivate, 0x100)
	EV(NeedsTaskToActivate, 0x200)
	EV(CombatTargeting, 0x1000)
END_ENUM_NS()

BEGIN_ENUM_NS(ecl, CursorType, CursorType, uint32_t)
	EV(CursorSystem, 0)
	EV(CursorArrow, 1)
	EV(CursorArrow_Warning, 2)
	EV(CursorBow, 3)
	EV(CursorBow_Warning, 4)
	EV(CursorBow_Ground, 5)
	EV(CursorWand, 6)
	EV(CursorWand_Warning, 7)
	EV(CursorWand_Ground, 8)
	EV(CursorBackstab, 9)
	EV(CursorBackstab_Warning, 10)
	EV(CursorCast, 11)
	EV(CursorCast_Warning, 12)
	EV(CursorCombine, 13)
	EV(CursorCombine_Warning, 14)
	EV(CursorIdentify, 17)
	EV(CursorIdentify_Warning, 18)
	EV(CursorItemMove, 19)
	EV(CursorItemMove_Warning, 20)
	EV(CursorItemUse, 21)
	EV(CursorItemUse_Warning, 22)
	EV(CursorItemPickup, 23)
	EV(CursorItemPickup_Warning, 24)
	EV(CursorLock, 25)
	EV(CursorLock_Warning, 26)
	EV(CursorMelee, 27)
	EV(CursorMelee_Warning, 28)
	EV(CursorMelee_Ground, 29)
	EV(CursorOpenContainer, 30)
	EV(CursorOpenContainer_Warning, 31)
	EV(CursorOpenContainer_New, 32)
	EV(CursorOpenDoor, 33)
	EV(CursorOpenDoor_Warning, 34)
	EV(CursorPickPocket, 35)
	EV(CursorPickPocket_Warning, 36)
	EV(CursorRepair, 37)
	EV(CursorRepair_Warning, 38)
	EV(CursorShovel, 39)
	EV(CursorShovel_Warning, 40)
	EV(CursorTalk, 41)
	EV(CursorTalk_Warning, 42)
	EV(CursorWalk, 43)
	EV(CursorWalk_Warning, 44)
	EV(CursorCameraRotation, 45)
	EV(CursorListen, 46)
	EV(CursorListen_Warning, 47)
	EV(Sentinel, 48)
END_ENUM_NS()

BEGIN_ENUM(ResourceType, uint32_t)
	EV(Visual, 0)
	EV(VisualSet, 1)
	EV(Animation, 2)
	EV(AnimationSet, 3)
	EV(Texture, 4)
	EV(Material, 5)
	EV(Physics, 6)
	EV(Effect, 7)
	EV(Script, 8)
	EV(Sound, 9)
	EV(Atmosphere, 10)
	EV(AnimationBlueprint, 11)
	EV(MeshProxy, 12)
	EV(MaterialSet, 13)
END_ENUM()

BEGIN_ENUM(ActionDataType, uint32_t)
	EV(Unknown, 0)
	EV(OpenClose, 1)
	EV(Destroy, 2)
	EV(Teleport, 3)
	EV(CreateSurface, 4)
	EV(DestroyParameters, 5)
	EV(Equip, 6)
	EV(Consume, 7)
	EV(StoryUse, 8)
	EV(Door, 9)
	EV(CreatePuddle, 10)
	EV(Book, 11)
	EV(UseSkill, 12)
	EV(SkillBook, 13)
	EV(Sit, 14)
	EV(Lying, 15)
	EV(Identify, 16)
	EV(Repair, 17)
	EV(Lockpick, 18)
	EV(StoryUseInInventory, 19)
	EV(DisarmTrap, 20)
	EV(KickstarterMessageInABottle, 21)
	EV(ShowStoryElementUI, 22)
	EV(Craft, 23)
	EV(Ladder, 24)
	EV(Pyramid, 25)
	EV(PlaySound, 26)
	EV(SpawnCharacter, 27)
	EV(Constrain, 28)
	EV(Sticky, 29)
	EV(Recipe, 30)
	EV(StoryUseInInventoryOnly, 31)
END_ENUM()

BEGIN_BITMASK(SoundComponentFlags, uint32_t)
	EV(IsTemporary, 0x01)
	EV(IsTemporary2, 0x02)
	EV(AlwaysInactive, 0x04)
	EV(AlwaysActive, 0x08)
	EV(Positional, 0x10)
	EV(AlwaysInActiveVolume, 0x20)
END_ENUM()

BEGIN_ENUM_NS(ecl, CharacterSoundObjectType, CharacterSoundObjectType, uint8_t)
	EV(General, 0)
	EV(MainHand, 1)
	EV(OffHand, 2)
END_ENUM_NS()

BEGIN_ENUM(VisualTemplateVisualIndex, uint32_t)
	EV(HairHelmet, 0)
	EV(Head, 1)
	EV(Torso, 2)
	EV(Arms, 3)
	EV(Trousers, 4)
	EV(Boots, 5)
	EV(Beard, 6)
	EV(Visual8, 7)
	EV(Visual9, 8)
END_ENUM()

BEGIN_ENUM(VisualTemplateColorIndex, uint32_t)
	EV(Skin, 0)
	EV(Hair, 1)
	EV(Cloth, 2)
END_ENUM()

BEGIN_ENUM(TriggerTypeId, uint32_t)
	EV(AtmosphereTrigger, 0)
	EV(PointTrigger, 1)
	EV(SecretRegionTrigger, 2)
	EV(SoundVolumeTrigger, 3)
	EV(RegionTrigger, 4)
	EV(AIHintAreaTrigger, 5)
	EV(AISeederTrigger, 6)
	EV(AreaTrigger, 7)
	EV(CameraLockTrigger, 8)
	EV(CrimeAreaTrigger, 9)
	EV(CrimeRegionTrigger, 10)
	EV(CullTrigger, 11)
	EV(EventTrigger, 12)
	EV(MusicVolumeTrigger, 13)
	EV(PointSoundTriggerDummy, 14)
	EV(PointSoundTrigger, 15)
	EV(SpectatorTrigger, 16)
	EV(StartTrigger, 17)
	EV(StatsAreaTrigger, 18)
	EV(ExplorationTrigger, 19)
	EV(TeleportTrigger, 20)
END_ENUM()

BEGIN_ENUM_NS(aspk, PropertyType, EffectPropertyType, uint32_t)
	EV(Boolean, 0)
	EV(Integer, 1)
	EV(IntegerRange, 2)
	EV(ColorARGBKeyFrame, 3)
	EV(Float, 4)
	EV(FloatRange, 5)
	EV(FloatKeyFrame, 6)
	EV(String, 7)
	EV(Vector3, 8)
	EV(FixedFunction, 9)
	EV(FixedString, 10)
END_ENUM_NS()

BEGIN_BITMASK(EffectFlags, uint8_t)
	EV(ForgetEffect, 0x01)
	EV(PooledEffect, 0x02)
	EV(HasParent, 0x04)
	EV(Initialized, 0x08)
	EV(Playing, 0x10)
	EV(Stopped, 0x20)
	EV(TickingAllSpark, 0x40)
	EV(Released, 0x80)
END_ENUM()

BEGIN_ENUM(ObjectHandleType, uint32_t)
	EV(Unknown, 0)
	EV(Light, 1)
	EV(Visual, 2)
	EV(UIObject, 3)
	EV(Decal, 4)
	EV(Dummy, 5)
	EV(Reference, 6)
	EV(Text3D, 7)
	EV(Effect, 8)
	EV(Trigger, 9)
	EV(TerrainObject, 10)
	EV(MeshProxy, 11)
	EV(SoundVolumeTrigger, 12)
	EV(Scene, 13)
	EV(GrannyFile, 14)
	EV(CustomStatsComponent, 15)
	EV(CombatComponent, 16)
	EV(ContainerComponent, 17)
	EV(ContainerElementComponent, 18)
	EV(GMJournalNode, 19)
	EV(ClientCustomStatDefinitionComponent, 20)
	EV(ClientEgg, 21)
	EV(ClientCharacter, 22)
	EV(ClientItem, 23)
	EV(ClientProjectile, 24)
	EV(ClientScenery, 25)
	EV(ClientWallConstruction, 26)
	EV(ClientWallBase, 27)
	EV(ClientWallIntersection, 28)
	EV(ClientInventory, 29)
	EV(ClientInventoryView, 30)
	EV(ClientAlignment, 31)
	EV(ClientAlignmentData, 32)
	EV(ClientGameAction, 33)
	EV(ClientSkill, 34)
	EV(ClientStatus, 35)
	EV(ClientParty, 36)
	EV(ClientOverviewMap, 37)
	EV(ClientVignette, 38)
	EV(ClientNote, 39)
	EV(ClientPointTrigger, 40)
	EV(ClientCullTrigger, 41)
	EV(ClientCameraLockTrigger, 42)
	EV(ClientRegionTrigger, 43)
	EV(ClientSecretRegionTrigger, 44)
	EV(ClientSoundVolumeTrigger, 45)
	EV(ClientPointSoundTrigger, 46)
	EV(ClientPointSoundTriggerDummy, 47)
	EV(ClientSpectatorTrigger, 48)
	EV(ClientAtmosphereTrigger, 49)
	EV(ClientAiSeederTrigger, 50)
	EV(ClientSurface, 51)
	EV(ClientDummyGameObject, 52)
	EV(ServerCustomStatDefinitionComponent, 53)
	EV(ServerEgg, 54)
	EV(ServerCharacter, 55)
	EV(ServerItem, 56)
	EV(ServerProjectile, 57)
	EV(ServerInventory, 58)
	EV(ServerInventoryView, 59)
	EV(ServerParty, 60)
	EV(ServerOverviewMap, 61)
	EV(ServerVignette, 62)
	EV(ServerNote, 63)
	EV(ServerSurfaceAction, 64)
	EV(ServerEocPointTrigger, 65)
	EV(ServerEocAreaTrigger, 66)
	EV(ServerStartTrigger, 67)
	EV(ServerTeleportTrigger, 68)
	EV(ServerEventTrigger, 69)
	EV(ServerCrimeAreaTrigger, 70)
	EV(ServerCrimeRegionTrigger, 71)
	EV(ServerAtmosphereTrigger, 72)
	EV(ServerAIHintAreaTrigger, 73)
	EV(ServerMusicVolumeTrigger, 74)
	EV(ServerSecretRegionTrigger, 75)
	EV(ServerStatsAreaTrigger, 76)
	EV(ServerSoundVolumeTrigger, 77)
	EV(ServerRegionTrigger, 78)
	EV(ServerExplorationTrigger, 79)
	EV(Texture, 80)
	EV(Shader, 81)
	EV(IndexBuffer, 82)
	EV(VertexBuffer, 83)
	EV(VertexFormat, 84)
	EV(SamplerState, 85)
	EV(BlendState, 86)
	EV(DepthState, 87)
	EV(RasterizerState, 88)
	EV(SRV, 89)
	EV(TextureRemoveData, 90)
	EV(StructuredBuffer, 91)
	EV(Constant, 92)
	EV(ConstantBuffer, 93)
	EV(CompiledShader, 94)
	EV(TexturedFont, 95)

	// Custom handle types
	EV(ExtenderClientVisual, 100)
END_ENUM()


BEGIN_ENUM_NS(ecl, GameState, ClientGameState, uint32_t)
	EV(Unknown, 0)
	E(Init)
	E(InitMenu)
	E(InitNetwork)
	E(InitConnection)
	E(Idle)
	E(LoadMenu)
	E(Menu)
	E(Exit)
	E(SwapLevel)
	EV(LoadLevel, 10)
	E(LoadModule)
	E(LoadSession)
	E(LoadGMCampaign)
	E(UnloadLevel)
	E(UnloadModule)
	E(UnloadSession)
	E(Paused)
	E(PrepareRunning)
	E(Running)
	EV(Disconnect, 20)
	E(Join)
	E(Save)
	E(StartLoading)
	E(StopLoading)
	E(StartServer)
	E(Movie)
	E(Installation)
	E(GameMasterPause)
	E(ModReceiving)
	EV(Lobby, 30)
	E(BuildStory)
	E(LoadLoca)
END_ENUM_NS()


BEGIN_ENUM_NS(ecl, EntitySystemIndex, ClientEntitySystemIndex, uint32_t)
	// Registered from App::InitGame
	EV(AnimationBlueprintSystem, 0)
	E(ContainerComponentSystem)
	E(ContainerElementComponent)

	// Registered from BaseApp::RegisterBaseComponentAndSystemTypes
	E(VisualSystem)
	E(LightManager)
	E(LightProbeManager)
	E(DecalManager)
	E(SoundSystem)
	E(PublishingSystem)

	// Registered from ecl::EoCClient::ConfigureECS
	E(GrannySystem)
	E(TurnManager)
	E(GameActionManager)
	E(PickingHelperManager)
	E(SceneryManager)
	E(CharacterManager)
	E(GameMasterManager)
	E(ProjectileManager)
	E(TriggerManager)
	E(ItemManager)
	E(EggManager)
	E(CustomStatsSystem)
	E(PhysXScene)
	E(SurfaceManager)
	E(AtmosphereManager)
	E(SeeThroughManager)
	E(CameraSplineSystem)
	E(EncounterManager)
	E(GameMasterCampaignManager)
	E(MusicManager)
	E(PingBeaconManager)
	E(LEDSystem)
	E(GMJournalSystem)
	E(EquipmentVisualsSystem)
END_ENUM_NS()


BEGIN_ENUM_NS(ecl, EntityComponentIndex, ClientEntityComponentIndex, uint32_t)
	// Registered from App::InitGame
	EV(AnimationBlueprint, 0)
	E(Spline)
	E(Combat)
	E(CustomStats)
	E(GameMaster)
	E(GMJournalNode)
	E(Container)
	E(ContainerElement)

	// Registered from BaseApp::RegisterBaseComponentAndSystemTypes
	E(Visual)
	E(Light)
	E(LightProbe) // 10
	E(Decal)
	E(Sound)
	E(PublishingRequest)
	E(Effect)
	E(ParentEntity)

	// Registered from ecl::EoCClient::ConfigureECS
	E(Net)
	E(OverviewMap)
	E(Vignette)
	E(Note)
	E(CustomStatDefinition) // 20
	E(Scenery)
	E(Item)
	E(Character)
	E(Egg)
	E(Projectile)
	E(PointTrigger)
	E(CullTrigger)
	E(CameraLockTrigger)
	E(RegionTrigger)
	E(SecretRegionTrigger) // 30
	E(SoundVolumeTrigger)
	E(PointSoundTrigger)
	E(PointSoundTriggerDummy)
	E(SpectatorTrigger)
	E(AtmosphereTrigger)
	E(AiSeederTrigger)
	E(PingBeacon)
	E(EquipmentVisualsComponent)
END_ENUM_NS()


BEGIN_ENUM(MovementStateType, uint32_t)
	EV(Movement, 2)
	EV(MoveTo, 3)
END_ENUM()


BEGIN_ENUM(ActionStateType, uint32_t)
	EV(Attack, 2)
	EV(Die, 3)
	EV(Hit, 4)
	EV(Idle, 5)
	EV(Animation, 6)
	EV(PrepareSkill, 7)
	EV(UseSkill, 8)
	EV(PickUp, 9)
	EV(Drop, 10)
	EV(MoveItem, 11)
	EV(KnockedDown, 12)
	EV(Summoning, 13)
	EV(Polymorphing, 14)
	EV(UseItem, 15)
	EV(CombineItem, 17)
	EV(TeleportFall, 18)
	EV(Sheath, 19)
	EV(Unsheath, 20)
	EV(Identify, 21)
	EV(Repair, 22)
	EV(Lockpick, 23)
	EV(DisarmTrap, 24)
	EV(Incapacitated, 25)
	EV(JumpFlight, 26)
END_ENUM()


BEGIN_ENUM_NS(esv, TaskType, ServerTaskType, uint32_t)
	EV(MoveToLocation, 0)
	EV(MoveToObject, 1)
	EV(Flee, 2)
	EV(MoveInRange, 3)
	EV(TeleportToLocation, 4)
	EV(Appear, 6)
	EV(Disappear, 7)
	EV(FollowNPC, 8)
	EV(Wander, 9)
	EV(Steer, 10)
	EV(PlayAnimation, 11)
	EV(Drop, 12)
	EV(PickupItem, 13)
	EV(UseItem, 14)
	EV(MoveItem, 15)
	EV(Attack, 16)
	EV(Resurrect, 17)
	EV(UseSkill, 18)
	EV(MoveToAndTalk, 19)
END_ENUM_NS()


BEGIN_BITMASK_NS(esv, StatusControllerFlags, ServerStatusControllerFlags, uint32_t)
	EV(Dying, 0x1)
	EV(PlayingDeathAnimation, 0x2)
	EV(PlayHitAnimation, 0x4)
	EV(PlayHitStillAnimation, 0x8)
	EV(HitAnimationFlag3, 0x10)
	EV(Incapacitated, 0x20)
	EV(KnockedDown, 0x40)
	EV(Summoning, 0x80)
	EV(TeleportFalling, 0x100)
	EV(CombatReady, 0x200)
	EV(CancelCurrentAction, 0x400)
	EV(HitAnimationFlag1, 0x800)
	EV(SheathWeapon, 0x1000)
	EV(UnsheathWeapon, 0x2000)
	EV(SteerToEnemy, 0x4000)
	EV(HitAnimationFlag2, 0x8000)
	EV(HitAnimationFlag2b, 0x10000)
	EV(JumpFlight, 0x20000)
	EV(Polymorphing, 0x40000)
	EV(CancelSkill, 0x80000)
	EV(CancelCurrentAction2, 0x100000)
	EV(EndTurn, 0x200000)
END_ENUM_NS()


BEGIN_ENUM_NS(esv, GameState, ServerGameState, uint32_t)
	EV(Unknown, 0)
	E(Uninitialized)
	E(Init)
	E(Idle)
	E(Exit)
	E(LoadLevel)
	E(LoadModule)
	E(LoadGMCampaign)
	E(LoadSession)
	E(UnloadLevel)
	EV(UnloadModule, 10)
	E(UnloadSession)
	E(Sync)
	E(Paused)
	E(Running)
	E(Save)
	E(Disconnect)
	E(GameMasterPause)
	E(BuildStory)
	E(ReloadStory)
	EV(Installation, 20)
END_ENUM_NS()


BEGIN_ENUM(ExtComponentType, uint32_t)
	E(Combat)
	E(ServerCustomStatDefinition)
	E(ServerItem)
	E(ServerCharacter)
	E(ServerProjectile)

	E(ClientItem)
	E(ClientCharacter)

	E(Max)
END_ENUM()


BEGIN_ENUM_NS(esv, EntitySystemIndex, ServerEntitySystemIndex, uint32_t)
	// Registered from App::InitGame
	EV(AnimationBlueprintSystem, 0)
	E(ContainerComponentSystem)
	E(ContainerElementComponent)

	// Registered from esv::EoCServer::ConfigureECS
	E(TurnManager)
	E(SightManager)
	E(GameActionManager)
	E(SurfaceManager)
	E(CharacterManager)
	E(ProjectileManager)
	E(TriggerManager)
	E(ItemManager)
	E(EggManager)
	E(EffectManager)
	E(ShroudManager)
	E(EnvironmentalStatusManager)
	E(NetEntityManager)
	E(CustomStatsSystem)
	E(RewardManager)
	E(CharacterSplineSystem)
	E(CameraSplineSystem)
	E(GameMasterManager)
	E(GameMasterCampaignManager)
	E(GMJournalSystem)
END_ENUM_NS()


BEGIN_ENUM_NS(esv, EntityComponentIndex, ServerEntityComponentIndex, uint32_t)
	// Registered from App::InitGame
	EV(AnimationBlueprint, 0)
	E(Spline)
	E(Combat)
	E(CustomStats)
	E(GameMaster)
	E(GMJournalNode)
	E(Container)
	E(ContainerElement)

	// Registered from esv::EocServer::ConfigureECS
	E(Net)
	E(OverviewMap)
	E(Note)
	E(Vignette)
	E(CustomStatDefinition)
	E(Item)
	E(Character)
	E(Egg)
	E(Projectile)
	E(EoCPointTrigger)
	E(EoCAreaTrigger)
	E(StartTrigger)
	E(TeleportTrigger)
	E(EventTrigger)
	E(CrimeAreaTrigger)
	E(CrimeRegionTrigger)
	E(AtmosphereTrigger)
	E(AIHintAreaTrigger)
	E(MusicVolumeTrigger)
	E(SecretRegionTrigger)
	E(StatsAreaTrigger)
	E(SoundVolumeTrigger)
	E(RegionTrigger)
	E(ExplorationTrigger)
	E(Effect)
END_ENUM_NS()

BEGIN_ENUM(NetMessage, uint32_t)
	EV(NETMSG_HOST_WELCOME, 1)
	EV(NETMSG_HOST_REFUSE, 2)
	EV(NETMSG_HOST_REFUSEPLAYER, 3)
	EV(NETMSG_HOST_LEFT, 4)
	EV(NETMSG_CLIENT_CONNECT, 5)
	EV(NETMSG_CLIENT_ACCEPT, 6)
	EV(NETMSG_CLIENT_JOINED, 7)
	EV(NETMSG_CLIENT_LEFT, 8)
	EV(NETMSG_PLAYER_CONNECT, 9)
	EV(NETMSG_PLAYER_DISCONNECT, 10)
	EV(NETMSG_PLAYER_ACCEPT, 11)
	EV(NETMSG_PLAYER_JOINED, 12)
	EV(NETMSG_PLAYER_LEFT, 13)
	EV(NETMSG_VOICEDATA, 14)
	EV(NETMSG_SKIPMOVIE_RESULT, 15)
	EV(NETMSG_SURFACE_CREATE, 17)
	EV(NETMSG_SURFACE_META, 18)
	EV(NETMSG_GAMEACTION, 19)
	EV(NETMSG_CHARACTER_CREATE, 20)
	EV(NETMSG_CHARACTER_DESTROY, 21)
	EV(NETMSG_CHARACTER_CONFIRMATION, 22)
	EV(NETMSG_CHARACTER_ACTIVATE, 23)
	EV(NETMSG_CHARACTER_DEACTIVATE, 24)
	EV(NETMSG_CHARACTER_ASSIGN, 25)
	EV(NETMSG_CHARACTER_POSITION, 26)
	EV(NETMSG_CHARACTER_POSITION_SYNC, 27)
	EV(NETMSG_CHARACTER_STEERING, 28)
	EV(NETMSG_CHARACTER_ACTION, 29)
	EV(NETMSG_CHARACTER_ACTION_DATA, 30)
	EV(NETMSG_CHARACTER_ACTION_REQUEST_RESULT, 31)
	EV(NETMSG_CHARACTER_STATUS, 32)
	EV(NETMSG_CHARACTER_STATUS_LIFETIME, 33)
	EV(NETMSG_CHARACTER_UPDATE, 34)
	EV(NETMSG_CHARACTER_CONTROL, 35)
	EV(NETMSG_CHARACTER_SET_STORY_NAME, 36)
	EV(NETMSG_CHARACTER_DIALOG, 37)
	EV(NETMSG_CHARACTER_SKILLBAR, 38)
	EV(NETMSG_CHARACTER_SELECTEDSKILLSET, 39)
	EV(NETMSG_CHARACTER_USE_AP, 40)
	EV(NETMSG_CHARACTER_UPGRADE, 41)
	EV(NETMSG_CHARACTER_STATS_UPDATE, 42)
	EV(NETMSG_CHARACTER_AOO, 43)
	EV(NETMSG_CHARACTER_BOOST, 44)
	EV(NETMSG_CHARACTER_CUSTOMIZATION, 45)
	EV(NETMSG_CHARACTER_TRANSFORM, 46)
	EV(NETMSG_CHARACTER_TELEPORT, 47)
	EV(NETMSG_CHARACTER_PICKPOCKET, 48)
	EV(NETMSG_CHARACTER_OFFSTAGE, 49)
	EV(NETMSG_CHARACTER_LOCK_ABILITY, 50)
	EV(NETMSG_CHARACTER_LOOT_CORPSE, 51)
	EV(NETMSG_CHARACTER_ITEM_USED, 52)
	EV(NETMSG_CHARACTER_CORPSE_LOOTABLE, 53)
	EV(NETMSG_CHARACTER_IN_DIALOG, 54)
	EV(NETMSG_COMBAT_TURN_TIMER, 55)
	EV(NETMSG_COMBAT_COMPONENT_SYNC, 56)
	EV(NETMSG_UPDATE_COMBAT_GROUP_INFO, 57)
	EV(NETMSG_PARTY_CREATE, 58)
	EV(NETMSG_PARTY_DESTROY, 59)
	EV(NETMSG_PARTYGROUP, 60)
	EV(NETMSG_PARTYORDER, 61)
	EV(NETMSG_PARTYUPDATE, 62)
	EV(NETMSG_PARTYUSER, 63)
	EV(NETMSG_SHROUD_UPDATE, 64)
	EV(NETMSG_SHROUD_FRUSTUM_UPDATE, 65)
	EV(NETMSG_SECRET_REGION_UNLOCK, 66)
	EV(NETMSG_ITEM_CREATE, 67)
	EV(NETMSG_ITEM_DESTROY, 68)
	EV(NETMSG_ITEM_ACTIVATE, 69)
	EV(NETMSG_ITEM_DEACTIVATE, 70)
	EV(NETMSG_ITEM_DESTINATION, 71)
	EV(NETMSG_ITEM_UPDATE, 72)
	EV(NETMSG_ITEM_USE_REMOTELY, 73)
	EV(NETMSG_ITEM_MOVE_TO_WORLD, 74)
	EV(NETMSG_ITEM_MOVE_TO_INVENTORY, 75)
	EV(NETMSG_ITEM_ACTION, 76)
	EV(NETMSG_ITEM_STATUS, 77)
	EV(NETMSG_ITEM_STATUS_LIFETIME, 78)
	EV(NETMSG_ITEM_TRANSFORM, 79)
	EV(NETMSG_ITEM_CONFIRMATION, 80)
	EV(NETMSG_ITEM_OFFSTAGE, 81)
	EV(NETMSG_ITEM_MOVED_INFORM, 82)
	EV(NETMSG_ITEM_MOVE_UUID, 83)
	EV(NETMSG_INVENTORY_CREATE, 84)
	EV(NETMSG_INVENTORY_CREATE_AND_OPEN, 85)
	EV(NETMSG_INVENTORY_DESTROY, 86)
	EV(NETMSG_INVENTORY_VIEW_CREATE, 87)
	EV(NETMSG_INVENTORY_VIEW_DESTROY, 88)
	EV(NETMSG_INVENTORY_VIEW_UPDATE_ITEMS, 89)
	EV(NETMSG_INVENTORY_VIEW_UPDATE_PARENTS, 90)
	EV(NETMSG_INVENTORY_VIEW_SORT, 91)
	EV(NETMSG_INVENTORY_ITEM_UPDATE, 92)
	EV(NETMSG_INVENTORY_LOCKSTATE_SYNC, 93)
	EV(NETMSG_PROJECTILE_CREATE, 94)
	EV(NETMSG_PROJECTILE_EXPLOSION, 95)
	EV(NETMSG_EGG_CREATE, 96)
	EV(NETMSG_EGG_DESTROY, 97)
	EV(NETMSG_TURNBASED_START, 98)
	EV(NETMSG_TURNBASED_STOP, 99)
	EV(NETMSG_TURNBASED_ROUND, 100)
	EV(NETMSG_TURNBASED_ORDER, 101)
	EV(NETMSG_TURNBASED_SUMMONS, 102)
	EV(NETMSG_TURNBASED_SETTEAM, 103)
	EV(NETMSG_TURNBASED_FLEECOMBATRESULT, 104)
	EV(NETMSG_NET_ENTITY_CREATE, 105)
	EV(NETMSG_NET_ENTITY_DESTROY, 106)
	EV(NETMSG_PEER_ACTIVATE, 107)
	EV(NETMSG_PEER_DEACTIVATE, 108)
	EV(NETMSG_SKILL_CREATE, 109)
	EV(NETMSG_SKILL_DESTROY, 110)
	EV(NETMSG_SKILL_UPDATE, 111)
	EV(NETMSG_SKILL_LEARN, 112)
	EV(NETMSG_SKILL_UNLEARN, 113)
	EV(NETMSG_SKILL_ACTIVATE, 114)
	EV(NETMSG_SKILL_REMOVED, 115)
	EV(NETMSG_EFFECT_CREATE, 116)
	EV(NETMSG_EFFECT_FORGET, 117)
	EV(NETMSG_EFFECT_DESTROY, 118)
	EV(NETMSG_GAMECONTROL_UPDATE_S2C, 119)
	EV(NETMSG_GAMECONTROL_UPDATE_C2S, 120)
	EV(NETMSG_GAMECONTROL_PRICETAG, 121)
	EV(NETMSG_FORCE_SHEATH, 122)
	EV(NETMSG_PLAYSOUND, 123)
	EV(NETMSG_PLAYMOVIE, 124)
	EV(NETMSG_PLAY_HUD_SOUND, 125)
	EV(NETMSG_CHARACTER_ERROR, 126)
	EV(NETMSG_ALIGNMENT_CREATE, 127)
	EV(NETMSG_ALIGNMENT_SET, 128)
	EV(NETMSG_ALIGNMENT_RELATION, 129)
	EV(NETMSG_ALIGNMENT_CLEAR, 130)
	EV(NETMSG_CACHETEMPLATE, 131)
	EV(NETMSG_OVERHEADTEXT, 132)
	EV(NETMSG_COMBATLOG, 133)
	EV(NETMSG_COMBATLOGITEMINTERACTION, 134)
	EV(NETMSG_SCREEN_FADE, 135)
	EV(NETMSG_SCREEN_FADE_DONE, 136)
	EV(NETMSG_OPEN_CUSTOM_BOOK_UI_MESSAGE, 137)
	EV(NETMSG_CLOSE_CUSTOM_BOOK_UI_MESSAGE, 138)
	EV(NETMSG_OPEN_KICKSTARTER_BOOK_UI_MESSAGE, 139)
	EV(NETMSG_OPEN_MESSAGE_BOX_MESSAGE, 140)
	EV(NETMSG_CLOSED_MESSAGE_BOX_MESSAGE, 141)
	EV(NETMSG_OPEN_WAYPOINT_UI_MESSAGE, 142)
	EV(NETMSG_CLOSE_UI_MESSAGE, 143)
	EV(NETMSG_SHOW_ENTER_REGION_UI_MESSAGE, 144)
	EV(NETMSG_JOURNAL_RESET, 145)
	EV(NETMSG_QUEST_UPDATE, 146)
	EV(NETMSG_QUEST_CATEGORY_UPDATE, 147)
	EV(NETMSG_QUEST_STATE, 148)
	EV(NETMSG_SECRET_UPDATE, 149)
	EV(NETMSG_TROPHY_UPDATE, 150)
	EV(NETMSG_JOURNALRECIPE_UPDATE, 151)
	EV(NETMSG_MARKER_UI_CREATE, 152)
	EV(NETMSG_MARKER_UI_UPDATE, 153)
	EV(NETMSG_QUEST_TRACK, 154)
	EV(NETMSG_QUEST_POSTPONE, 155)
	EV(NETMSG_UI_QUESTSELECTED, 156)
	EV(NETMSG_MYSTERY_STATE, 157)
	EV(NETMSG_MYSTERY_UPDATE, 158)
	EV(NETMSG_PARTYFORMATION, 159)
	EV(NETMSG_STOP_FOLLOW, 160)
	EV(NETMSG_NOTIFICATION, 161)
	EV(NETMSG_GAMEOVER, 162)
	EV(NETMSG_REGISTER_WAYPOINT, 163)
	EV(NETMSG_FLAG_UPDATE, 164)
	EV(NETMSG_PARTY_CONSUMED_ITEMS, 165)
	EV(NETMSG_PARTY_UNLOCKED_RECIPE, 166)
	EV(NETMSG_PARTY_SPLIT_NOTIFICATION, 167)
	EV(NETMSG_PARTY_MERGE_NOTIFICATION, 168)
	EV(NETMSG_DIALOG_STATE_MESSAGE, 169)
	EV(NETMSG_DIALOG_NODE_MESSAGE, 170)
	EV(NETMSG_DIALOG_ANSWER_MESSAGE, 171)
	EV(NETMSG_DIALOG_ANSWER_HIGHLIGHT_MESSAGE, 172)
	EV(NETMSG_DIALOG_HISTORY_MESSAGE, 173)
	EV(NETMSG_DIALOG_ACTORJOINS_MESSAGE, 174)
	EV(NETMSG_DIALOG_ACTORLEAVES_MESSAGE, 175)
	EV(NETMSG_GM_SPAWN, 176)
	EV(NETMSG_GM_DELETE, 177)
	EV(NETMSG_GM_ITEM_CHANGE, 178)
	EV(NETMSG_GM_DRAW_SURFACE, 179)
	EV(NETMSG_GM_TOGGLE_OVERVIEWMAP, 180)
	EV(NETMSG_GM_TOGGLE_VIGNETTE, 181)
	EV(NETMSG_GM_DAMAGE, 182)
	EV(NETMSG_GM_EXPORT, 183)
	EV(NETMSG_GM_REMOVE_EXPORTED, 184)
	EV(NETMSG_GM_HEAL, 185)
	EV(NETMSG_GM_ADD_EXPERIENCE, 186)
	EV(NETMSG_GM_TOGGLE_PAUSE, 187)
	EV(NETMSG_GM_REQUEST_ROLL, 188)
	EV(NETMSG_GM_ROLL, 189)
	EV(NETMSG_GM_PASS_ROLL, 190)
	EV(NETMSG_GM_REMOVE_ROLL, 191)
	EV(NETMSG_GM_TICK_ROLLS, 192)
	EV(NETMSG_GM_CHANGE_LEVEL, 193)
	EV(NETMSG_GM_VIGNETTE_ANSWER, 194)
	EV(NETMSG_GM_POSITION_SYNC, 195)
	EV(NETMSG_GM_TELEPORT, 196)
	EV(NETMSG_GM_TRAVEL_TO_DESTINATION, 197)
	EV(NETMSG_GM_STOP_TRAVELING, 198)
	EV(NETMSG_GM_CAMPAIGN_SAVE, 199)
	EV(NETMSG_GM_SYNC_SCENES, 200)
	EV(NETMSG_GM_SYNC_OVERVIEW_MAPS, 201)
	EV(NETMSG_GM_SYNC_VIGNETTES, 202)
	EV(NETMSG_GM_SYNC_ASSETS, 203)
	EV(NETMSG_GM_ASSETS_PENDING_SYNCS_INFO, 204)
	EV(NETMSG_GM_REORDER_ELEMENTS, 205)
	EV(NETMSG_GM_SET_START_POINT, 206)
	EV(NETMSG_GM_CONFIGURE_CAMPAIGN, 207)
	EV(NETMSG_GM_LOAD_CAMPAIGN, 208)
	EV(NETMSG_GM_REQUEST_CAMPAIGN_DATA, 209)
	EV(NETMSG_GM_POSSESS, 210)
	EV(NETMSG_GM_CHANGE_NAME, 211)
	EV(NETMSG_GM_DUPLICATE, 212)
	EV(NETMSG_GM_ITEM_USE, 213)
	EV(NETMSG_GM_HOST, 214)
	EV(NETMSG_GM_TOGGLE_PEACE, 215)
	EV(NETMSG_GM_MAKE_TRADER, 216)
	EV(NETMSG_GM_SET_INTERESTED_CHARACTER, 217)
	EV(NETMSG_GM_GIVE_REWARD, 218)
	EV(NETMSG_GM_SET_STATUS, 219)
	EV(NETMSG_GM_REMOVE_STATUS, 220)
	EV(NETMSG_GM_CLEAR_STATUSES, 221)
	EV(NETMSG_GM_CREATE_ITEM, 222)
	EV(NETMSG_GM_SET_ATMOSPHERE, 223)
	EV(NETMSG_GM_SOUND_PLAYBACK, 224)
	EV(NETMSG_GM_CHANGE_SCENE_NAME, 225)
	EV(NETMSG_GM_CHANGE_SCENE_PATH, 226)
	EV(NETMSG_GM_EDIT_ITEM, 227)
	EV(NETMSG_GM_EDIT_CHARACTER, 228)
	EV(NETMSG_GM_UI_OPEN_STICKY, 229)
	EV(NETMSG_GM_SYNC_NOTES, 230)
	EV(NETMSG_GM_MAKE_FOLLOWER, 231)
	EV(NETMSG_GM_DEACTIVATE, 232)
	EV(NETMSG_GM_INVENTORY_OPERATION, 233)
	EV(NETMSG_GM_SET_REPUTATION, 234)
	EV(NETMSG_GM_REQUEST_CHARACTERS_REROLL, 235)
	EV(NETMSG_TRADE_ACTION, 236)
	EV(NETMSG_CAMERA_ACTIVATE, 237)
	EV(NETMSG_CAMERA_ROTATE, 238)
	EV(NETMSG_CAMERA_TARGET, 239)
	EV(NETMSG_CAMERA_MODE, 240)
	EV(NETMSG_ATMOSPHERE_OVERRIDE, 241)
	EV(NETMSG_CHAT, 242)
	EV(NETMSG_GAMETIME_SYNC, 243)
	EV(NETMSG_PARTY_NPC_DATA, 244)
	EV(NETMSG_CHARACTER_ANIMATION_SET_UPDATE, 245)
	EV(NETMSG_REQUESTAUTOSAVE, 246)
	EV(NETMSG_SAVEGAME, 247)
	EV(NETMSG_SAVEGAMEHANDSHAKE, 248)
	EV(NETMSG_MODULE_LOAD, 249)
	EV(NETMSG_MODULE_LOADED, 250)
	EV(NETMSG_MODULES_DOWNLOAD, 251)
	EV(NETMSG_SESSION_LOAD, 252)
	EV(NETMSG_SESSION_LOADED, 253)
	EV(NETMSG_LEVEL_LOAD, 254)
	EV(NETMSG_LEVEL_LOADED, 255)
	EV(NETMSG_LOAD_START, 256)
	EV(NETMSG_LEVEL_INSTANTIATE_SWAP, 257)
	EV(NETMSG_LEVEL_SWAP_READY, 258)
	EV(NETMSG_LEVEL_SWAP_COMPLETE, 259)
	EV(NETMSG_LEVEL_START, 260)
	EV(NETMSG_CHARACTERCREATION_DONE, 261)
	EV(NETMSG_CHARACTERCREATION_READY, 262)
	EV(NETMSG_CHARACTERCREATION_NOT_READY, 263)
	EV(NETMSG_CHANGE_COMBAT_FORMATION, 264)
	EV(NETMSG_DIFFICULTY_CHANGED, 265)
	EV(NETMSG_CHARACTER_CHANGE_OWNERSHIP, 266)
	EV(NETMSG_RUNECRAFT, 267)
	EV(NETMSG_JOURNALDIALOGLOG_UPDATE, 268)
	EV(NETMSG_SHOW_TUTORIAL_MESSAGE, 269)
	EV(NETMSG_ACHIEVEMENT_UNLOCKED_MESSAGE, 270)
	EV(NETMSG_NOTIFY_COMBINE_FAILED_MESSAGE, 271)
	EV(NETMSG_SAVEGAME_LOAD_FAIL, 272)
	EV(NETMSG_SERVER_COMMAND, 273)
	EV(NETMSG_SERVER_NOTIFICATION, 274)
	EV(NETMSG_ITEM_ENGRAVE, 275)
	EV(NETMSG_STORY_ELEMENT_UI, 276)
	EV(NETMSG_OPEN_CRAFT_UI_MESSAGE, 277)
	EV(NETMSG_ACHIEVEMENT_PROGRESS_MESSAGE, 278)
	EV(NETMSG_UNLOCK_WAYPOINT, 279)
	EV(NETMSG_DISCOVERED_PORTALS, 280)
	EV(NETMSG_LOCK_WAYPOINT, 281)
	EV(NETMSG_CRAFT_RESULT, 282)
	EV(NETMSG_UNLOCK_ITEM, 283)
	EV(NETMSG_TELEPORT_PYRAMID, 284)
	EV(NETMSG_TELEPORT_WAYPOINT, 285)
	EV(NETMSG_REALTIME_MULTIPLAY, 286)
	EV(NETMSG_DIALOG_LISTEN, 287)
	EV(NETMSG_MUSIC_STATE, 288)
	EV(NETMSG_MUSIC_EVENT, 289)
	EV(NETMSG_LOBBY_DATAUPDATE, 290)
	EV(NETMSG_LOBBY_USERUPDATE, 291)
	EV(NETMSG_LOBBY_SPECTATORUPDATE, 292)
	EV(NETMSG_LOBBY_COMMAND, 293)
	EV(NETMSG_LOBBY_CHARACTER_SELECT, 294)
	EV(NETMSG_LOBBY_STARTGAME, 295)
	EV(NETMSG_LOBBY_SURRENDER, 296)
	EV(NETMSG_LOBBY_RETURN, 297)
	EV(NETMSG_UPDATE_CHARACTER_TAGS, 298)
	EV(NETMSG_UPDATE_ITEM_TAGS, 299)
	EV(NETMSG_AITEST_UPDATE, 300)
	EV(NETMSG_TELEPORT_ACK, 301)
	EV(NETMSG_PARTYCREATEGROUP, 302)
	EV(NETMSG_ARENA_RESULTS, 303)
	EV(NETMSG_CAMERA_SPLINE, 304)
	EV(NETMSG_CHARACTER_COMPANION_CUSTOMIZATION, 305)
	EV(NETMSG_READYCHECK, 306)
	EV(NETMSG_PAUSE, 307)
	EV(NETMSG_UNPAUSE, 308)
	EV(NETMSG_SET_CHARACTER_ARCHETYPE, 309)
	EV(NETMSG_DIPLOMACY, 310)
	EV(NETMSG_TRIGGER_CREATE, 311)
	EV(NETMSG_TRIGGER_DESTROY, 312)
	EV(NETMSG_TRIGGER_UPDATE, 313)
	EV(NETMSG_PING_BEACON, 314)
	EV(NETMSG_CUSTOM_STATS_DEFINITION_CREATE, 315)
	EV(NETMSG_CUSTOM_STATS_DEFINITION_REMOVE, 316)
	EV(NETMSG_CUSTOM_STATS_DEFINITION_UPDATE, 317)
	EV(NETMSG_CUSTOM_STATS_CREATE, 318)
	EV(NETMSG_CUSTOM_STATS_UPDATE, 319)
	EV(NETMSG_GIVE_REWARD, 320)
	EV(NETMSG_LOAD_GAME_WITH_ADDONS, 321)
	EV(NETMSG_LOAD_GAME_WITH_ADDONS_FAIL, 322)
	EV(NETMSG_SHOW_ERROR, 323)
	EV(NETMSG_CLIENT_GAME_SETTINGS, 324)
	EV(NETMSG_GM_JOURNAL_UPDATE, 325)
	EV(NETMSG_STORY_VERSION, 326)
	EV(NETMSG_MULTIPLE_TARGET_OPERATION, 327)
	EV(NETMSG_DLC_UPDATE, 329)
	EV(NETMSG_MUTATORS_ENABLED, 330)
	EV(NETMSG_HACK_TELL_BUILDNAME, 331)
	
	EV(NETMSG_SCRIPT_EXTENDER, 400)
END_ENUM()


BEGIN_ENUM(PlayerUpgradeAttribute, int)
	EV(Strength, 0)
	EV(Finesse, 1)
	EV(Intelligence, 2)
	EV(Constitution, 3)
	EV(Memory, 4)
	EV(Wits, 5)
END_ENUM()


BEGIN_ENUM_NS(stats, CharacterStatGetterType, CharacterStatGetterType, int)
	EV(MaxMp, 0)
	EV(APStart, 1)
	EV(APRecovery, 2)
	EV(APMaximum, 3)

	EV(Strength, 4)
	EV(Finesse, 5)
	EV(Intelligence, 6)
	EV(Constitution, 7)
	EV(Memory, 8)
	EV(Wits, 9)

	EV(Accuracy, 10)
	EV(Dodge, 11)
	EV(CriticalChance, 12)

	EV(FireResistance, 13)
	EV(EarthResistance, 14)
	EV(WaterResistance, 15)
	EV(AirResistance, 16)
	EV(PoisonResistance, 17)
	EV(ShadowResistance, 18)
	EV(CustomResistance, 19)

	EV(LifeSteal, 20)
	EV(Sight, 21)
	EV(Hearing, 22)
	EV(Movement, 23)
	EV(Initiative, 24)
	EV(BlockChance, 25)
	EV(ChanceToHitBoost, 26)

	// Implemented using custom functions
	E(PhysicalResistance)
	E(PiercingResistance)
	E(CorrosiveResistance)
	E(MagicResistance)
	E(DamageBoost)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, PropertyType, StatPropertyType, uint32_t)
	EV(Custom, 0x0)
	EV(Status, 0x1)
	EV(SurfaceChange, 0x2)
	EV(GameAction, 0x3)
	EV(OsirisTask, 0x4)
	EV(Sabotage, 0x5)
	EV(Summon, 0x6)
	EV(Force, 0x7)
	EV(CustomDescription, 0x10)
	EV(Extender, 0x11)
END_ENUM_NS()

BEGIN_BITMASK_NS(stats, PropertyContext, PropertyContext, uint8_t)
	EV(Target, 0x01)
	EV(AoE, 0x02)
	EV(Self, 0x04)
	EV(SelfOnHit, 0x08)
	EV(SelfOnEquip, 0x10)
END_ENUM_NS()

BEGIN_ENUM_NS(stats, RequirementType, RequirementType, uint32_t)
	EV(None, 0)
	EV(Level, 1)
	EV(Strength, 2)
	EV(Finesse, 3)
	EV(Intelligence, 4)
	EV(Constitution, 5)
	EV(Memory, 6)
	EV(Wits, 7)
	EV(WarriorLore, 8)
	EV(RangerLore, 9)
	EV(RogueLore, 10)
	EV(SingleHanded, 11)
	EV(TwoHanded, 12)
	EV(PainReflection, 13)
	EV(Ranged, 14)
	EV(Shield, 15)
	EV(Reflexes, 16)
	EV(PhysicalArmorMastery, 17)
	EV(MagicArmorMastery, 18)
	EV(Vitality, 19)
	EV(Sourcery, 20)
	EV(Telekinesis, 21)
	EV(FireSpecialist, 22)
	EV(WaterSpecialist, 23)
	EV(AirSpecialist, 24)
	EV(EarthSpecialist, 25)
	EV(Necromancy, 26)
	EV(Summoning, 27)
	EV(Polymorph, 28)
	EV(Sulfurology, 29)
	EV(Repair, 30)
	EV(Sneaking, 31)
	EV(Pickpocket, 32)
	EV(Thievery, 33)
	EV(Loremaster, 34)
	EV(Crafting, 35)
	EV(Barter, 36)
	EV(Charm, 37)
	EV(Intimidate, 38)
	EV(Reason, 39)
	EV(Persuasion, 40)
	EV(Leadership, 41)
	EV(Luck, 42)
	EV(DualWielding, 43)
	EV(Wand, 44)
	EV(Perseverance, 45)
	EV(TALENT_ItemMovement, 46)
	EV(TALENT_ItemCreation, 47)
	EV(TALENT_Flanking, 48)
	EV(TALENT_AttackOfOpportunity, 49)
	EV(TALENT_Backstab, 50)
	EV(TALENT_Trade, 51)
	EV(TALENT_Lockpick, 52)
	EV(TALENT_ChanceToHitRanged, 53)
	EV(TALENT_ChanceToHitMelee, 54)
	EV(TALENT_Damage, 55)
	EV(TALENT_ActionPoints, 56)
	EV(TALENT_ActionPoints2, 57)
	EV(TALENT_Criticals, 58)
	EV(TALENT_IncreasedArmor, 59)
	EV(TALENT_Sight, 60)
	EV(TALENT_ResistFear, 61)
	EV(TALENT_ResistKnockdown, 62)
	EV(TALENT_ResistStun, 63)
	EV(TALENT_ResistPoison, 64)
	EV(TALENT_ResistSilence, 65)
	EV(TALENT_ResistDead, 66)
	EV(TALENT_Carry, 67)
	EV(TALENT_Kinetics, 68)
	EV(TALENT_Repair, 69)
	EV(TALENT_ExpGain, 70)
	EV(TALENT_ExtraStatPoints, 71)
	EV(TALENT_ExtraSkillPoints, 72)
	EV(TALENT_Durability, 73)
	EV(TALENT_Awareness, 74)
	EV(TALENT_Vitality, 75)
	EV(TALENT_FireSpells, 76)
	EV(TALENT_WaterSpells, 77)
	EV(TALENT_AirSpells, 78)
	EV(TALENT_EarthSpells, 79)
	EV(TALENT_Charm, 80)
	EV(TALENT_Intimidate, 81)
	EV(TALENT_Reason, 82)
	EV(TALENT_Luck, 83)
	EV(TALENT_Initiative, 84)
	EV(TALENT_InventoryAccess, 85)
	EV(TALENT_AvoidDetection, 86)
	EV(TALENT_AnimalEmpathy, 87)
	EV(TALENT_Escapist, 88)
	EV(TALENT_StandYourGround, 89)
	EV(TALENT_SurpriseAttack, 90)
	EV(TALENT_LightStep, 91)
	EV(TALENT_ResurrectToFullHealth, 92)
	EV(TALENT_Scientist, 93)
	EV(TALENT_Raistlin, 94)
	EV(TALENT_MrKnowItAll, 95)
	EV(TALENT_WhatARush, 96)
	EV(TALENT_FaroutDude, 97)
	EV(TALENT_Leech, 98)
	EV(TALENT_ElementalAffinity, 99)
	EV(TALENT_FiveStarRestaurant, 100)
	EV(TALENT_Bully, 101)
	EV(TALENT_ElementalRanger, 102)
	EV(TALENT_LightningRod, 103)
	EV(TALENT_Politician, 104)
	EV(TALENT_WeatherProof, 105)
	EV(TALENT_LoneWolf, 106)
	EV(TALENT_Zombie, 107)
	EV(TALENT_Demon, 108)
	EV(TALENT_IceKing, 109)
	EV(TALENT_Courageous, 110)
	EV(TALENT_GoldenMage, 111)
	EV(TALENT_WalkItOff, 112)
	EV(TALENT_FolkDancer, 113)
	EV(TALENT_SpillNoBlood, 114)
	EV(TALENT_Stench, 115)
	EV(TALENT_Kickstarter, 116)
	EV(TALENT_WarriorLoreNaturalArmor, 117)
	EV(TALENT_WarriorLoreNaturalHealth, 118)
	EV(TALENT_WarriorLoreNaturalResistance, 119)
	EV(TALENT_RangerLoreArrowRecover, 120)
	EV(TALENT_RangerLoreEvasionBonus, 121)
	EV(TALENT_RangerLoreRangedAPBonus, 122)
	EV(TALENT_RogueLoreDaggerAPBonus, 123)
	EV(TALENT_RogueLoreDaggerBackStab, 124)
	EV(TALENT_RogueLoreMovementBonus, 125)
	EV(TALENT_RogueLoreHoldResistance, 126)
	EV(TALENT_NoAttackOfOpportunity, 127)
	EV(TALENT_WarriorLoreGrenadeRange, 128)
	EV(TALENT_RogueLoreGrenadePrecision, 129)
	EV(TALENT_ExtraWandCharge, 130)
	EV(TALENT_DualWieldingDodging, 131)
	EV(TALENT_Human_Civil, 133)
	EV(TALENT_Human_Inventive, 132)
	EV(TALENT_Dwarf_Sneaking, 134)
	EV(TALENT_Dwarf_Sturdy, 135)
	EV(TALENT_Elf_CorpseEater, 136)
	EV(TALENT_Elf_Lore, 137)
	EV(TALENT_Lizard_Persuasion, 139)
	EV(TALENT_Lizard_Resistance, 138)
	EV(TALENT_Perfectionist, 140)
	EV(TALENT_Executioner, 141)
	EV(TALENT_QuickStep, 143)
	EV(TALENT_ViolentMagic, 142)
	EV(TALENT_Memory, 144)
	EV(TALENT_LivingArmor, 145)
	EV(TALENT_Torturer, 146)
	EV(TALENT_Ambidextrous, 147)
	EV(TALENT_Unstable, 148)
	EV(TALENT_Sourcerer, 149)
	EV(TRAIT_Forgiving, 150)
	EV(TRAIT_Vindictive, 151)
	EV(TRAIT_Bold, 152)
	EV(TRAIT_Timid, 153)
	EV(TRAIT_Altruistic, 154)
	EV(TRAIT_Egotistical, 155)
	EV(TRAIT_Independent, 156)
	EV(TRAIT_Obedient, 157)
	EV(TRAIT_Pragmatic, 158)
	EV(TRAIT_Romantic, 159)
	EV(TRAIT_Spiritual, 160)
	EV(TRAIT_Materialistic, 161)
	EV(TRAIT_Righteous, 162)
	EV(TRAIT_Renegade, 163)
	EV(TRAIT_Blunt, 164)
	EV(TRAIT_Considerate, 165)
	EV(TRAIT_Compassionate, 166)
	EV(TRAIT_Heartless, 167)
	EV(Combat, 168)
	EV(MinKarma, 169)
	EV(MaxKarma, 170)
	EV(Immobile, 171)
	EV(Tag, 172)
	EV(TALENT_Elementalist, 173)
	EV(TALENT_Sadist, 174)
	EV(TALENT_Haymaker, 175)
	EV(TALENT_Gladiator, 176)
	EV(TALENT_Indomitable, 177)
	EV(TALENT_WildMag, 178)
	EV(TALENT_Jitterbug, 179)
	EV(TALENT_Soulcatcher, 180)
	EV(TALENT_MasterThief, 181)
	EV(TALENT_GreedyVessel, 182)
	EV(TALENT_MagicCycles, 183)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, WeaponType, WeaponType, uint32_t)
	EV(None, 0)
	EV(Sword, 1)
	EV(Club, 2)
	EV(Axe, 3)
	EV(Staff, 4)
	EV(Bow, 5)
	EV(Crossbow, 6)
	EV(Spear, 7)
	EV(Knife, 8)
	EV(Wand, 9)
	EV(Arrow, 10)
	EV(Rifle, 11)
	EV(Sentinel, 12)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, ArmorType, ArmorType, uint32_t)
	EV(None, 0)
	EV(Cloth, 1)
	EV(Leather, 2)
	EV(Mail, 3)
	EV(Plate, 4)
	EV(Robe, 5)
	EV(Sentinel, 6)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, HandednessType, HandednessType, uint32_t)
	EV(Any, 0)
	EV(One, 1)
	EV(Two, 2)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, AbilityType, AbilityType, int32_t)
	EV(WarriorLore, 0)
	EV(RangerLore, 1)
	EV(RogueLore, 2)
	EV(SingleHanded, 3)
	EV(TwoHanded, 4)
	EV(PainReflection, 5)
	EV(Ranged, 6)
	EV(Shield, 7)
	EV(Reflexes, 8)
	EV(PhysicalArmorMastery, 9)
	EV(MagicArmorMastery, 10)
	EV(VitalityMastery, 11)
	EV(Sourcery, 12)
	EV(FireSpecialist, 13)
	EV(WaterSpecialist, 14)
	EV(AirSpecialist, 15)
	EV(EarthSpecialist, 16)
	EV(Necromancy, 17)
	EV(Summoning, 18)
	EV(Polymorph, 19)
	EV(Telekinesis, 20)
	EV(Repair, 21)
	EV(Sneaking, 22)
	EV(Pickpocket, 23)
	EV(Thievery, 24)
	EV(Loremaster, 25)
	EV(Crafting, 26)
	EV(Barter, 27)
	EV(Charm, 28)
	EV(Intimidate, 29)
	EV(Reason, 30)
	EV(Persuasion, 31)
	EV(Leadership, 32)
	EV(Luck, 33)
	EV(DualWielding, 34)
	EV(Wand, 35)
	EV(Perseverance, 36)
	EV(Runecrafting, 37)
	EV(Brewmaster, 38)
	EV(Sulfurology, 39)
	EV(Sentinel, 40)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, CriticalRoll, CriticalRoll, int32_t)
	EV(Roll, 0)
	EV(Critical, 1)
	EV(NotCritical, 2)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, HighGroundBonus, HighGroundBonus, int32_t)
	EV(Unknown, 0)
	EV(HighGround, 1)
	EV(EvenGround, 2)
	EV(LowGround, 3)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, EquipmentStatsType, EquipmentStatsType, uint32_t)
	EV(Weapon, 0)
	EV(Armor, 1)
	EV(Shield, 2)
END_ENUM_NS()


BEGIN_ENUM_NS(eoc, SkillBarItemType, SkillBarItemType, uint32_t)
	EV(None, 0)
	EV(Skill, 1)
	EV(Item, 2)
	EV(ItemTemplate, 3)
	EV(Action, 4)
END_ENUM_NS()


BEGIN_ENUM_NS(eoc, SkillStateType, SkillStateType, uint32_t)
	EV(Unknown, 0)
	EV(Init, 1)
	EV(Charging, 2)
	EV(PickTargets, 3)
	EV(Preparing, 4)
	EV(Casting, 5)
	EV(CastFinished, 6)
	EV(Finished, 7)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, StatusFlags, ClientStatusFlags, uint8_t)
	EV(RequestDelete, 0x01)
	EV(Started, 0x02)
	EV(KeepAlive, 0x08)
	EV(RequestRefreshLifeTime, 0x10)
	EV(Ticking, 0x20)
	EV(HasVisuals, 0x40)
END_ENUM_NS()


BEGIN_BITMASK_NS(esv, StatusFlags0, ServerStatusFlags, uint8_t)
	EV(KeepAlive, 1)
	EV(IsOnSourceSurface, 2)
	EV(IsFromItem, 4)
	EV(Channeled, 8)
	EV(IsLifeTimeSet, 0x10)
	EV(InitiateCombat, 0x20)
	EV(Influence, 0x80)
END_ENUM_NS()


BEGIN_BITMASK_NS(esv, StatusFlags1, ServerStatusFlags1, uint8_t)
	EV(BringIntoCombat, 1)
	EV(IsHostileAct, 2)
	EV(IsInvulnerable, 8)
	EV(IsResistingDeath, 0x10)
END_ENUM_NS()


BEGIN_BITMASK_NS(esv, StatusFlags2, ServerStatusFlags2, uint8_t)
	EV(ForceStatus, 1)
	EV(ForceFailStatus, 2)
	EV(RequestClientSync2, 4)
	EV(RequestClientSync, 8)
	EV(RequestDelete, 0x20)
	EV(RequestDeleteAtTurnEnd, 0x40)
	EV(Started, 0x80)
END_ENUM_NS()


BEGIN_BITMASK(StatusMaterialApplyFlags, uint8_t)
	EV(ApplyOnBody, 1)
	EV(ApplyOnArmor, 2)
	EV(ApplyOnWeapon, 4)
	EV(ApplyOnWings, 8)
	EV(ApplyOnHorns, 0x10)
	EV(ApplyOnOverhead, 0x20)
END_ENUM()


BEGIN_BITMASK(MaterialInfoFlags, uint8_t)
	EV(ApplyCurrentNormalMap, 1)
	EV(IsOverlay, 2)
	EV(IsActive, 4)
	EV(Force, 8)
END_ENUM()


BEGIN_ENUM(StatusStackingType, uint32_t)
	EV(AlwaysApply, 0)
	EV(KeepFirst, 1)
	EV(KeepLast, 2)
	EV(Toggle, 3)
	EV(Variable, 4)
END_ENUM()


BEGIN_ENUM(StatusType, uint32_t)
	EV(HIT, 1)
	EV(DYING, 2)
	EV(HEAL, 3)
	EV(MUTED, 4)
	EV(CHARMED, 5)
	EV(KNOCKED_DOWN, 6)
	EV(SUMMONING, 7)
	EV(HEALING, 8)
	EV(THROWN, 9)
	EV(TELEPORT_FALLING, 0x0B)
	EV(CONSUME, 0x0C)
	EV(COMBAT, 0x0D)
	EV(AOO, 0x0E)
	EV(STORY_FROZEN, 0x0F)
	EV(SNEAKING, 0x10)
	EV(UNLOCK, 0x11)
	EV(FEAR, 0x12)
	EV(BOOST, 0x13)
	EV(UNSHEATHED, 0x14)
	EV(STANCE, 0x15)
	EV(SITTING, 0x16)
	EV(LYING, 0x17)
	EV(BLIND, 0x18)
	EV(SMELLY, 0x19)
	EV(CLEAN, 0x1A)
	EV(INFECTIOUS_DISEASED, 0x1B)
	EV(INVISIBLE, 0x1C)
	EV(ROTATE, 0x1D)
	EV(ENCUMBERED, 0x1E)
	EV(IDENTIFY, 0x1F)
	EV(REPAIR, 0x20)
	EV(MATERIAL, 0x21)
	EV(LEADERSHIP, 0x22)
	EV(EXPLODE, 0x23)
	EV(ADRENALINE, 0x24)
	EV(SHACKLES_OF_PAIN, 0x25)
	EV(SHACKLES_OF_PAIN_CASTER, 0x26)
	EV(WIND_WALKER, 0x27)
	EV(DARK_AVENGER, 0x28)
	EV(REMORSE, 0x29)
	EV(DECAYING_TOUCH, 0x2A)
	EV(UNHEALABLE, 0x2B)
	EV(FLANKED, 0x2C)
	EV(CHANNELING, 0x2D)
	EV(DRAIN, 0x2E)
	EV(LINGERING_WOUNDS, 0x2F)
	EV(INFUSED, 0x30)
	EV(SPIRIT_VISION, 0x31)
	EV(SPIRIT, 0x32)
	EV(DAMAGE, 0x33)
	EV(FORCE_MOVE, 0x34)
	EV(CLIMBING, 0x35)
	EV(INCAPACITATED, 0x36)
	EV(INSURFACE, 0x37)
	EV(SOURCE_MUTED, 0x38)
	EV(OVERPOWER, 0x39)
	EV(COMBUSTION, 0x3A)
	EV(POLYMORPHED, 0x3B)
	EV(DAMAGE_ON_MOVE, 0x3C)
	EV(DEMONIC_BARGAIN, 0x3D)
	EV(GUARDIAN_ANGEL, 0x3E)
	EV(FLOATING, 0x40)
	EV(CHALLENGE, 0x41)
	EV(DISARMED, 0x42)
	EV(HEAL_SHARING, 0x43)
	EV(HEAL_SHARING_CASTER, 0x44)
	EV(EXTRA_TURN, 0x45)
	EV(ACTIVE_DEFENSE, 0x46)
	EV(SPARK, 0x47)
	EV(PLAY_DEAD, 0x48)
	EV(CONSTRAINED, 0x49)
	EV(EFFECT, 0x4A)
	EV(DEACTIVATED, 0x4B)
	EV(TUTORIAL_BED, 0x4C)
END_ENUM()


BEGIN_ENUM(CauseType, uint8_t)
	EV(None, 0)
	EV(SurfaceMove, 1)
	EV(SurfaceCreate, 2)
	EV(SurfaceStatus, 3)
	EV(StatusEnter, 4)
	EV(StatusTick, 5)
	EV(Attack, 6)
	EV(Offhand, 7)
	EV(GM, 8)
END_ENUM()


BEGIN_ENUM_NS(stats, DeathType, DeathType, uint8_t)
	EV(None, 0)
	EV(Physical, 1)
	EV(Piercing, 2)
	EV(Arrow, 3)
	EV(DoT, 4)
	EV(Incinerate, 5)
	EV(Acid, 6)
	EV(Electrocution, 7)
	EV(FrozenShatter, 8)
	EV(PetrifiedShatter, 9)
	EV(Explode, 10)
	EV(Surrender, 11)
	EV(Hang, 12)
	EV(KnockedDown, 13)
	EV(Lifetime, 14)
	EV(Sulfur, 15)
	EV(Sentinel, 16)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, DamageType, DamageType, uint32_t)
	EV(None, 0)
	EV(Physical, 1)
	EV(Piercing, 2)
	EV(Corrosive, 3)
	EV(Magic, 4)
	EV(Chaos, 5)
	EV(Fire, 6)
	EV(Air, 7)
	EV(Water, 8)
	EV(Earth, 9)
	EV(Poison, 10)
	EV(Shadow, 11)
	EV(Sulfuric, 12)
	EV(Sentinel, 13)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, ConditionType, ConditionType, uint32_t)
	EV(None, 0)
	EV(Locked, 1)
	EV(Ally, 2)
	EV(Enemy, 3)
	EV(Character, 4)
	EV(Item, 5)
	EV(Dead, 6)
	EV(Summon, 7)
	EV(NonSummon, 8)
	EV(Self, 9)
	EV(NonSelf, 10)
	EV(Party, 11)
	EV(LowHP, 12)
	EV(Combat, 13)
	EV(Tagged, 14)
	EV(CanExplode, 15)
	EV(CanGiveSP, 16)
	EV(Grounded, 17)
	EV(FacingMe, 18)
	EV(AllowDead, 19)
	EV(Player, 20)
	EV(CanPickup, 21)
	EV(Owner, 22)
	EV(MySummon, 23)
	EV(HasStatus, 24)
	EV(InSurface, 25)
	EV(Surface, 26)
	EV(Spirit, 27)
	EV(DamagedOnHeal, 28)
	EV(Undead, 29)
	EV(CanBeSabotaged, 30)
	EV(PhysicalArmourUp, 31)
	EV(MagicArmourUp, 32)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, HitType, HitType, uint32_t)
	EV(Melee, 0)
	EV(Magic, 1)
	EV(Ranged, 2)
	EV(WeaponDamage, 3)
	EV(Surface, 4)
	EV(DoT, 5)
	EV(Reflected, 6)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, ItemSlot, ItemSlot, uint8_t)
	EV(Helmet, 0)
	EV(Breast, 1)
	EV(Leggings, 2)
	EV(Weapon, 3)
	EV(Shield, 4)
	EV(Ring, 5)
	EV(Belt, 6)
	EV(Boots, 7)
	EV(Gloves, 8)
	EV(Amulet, 9)
	EV(Ring2, 10)
	EV(Wings, 11)
	EV(Horns, 12)
	EV(Overhead, 13)
	EV(Sentinel, 14)
END_ENUM_NS()


BEGIN_ENUM_NS(stats, ItemSlot32, ItemSlot32, uint32_t)
	EV(Helmet, 0)
	EV(Breast, 1)
	EV(Leggings, 2)
	EV(Weapon, 3)
	EV(Shield, 4)
	EV(Ring, 5)
	EV(Belt, 6)
	EV(Boots, 7)
	EV(Gloves, 8)
	EV(Amulet, 9)
	EV(Ring2, 10)
	EV(Wings, 11)
	EV(Horns, 12)
	EV(Overhead, 13)
	EV(Sentinel, 14)
END_ENUM_NS()


BEGIN_ENUM(EquipmentClass, uint32_t)
	EV(HumanMale, 0)
	EV(HumanFemale, 1)
	EV(DwarfMale, 2)
	EV(DwarfFemale, 3)
	EV(ElfMale, 4)
	EV(ElfFemale, 5)
	EV(LizardMale, 6)
	EV(LizardFemale, 7)
	EV(None, 8)
	EV(UndeadHumanMale, 9)
	EV(UndeadHumanFemale, 10)
	EV(UndeadDwarfMale, 11)
	EV(UndeadDwarfFemale, 12)
	EV(UndeadElfMale, 13)
	EV(UndeadElfFemale, 14)
	EV(UndeadLizardMale, 15)
	EV(UndeadLizardFemale, 16)
END_ENUM()


BEGIN_BITMASK_NS(ecl, DeactivateEquipmentSlotMask, DeactivateEquipmentSlotMask, uint16_t)
	EV(DeactivateHelmet, 1 << 0)
	EV(DeactivateBreast, 1 << 1)
	EV(DeactivateLeggings, 1 << 2)
	EV(DeactivateWeapon, 1 << 3)
	EV(DeactivateShield, 1 << 4)
	EV(DeactivateRing, 1 << 5)
	EV(DeactivateBelt, 1 << 6)
	EV(DeactivateBoots, 1 << 7)
	EV(DeactivateGloves, 1 << 8)
	EV(DeactivateAmulet, 1 << 9)
	EV(DeactivateRing2, 1 << 10)
	EV(DeactivateWings, 1 << 11)
	EV(DeactivateHorns, 1 << 12)
	EV(DeactivateOverhead, 1 << 13)
END_ENUM_NS()


BEGIN_BITMASK_NS(ecl, DeactivateVisualSetSlotMask, DeactivateVisualSetSlotMask, uint16_t)
	EV(DeactivateHair, 1 << 0)
	EV(DeactivateHead, 1 << 1)
	EV(DeactivateTorso, 1 << 2)
	EV(DeactivateArms, 1 << 3)
	EV(DeactivateTrousers, 1 << 4)
	EV(DeactivateBootsVisual, 1 << 5)
	EV(DeactivateBeard, 1 << 6)
END_ENUM_NS()


BEGIN_BITMASK_NS(stats, CharacterFlags, StatCharacterFlags, uint8_t)
	EV(IsPlayer, 1)
	EV(InParty, 2)
	EV(IsSneaking, 4)
	EV(Invisible, 8)
	EV(Blind, 16)
	EV(DrinkedPotion, 32)
	EV(EquipmentValidated, 64)
END_ENUM_NS()


BEGIN_BITMASK_NS(stats, HitFlag, HitFlag, uint32_t)
	EV(Hit, 1)
	EV(Blocked, 2)
	EV(Dodged, 4)
	EV(Missed, 8)
	EV(CriticalHit, 0x10)
	EV(Backstab, 0x20)
	EV(FromSetHP, 0x40)
	EV(DontCreateBloodSurface, 0x80)
	EV(Invulnerable, 0x100)
	EV(Reflection, 0x200)
	EV(NoDamageOnOwner, 0x400)
	EV(FromShacklesOfPain, 0x800)
	EV(DamagedMagicArmor, 0x1000)
	EV(DamagedPhysicalArmor, 0x2000)
	EV(DamagedVitality, 0x4000)
	EV(Flanking, 0x8000)
	EV(PropagatedFromOwner, 0x10000)
	EV(Surface, 0x20000)
	EV(DoT, 0x40000)
	EV(ProcWindWalker, 0x80000)
	EV(CounterAttack, 0x100000)
	EV(Poisoned, 0x200000)
	EV(Burning, 0x400000)
	EV(Bleeding, 0x800000)
	// Custom flags
	EV(NoEvents, 0x80000000)
END_ENUM_NS()


BEGIN_ENUM(StatusHealType, uint32_t)
	EV(None, 0)
	EV(Vitality, 1)
	EV(PhysicalArmor, 2)
	EV(MagicArmor, 3)
	EV(AllArmor, 4)
	EV(All, 5)
	EV(Source, 6)
END_ENUM()


BEGIN_ENUM(HealEffect, uint32_t)
	EV(None, 0)
	EV(ResistDeath, 1)
	EV(Heal, 2)
	EV(Behavior, 3)
	EV(Unknown4, 4)
	EV(Sitting, 5)
	EV(Surface, 6)
	EV(Lifesteal, 7)
	EV(NegativeDamage, 8)
	EV(Unknown9, 9)
	EV(Script, 10)
	EV(HealSharing, 11)
	EV(Necromantic, 12)
	EV(HealSharingReflected, 13)
END_ENUM()

BEGIN_BITMASK_NS(eoc, CombatComponentFlags, CombatComponentFlags, uint32_t)
	EV(IsTicking, 0x1)
	EV(CanGuard, 0x2)
	EV(Guarded, 0x4)
	EV(CanFight, 0x8)
	EV(CanJoinCombat, 0x10)
	EV(TurnEnded, 0x20)
	EV(RequestEndTurn, 0x40)
	EV(IsBoss, 0x80)
	EV(CanForceEndTurn, 0x100)
	EV(IsInspector, 0x200)
	EV(FleeOnEndTurn, 0x400)
	EV(GuardOnEndTurn, 0x800)
	EV(CanUseResistDeadTalent, 0x1000)
	EV(TookExtraTurn, 0x2000)
	EV(RequestEnterCombat, 0x4000)
	EV(RequestTakeExtraTurn, 0x8000)
	EV(InArena, 0x10000)
	EV(DelayDeathCount, 0x20000)
	EV(CounterAttacked, 0x40000)
END_ENUM_NS()


// Persistent flags: 0x2414170022110
// AI flags: 0x4000070000060
BEGIN_BITMASK_NS(esv, CharacterFlags, ServerCharacterFlags, uint64_t)
	EV(IsPlayer, 0x01)
	EV(Multiplayer, 0x02)
	EV(InParty, 0x04)
	EV(HostControl, 0x08)
	EV(Activated, 0x10)
	EV(OffStage, 0x20)
	EV(Dead, 0x40)
	EV(HasOwner, 0x80)
	EV(InDialog, 0x100)
	EV(Summon, 0x200)
	EV(Invulnerable, 0x400)
	EV(CannotDie, 0x800)
	EV(StoryNPC, 0x1000)
	EV(CharacterControl, 0x2000)
	EV(Loaded, 0x4000)
	EV(Invisible, 0x10000)
	EV(ForceNonzeroSpeed, 0x20000)
	EV(FindValidPositionOnActivate, 0x40000)
	EV(CannotAttachToGroups, 0x80000)
	EV(CharCreationInProgress, 0x100000)
	EV(CharacterCreationFinished, 0x200000)
	EV(Floating, 0x400000)
	EV(FightMode, 0x800000)
	EV(SpotSneakers, 0x1000000)
	EV(Temporary, 0x2000000)
	EV(CannotMove, 0x4000000)
	EV(CannotRun, 0x8000000)
	EV(WalkThrough, 0x10000000)
	EV(CoverAmount, 0x20000000)
	EV(CanShootThrough, 0x40000000)
	EV(DontCacheTemplate, 0x100000000)
	EV(ReservedForDialog, 0x200000000)
	EV(PartyFollower, 0x400000000)
	EV(DisableWaypointUsage, 0x800000000)
	EV(IgnoresTriggers, 0x1000000000)
	EV(Totem, 0x2000000000)
	EV(IsTrading, 0x4000000000)
	EV(NoRotate, 0x8000000000)
	EV(IsCompanion_M, 0x20000000000)
	EV(Deactivated, 0x80000000000)
	EV(CustomLookEnabled, 0x100000000000)
	EV(IsHuge, 0x200000000000)
	EV(DisableCulling, 0x400000000000)
	EV(DoNotFaceFlag, 0x800000000000)
	EV(NeedsMakePlayerUpdate, 0x1000000000000)
	EV(GMReroll, 0x2000000000000)
	EV(Detached, 0x4000000000000)
	EV(RequestStartTurn, 0x8000000000000)
	EV(DeferredRemoveEscapist, 0x10000000000000)
	EV(LevelTransitionPending, 0x20000000000000)
	EV(RegisteredForAutomatedDialog, 0x40000000000000)
END_ENUM_NS()


BEGIN_BITMASK_NS(esv, CharacterFlags2, ServerCharacterFlags2, uint8_t)
	EV(Global, 0x01)
	EV(HasOsirisDialog, 0x02)
	EV(HasDefaultDialog, 0x04)
	EV(TreasureGeneratedForTrader, 0x10)
	EV(Trader, 0x20)
	EV(Resurrected, 0x40)
END_ENUM_NS()


BEGIN_BITMASK_NS(esv, CharacterFlags3, ServerCharacterFlags3, uint8_t)
	EV(IsPet, 0x01)
	EV(IsSpectating, 0x02)
	EV(NoReptuationEffects, 0x04)
	EV(HasWalkSpeedOverride, 0x08)
	EV(HasRunSpeedOverride, 0x10)
	EV(IsGameMaster, 0x20)
	EV(IsPossessed, 0x40)
	EV(ManuallyLeveled, 0x80)
END_ENUM_NS()

BEGIN_ENUM_NS(esv, CharacterTransformType, ServerCharacterTransformType, uint32_t)
	EV(TransformToTemplate, 1)
	EV(TransformToCharacter, 2)
END_ENUM_NS()

BEGIN_BITMASK_NS(esv, CharacterTransformFlags, ServerCharacterTransformFlags, uint32_t)
	EV(ReplaceScripts, 0x01)
	EV(ReplaceStats, 0x02)
	EV(DontCheckRootTemplate, 0x08)
	EV(Immediate, 0x10)
	EV(ReplaceTags, 0x20)
	EV(DontReplaceCombatState, 0x40)
	EV(MoveAttachedEffects, 0x80)
	EV(ReplaceCustomLooks, 0x100)
	EV(ReplaceCurrentTemplate, 0x200)
	EV(SaveOriginalDisplayName, 0x400)
	EV(DiscardOriginalDisplayName, 0x800)
	EV(ReplaceInventory, 0x1000)
	EV(ReplaceCustomNameIcon, 0x2000)
	EV(ReleasePlayerData, 0x4000)
	EV(ReplaceScale, 0x8000)
	EV(ReplaceSkills, 0x10000)
	EV(ReplaceEquipment, 0x20000)
	EV(ReplaceVoiceSet, 0x40000)
	EV(ImmediateSync, 0x80000)
	EV(ReplaceOriginalTemplate, 0x100000)
END_ENUM_NS()

BEGIN_BITMASK_NS(esv, ItemTransformFlags, ServerItemTransformFlags, uint32_t)
	EV(ReplaceScripts, 0x01)
	EV(ReplaceStats, 0x02)
	EV(Immediate, 0x04)
END_ENUM_NS()

BEGIN_BITMASK_NS(esv, ItemFlags, ServerItemFlags, uint64_t)
	EV(Activated, 0x01)
	EV(OffStage, 0x02)
	EV(CanBePickedUp, 0x04)
	EV(CanBeMoved, 0x08)
	EV(WalkOn, 0x10)
	EV(WalkThrough, 0x20)
	EV(NoCover, 0x40)
	EV(CanShootThrough, 0x80)
	EV(CanUse, 0x100)
	EV(InteractionDisabled, 0x200)
	EV(TransformChanged, 0x400)
	EV(Destroyed, 0x800)
	EV(IsMoving, 0x1000)
	EV(CanOnlyBeUsedByOwner, 0x2000)
	EV(LoadedTemplate, 0x4000)
	EV(IsDoor, 0x8000)
	EV(Invisible, 0x10000)
	EV(StoryItem, 0x20000)
	EV(ClientSync1, 0x40000)
	EV(WakePhysics, 0x80000)
	EV(Summon, 0x100000)
	EV(IsContainer, 0x200000)
	EV(HideHP, 0x400000)
	EV(LuckyFind, 0x800000)
	EV(FreezeGravity, 0x1000000)
	EV(ForceSync, 0x2000000)
	EV(Known, 0x4000000)
	EV(Invisible2, 0x8000000)
	EV(DisableSync, 0x10000000)
	EV(IsLadder, 0x20000000)
	EV(ReservedForDialog, 0x40000000)
	EV(Invulnerable, 0x80000000)
	EV(DisableInventoryView80, 0x100000000)
	EV(DontAddToHotbar, 0x200000000)
	EV(PositionChanged, 0x400000000)
	EV(Totem, 0x800000000)
	EV(Destroy, 0x2000000000)
	EV(GMFolding, 0x4000000000)
	EV(InUse, 0x8000000000)
	EV(Sticky, 0x10000000000)
	EV(IsSecretDoor, 0x20000000000)
	EV(Floating, 0x40000000000)
	EV(IsSurfaceBlocker, 0x80000000000)
	EV(IsSurfaceCloudBlocker, 0x100000000000)
	EV(Invulnerable2, 0x200000000000)
	EV(ForceClientSync, 0x400000000000)
	EV(InPartyInventory, 0x800000000000)
	EV(SourceContainer, 0x1000000000000)
	EV(Frozen, 0x2000000000000)
	EV(LevelTransitionPending, 0x4000000000000)
	EV(TeleportOnUse, 0x8000000000000)
	EV(InAutomatedDialog, 0x10000000000000)
	EV(PinnedContainer, 0x20000000000000)
END_ENUM_NS()

BEGIN_BITMASK_NS(esv, ItemFlags2, ServerItemFlags2, uint8_t)
	EV(UnsoldGenerated, 0x01)
	EV(IsKey, 0x02)
	EV(Global, 0x04)
	EV(CanConsume, 0x08)
	EV(TreasureGenerated, 0x10)
	EV(UnEquipLocked, 0x20)
	EV(UseRemotely, 0x40)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, CharacterFlags, ClientCharacterFlags, uint64_t)
	EV(IsPlayer, 0x01)
	EV(InParty, 0x02)
	EV(Activated, 0x04)
	EV(Dead, 0x8)
	EV(Summon, 0x10)
	EV(CannotFight, 0x20)
	EV(InDialog, 0x40)
	EV(HasOwner, 0x80)
	EV(InArena, 0x100)
	EV(InCombat, 0x200)
	EV(VisualsUpdated, 0x400)
	EV(Multiplayer, 0x800)
	EV(Floating, 0x1000)
	EV(VisionGridInvisible2, 0x2000)
	EV(IsRunning, 0x8000)
	EV(ReservedForDialog, 0x20000)
	EV(Global, 0x80000)
	EV(CannotMove, 0x200000)
	EV(CharCreationInProgress, 0x400000)
	EV(CharacterCreationFinished, 0x800000)
	EV(WeaponSheathed, 0x1000000)
	EV(SpotSneakers, 0x2000000)
	EV(OffStage, 0x4000000)
	EV(NoCover, 0x8000000)
	EV(CanShootThrough, 0x10000000)
	EV(WalkThrough, 0x20000000)
	EV(HasSkillTargetEffect, 0x40000000)
	EV(UseOverlayMaterials, 0x80000000)
	EV(Invisible, 0x100000000)
	EV(HasInventory, 0x200000000)
	EV(PartyFollower, 0x400000000)
	EV(DisableSneaking, 0x800000000)
	EV(IsTrading, 0x1000000000)
	EV(NoRotate, 0x2000000000)
	EV(MovementUpdated, 0x4000000000)
	EV(GMControl, 0x10000000000)
	EV(HasCustomVisualIndices, 0x20000000000)
	EV(IsHuge, 0x40000000000)
	EV(Detached, 0x80000000000)
	EV(StoryNPC, 0x100000000000)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, CharacterFlags2, ClientCharacterFlags2, uint8_t)
	EV(NoReputationEffects, 0x01)
	EV(HasWalkSpeedOverride, 0x02)
	EV(HasRunSpeedOverride, 0x04)
	EV(IsGameMaster, 0x08)
	EV(IsPossessed, 0x10)
	EV(IsTrader, 0x20)
	EV(TransformMoveAttachedEffects, 0x40)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, CharacterFlags3, ClientCharacterFlags3, uint8_t)
	EV(UnknownDialogFlag, 0x01)
	EV(PickpocketRequested, 0x02)
	EV(Pickpocketing, 0x04)
	EV(LootCorpseRequested, 0x08)
	EV(HasCustomVisualSet, 0x10)
	EV(RefreshVisualsRequested, 0x20)
	EV(IsArenaParticipant, 0x40)
	EV(Spectating, 0x80)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, ItemPhysicsFlags, ItemPhysicsFlags, uint8_t)
	EV(PhysicsDisabled, 0x01)
	EV(RequestRaycast, 0x02)
	EV(RequestWakeNeighbours, 0x04)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, ItemFlags, ClientItemFlags, uint64_t)
	EV(Activated, 0x01)
	EV(CanBePickedUp, 0x02)
	EV(CanBeMoved, 0x04)
	EV(CoverAmount, 0x08)
	EV(CanShootThrough, 0x10)
	EV(Walkable, 0x20)
	EV(CanWalkThrough, 0x40)
	EV(CanUse, 0x80)
	EV(InteractionDisabled, 0x100)
	EV(Wadable, 0x200)
	EV(IsDoor, 0x400)
	EV(Global, 0x800)
	EV(DontAddToBottomBar, 0x1000)
	EV(WasOpened, 0x2000)
	EV(PhysicsFlag1, 0x4000)
	EV(HasPendingNetUpdate, 0x8000)
	EV(Invisible, 0x10000)
	EV(StoryItem, 0x20000)
	EV(PhysicsFlag2, 0x40000)
	EV(Destroyed, 0x80000)
	EV(MovementUpdated, 0x100000)
	EV(IsCraftingIngredient, 0x200000)
	EV(EnableHighlights, 0x400000)
	EV(JoinedDialog, 0x800000)
	EV(IsGrenade, 0x1000000)
	EV(FreezeGravity, 0x2000000)
	EV(Hostile, 0x4000000)
	EV(Unimportant, 0x8000000)
	EV(Known, 0x10000000)
	EV(Fade, 0x20000000)
	EV(IsLadder, 0x40000000)
	EV(Registered, 0x80000000)
	EV(FoldDynamicStats, 0x200000000)
	EV(Sticky, 0x400000000)
	EV(IsSecretDoor, 0x800000000)
	EV(Floating, 0x1000000000)
	EV(Invulnerable, 0x2000000000)
	EV(IsSourceContainer, 0x40000000000)
	EV(TeleportOnUse, 0x80000000000)
	EV(PhysicsFlag3, 0x100000000000)
	EV(PinnedContainer, 0x200000000000)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, ItemFlags2, ClientItemFlags2, uint8_t)
	EV(UseSoundsLoaded, 0x01)
	EV(IsKey, 0x02)
	EV(Consumable, 0x04)
	EV(UnEquipLocked, 0x08)
	EV(Stolen, 0x10)
	EV(CanUseRemotely, 0x20)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, SceneryFlags, SceneryFlags, uint64_t)
	EV(CanShootThrough, 0x10)
	EV(Walkable, 0x20)
	EV(UnknownFlag80, 0x80)
	EV(UnknownFlag100, 0x100)
	EV(Wadable, 0x200)
	EV(Invisible, 0x10000)
	EV(Destroyed, 0x80000)
	EV(Fade, 0x20000000)
	EV(Fadeable, 0x8000000000)
	EV(SeeThrough, 0x10000000000)
	EV(IsWall, 0x20000000000)
END_ENUM_NS()

BEGIN_BITMASK_NS(ecl, SceneryRenderFlags, SceneryRenderFlags, uint32_t)
	EV(UnknownRenderFlag1, 0x1)
	EV(IsReflecting, 0x2)
	EV(ReceiveDecals, 0x4)
	EV(CastShadow, 0x08)
	EV(UnknownRenderFlag20, 0x20)
	EV(ForceUseAnimationBlueprint, 0x40)
	EV(IsShadowProxy, 0x80)
	EV(AllowReceiveDecalWhenAnimated, 0x100)
END_ENUM_NS()

BEGIN_BITMASK(AIFlags, uint8_t)
	EV(CanNotUse, 0x01)
	EV(IgnoreSelf, 0x02)
	EV(IgnoreDebuff, 0x04)
	EV(IgnoreBuff, 0x08)
	EV(StatusIsSecondary, 0x10)
	EV(IgnoreControl, 0x20)
	EV(CanNotTargetFrozen, 0x40)
END_ENUM()

BEGIN_BITMASK(AiScoreReasonFlags, uint16_t)
	EV(TargetBlocked, 0x1)
	EV(TooFar, 0x2)
	EV(KillSelf, 0x4)
	EV(ScoreTooLow, 0x8)
	EV(TooComplex, 0x10)
	EV(NoMovement, 0x20)
	EV(MoveSkillCannotExecute, 0x40)
	EV(BreakInvisibility, 0x80)
	EV(BreakInvisibilityForNoEnemies, 0x100)
	EV(StupidInvisibility, 0x200)
	EV(MustStayInAiHint, 0x400)
	EV(RemoveMadnessSelf, 0x800)
	EV(CannotTargetFrozen, 0x1000)
	EV(ResurrectOutOfCombat, 0x2000)
	EV(ResurrectByCharmedPlayer, 0x4000)
END_ENUM()

BEGIN_ENUM(AiActionType, uint8_t)
	EV(None, 0x0)
	EV(Consume, 0x1)
	EV(Skill, 0x2)
	EV(StandardAttack, 0x3)
	EV(FallbackCommand, 0x5)
END_ENUM()


BEGIN_ENUM(AiActionStep, uint32_t)
	EV(Init, 0x0)
	EV(CollectPossibleActions, 0x1)
	EV(CalculateStandardAttack, 0x2)
	EV(CalculateSkills, 0x4)
	EV(CalculateItems, 0x5)
	EV(SortActions, 0x6)
	EV(CalculatePositionScores, 0x7)
	EV(ScoreActions, 0x8)
	EV(ScoreActionsAPSaving, 0x9)
	EV(ScoreActionsBehavior, 0xA)
	EV(ScoreActionsFallback, 0xB)
	EV(ReevaluateActions, 0xC)
	EV(CalculateFutureScores, 0xD)
END_ENUM()


BEGIN_ENUM(AiModifier, uint32_t)
	EV(SCORE_MOD, 0x0)
	EV(MULTIPLIER_DAMAGE_SELF_POS, 0x1)
	EV(MULTIPLIER_DAMAGE_SELF_NEG, 0x2)
	EV(MULTIPLIER_DAMAGE_ENEMY_POS, 0x3)
	EV(MULTIPLIER_DAMAGE_ENEMY_NEG, 0x4)
	EV(MULTIPLIER_DAMAGE_ALLY_POS, 0x5)
	EV(MULTIPLIER_DAMAGE_ALLY_NEG, 0x6)
	EV(MULTIPLIER_DAMAGE_NEUTRAL_POS, 0x7)
	EV(MULTIPLIER_DAMAGE_NEUTRAL_NEG, 0x8)
	EV(MULTIPLIER_HEAL_SELF_POS, 0x9)
	EV(MULTIPLIER_HEAL_SELF_NEG, 0xA)
	EV(MULTIPLIER_HEAL_ENEMY_POS, 0xB)
	EV(MULTIPLIER_HEAL_ENEMY_NEG, 0xC)
	EV(MULTIPLIER_HEAL_ALLY_POS, 0xD)
	EV(MULTIPLIER_HEAL_ALLY_NEG, 0xE)
	EV(MULTIPLIER_HEAL_NEUTRAL_POS, 0xF)
	EV(MULTIPLIER_HEAL_NEUTRAL_NEG, 0x10)
	EV(MULTIPLIER_DOT_SELF_POS, 0x11)
	EV(MULTIPLIER_DOT_SELF_NEG, 0x12)
	EV(MULTIPLIER_DOT_ENEMY_POS, 0x13)
	EV(MULTIPLIER_DOT_ENEMY_NEG, 0x14)
	EV(MULTIPLIER_DOT_ALLY_POS, 0x15)
	EV(MULTIPLIER_DOT_ALLY_NEG, 0x16)
	EV(MULTIPLIER_DOT_NEUTRAL_POS, 0x17)
	EV(MULTIPLIER_DOT_NEUTRAL_NEG, 0x18)
	EV(MULTIPLIER_HOT_SELF_POS, 0x19)
	EV(MULTIPLIER_HOT_SELF_NEG, 0x1A)
	EV(MULTIPLIER_HOT_ENEMY_POS, 0x1B)
	EV(MULTIPLIER_HOT_ENEMY_NEG, 0x1C)
	EV(MULTIPLIER_HOT_ALLY_POS, 0x1D)
	EV(MULTIPLIER_HOT_ALLY_NEG, 0x1E)
	EV(MULTIPLIER_HOT_NEUTRAL_POS, 0x1F)
	EV(MULTIPLIER_HOT_NEUTRAL_NEG, 0x20)
	EV(MULTIPLIER_CONTROL_SELF_POS, 0x21)
	EV(MULTIPLIER_CONTROL_SELF_NEG, 0x22)
	EV(MULTIPLIER_CONTROL_ENEMY_POS, 0x23)
	EV(MULTIPLIER_CONTROL_ENEMY_NEG, 0x24)
	EV(MULTIPLIER_CONTROL_ALLY_POS, 0x25)
	EV(MULTIPLIER_CONTROL_ALLY_NEG, 0x26)
	EV(MULTIPLIER_CONTROL_NEUTRAL_POS, 0x27)
	EV(MULTIPLIER_CONTROL_NEUTRAL_NEG, 0x28)
	EV(MULTIPLIER_BOOST_SELF_POS, 0x29)
	EV(MULTIPLIER_BOOST_SELF_NEG, 0x2A)
	EV(MULTIPLIER_BOOST_ENEMY_POS, 0x2B)
	EV(MULTIPLIER_BOOST_ENEMY_NEG, 0x2C)
	EV(MULTIPLIER_BOOST_ALLY_POS, 0x2D)
	EV(MULTIPLIER_BOOST_ALLY_NEG, 0x2E)
	EV(MULTIPLIER_BOOST_NEUTRAL_POS, 0x2F)
	EV(MULTIPLIER_BOOST_NEUTRAL_NEG, 0x30)
	EV(MULTIPLIER_ARMOR_SELF_POS, 0x31)
	EV(MULTIPLIER_ARMOR_SELF_NEG, 0x32)
	EV(MULTIPLIER_ARMOR_ENEMY_POS, 0x33)
	EV(MULTIPLIER_ARMOR_ENEMY_NEG, 0x34)
	EV(MULTIPLIER_ARMOR_ALLY_POS, 0x35)
	EV(MULTIPLIER_ARMOR_ALLY_NEG, 0x36)
	EV(MULTIPLIER_ARMOR_NEUTRAL_POS, 0x37)
	EV(MULTIPLIER_ARMOR_NEUTRAL_NEG, 0x38)
	EV(MULTIPLIER_FREE_ACTION, 0x39)
	EV(MULTIPLIER_ACTION_COST_MULTIPLIER, 0x3A)
	EV(MULTIPLIER_MOVEMENT_COST_MULTPLIER, 0x3B)
	EV(MULTIPLIER_INVISIBLE_MOVEMENT_COST_MULT, 0x3C)
	EV(MULTIPLIER_SOURCE_COST_MULTIPLIER, 0x3D)
	EV(MULTIPLIER_COOLDOWN_MULTIPLIER, 0x3E)
	EV(MULTIPLIER_LOW_ITEM_AMOUNT_MULTIPLIER, 0x3F)
	EV(MULTIPLIER_HIGH_ITEM_AMOUNT_MULTIPLIER, 0x40)
	EV(MULTIPLIER_CANNOT_EXECUTE_THIS_TURN, 0x41)
	EV(MULTIPLIER_TARGET_MY_ENEMY, 0x42)
	EV(MULTIPLIER_TARGET_MY_HOSTILE, 0x43)
	EV(MULTIPLIER_TARGET_SUMMON, 0x44)
	EV(MULTIPLIER_TARGET_AGGRO_MARKED, 0x45)
	EV(MULTIPLIER_TARGET_HOSTILE_COUNT_ONE, 0x46)
	EV(MULTIPLIER_TARGET_HOSTILE_COUNT_TWO_OR_, 0x47)
	EV(MULTIPLIER_TARGET_IN_SIGHT, 0x48)
	EV(MULTIPLIER_TARGET_INCAPACITATED, 0x49)
	EV(MULTIPLIER_TARGET_KNOCKED_DOWN, 0x4A)
	EV(MULTIPLIER_TARGET_PREFERRED, 0x4B)
	EV(MULTIPLIER_TARGET_UNPREFERRED, 0x4C)
	EV(ENDPOS_NEARBY_DISTANCE, 0x4D)
	EV(MULTIPLIER_ENDPOS_ALLIES_NEARBY, 0x4E)
	EV(MULTIPLIER_ENDPOS_ENEMIES_NEARBY, 0x4F)
	EV(MULTIPLIER_ENDPOS_STENCH, 0x50)
	EV(MULTIPLIER_ENDPOS_FLANKED, 0x51)
	EV(MULTIPLIER_ENDPOS_HEIGHT_DIFFERENCE, 0x52)
	EV(MULTIPLIER_ENDPOS_TURNED_INVISIBLE, 0x53)
	EV(MULTIPLIER_ENDPOS_NOT_IN_AIHINT, 0x54)
	EV(MULTIPLIER_ENDPOS_NOT_IN_SMOKE, 0x55)
	EV(MULTIPLIER_ENDPOS_NOT_IN_DANGEROUS_SURF, 0x56)
	EV(DANGEROUS_ITEM_NEARBY, 0x57)
	EV(FALLBACK_ALLIES_NEARBY, 0x58)
	EV(FALLBACK_ENEMIES_NEARBY, 0x59)
	EV(FALLBACK_WANTED_ENEMY_DISTANCE, 0x5A)
	EV(MOVESKILL_AP_DIFF_REQUIREMENT, 0x5B)
	EV(MOVESKILL_ITEM_AP_DIFF_REQUIREMENT, 0x5C)
	EV(MULTIPLIER_SCORE_ON_NEUTRAL, 0x5D)
	EV(MULTIPLIER_SCORE_ON_ALLY, 0x5E)
	EV(MULTIPLIER_SCORE_OUT_OF_COMBAT, 0x5F)
	EV(MAX_SCORE_ON_NEUTRAL, 0x60)
	EV(MAX_HEAL_MULTIPLIER, 0x61)
	EV(MAX_HEAL_SELF_MULTIPLIER, 0x62)
	EV(MULTIPLIER_VITALITYBOOST, 0x63)
	EV(MULTIPLIER_DAMAGEBOOST, 0x64)
	EV(MULTIPLIER_BONUS_WEAPON_BOOST, 0x65)
	EV(MULTIPLIER_ARMORBOOST, 0x66)
	EV(MULTIPLIER_KILL_ENEMY, 0x67)
	EV(MULTIPLIER_KILL_ENEMY_SUMMON, 0x68)
	EV(MULTIPLIER_KILL_ALLY, 0x69)
	EV(MULTIPLIER_KILL_ALLY_SUMMON, 0x6A)
	EV(MULTIPLIER_EXPLOSION_DISTANCE_MIN, 0x6B)
	EV(MULTIPLIER_SURFACE_STATUS_ON_MOVE, 0x6C)
	EV(SURFACE_DAMAGE_MAX_TURNS, 0x6D)
	EV(MULTIPLIER_STATUS_REMOVE, 0x6E)
	EV(MULTIPLIER_STATUS_FAILED, 0x6F)
	EV(MULTIPLIER_STATUS_CANCEL_INVISIBILITY, 0x70)
	EV(MULTIPLIER_STATUS_CANCEL_SLEEPING, 0x71)
	EV(MULTIPLIER_STATUS_OVERWRITE, 0x72)
	EV(MULTIPLIER_LOSE_CONTROL, 0x73)
	EV(MULTIPLIER_INCAPACITATE, 0x74)
	EV(MULTIPLIER_KNOCKDOWN, 0x75)
	EV(MULTIPLIER_CHARMED, 0x76)
	EV(MULTIPLIER_FEAR, 0x77)
	EV(MULTIPLIER_BLIND, 0x78)
	EV(MULTIPLIER_INVISIBLE, 0x79)
	EV(MULTIPLIER_MUTE, 0x7A)
	EV(MULTIPLIER_SOURCE_MUTE, 0x7B)
	EV(MULTIPLIER_SHACKLES_OF_PAIN, 0x7C)
	EV(MULTIPLIER_HEAL_SHARING, 0x7D)
	EV(MULTIPLIER_DECAYING_TOUCH, 0x7E)
	EV(MULTIPLIER_DISARMED, 0x7F)
	EV(MULTIPLIER_WINDWALKER, 0x80)
	EV(MULTIPLIER_GUARDIAN_ANGEL, 0x81)
	EV(MULTIPLIER_ACTIVE_DEFENSE, 0x82)
	EV(MULTIPLIER_SPARK, 0x83)
	EV(MULTIPLIER_DAMAGE_ON_MOVE, 0x84)
	EV(MULTIPLIER_DEATH_RESIST, 0x85)
	EV(MULTIPLIER_RESURRECT, 0x86)
	EV(SKILL_JUMP_MINIMUM_DISTANCE, 0x87)
	EV(SKILL_TELEPORT_MINIMUM_DISTANCE, 0x88)
	EV(MULTIPLIER_ADD_ARMOR, 0x89)
	EV(MULTIPLIER_ADD_MAGIC_ARMOR, 0x8A)
	EV(MULTIPLIER_REMOVE_ARMOR, 0x8B)
	EV(MULTIPLIER_REMOVE_MAGIC_ARMOR, 0x8C)
	EV(MULTIPLIER_SURFACE_REMOVE, 0x8D)
	EV(MULTIPLIER_DESTROY_INTERESTING_ITEM, 0x8E)
	EV(MULTIPLIER_CRITICAL, 0x8F)
	EV(MULTIPLIER_ACC_BOOST, 0x90)
	EV(MULTIPLIER_DODGE_BOOST, 0x91)
	EV(MULTIPLIER_MOVEMENT_BOOST, 0x92)
	EV(MULTIPLIER_RESISTANCE, 0x93)
	EV(MULTIPLIER_AP_RECOVERY, 0x94)
	EV(MULTIPLIER_AP_BOOST, 0x95)
	EV(MULTIPLIER_AP_MAX, 0x96)
	EV(MULTIPLIER_AP_COSTBOOST, 0x97)
	EV(MULTIPLIER_SOURCE_POINT, 0x98)
	EV(MULTIPLIER_SP_COSTBOOST, 0x99)
	EV(MULTIPLIER_MAIN_ATTRIB, 0x9A)
	EV(MULTIPLIER_SECONDARY_ATTRIB, 0x9B)
	EV(MULTIPLIER_CONTACT_BOOST, 0x9C)
	EV(MIN_TURNS_SCORE_EXISTING_STATUS, 0x9D)
	EV(TURNS_REPLACEMENT_INFINITE, 0x9E)
	EV(MULTIPLIER_PUDDLE_RADIUS, 0x9F)
	EV(MULTIPLIER_COMBO_SCORE_INTERACTION, 0xA0)
	EV(MULTIPLIER_COMBO_SCORE_POSITIONING, 0xA1)
	EV(MULTIPLIER_POSITION_LEAVE, 0xA2)
	EV(MULTIPLIER_GROUNDED, 0xA3)
	EV(MULTIPLIER_DEFLECT_PROJECTILES, 0xA4)
	EV(MULTIPLIER_SUMMON_PATH_INFLUENCES, 0xA5)
	EV(BUFF_DIST_MAX, 0xA6)
	EV(BUFF_DIST_MIN, 0xA7)
	EV(MULTIPLIER_POS_SECONDARY_SURFACE, 0xA8)
	EV(ENABLE_ACTIVE_DEFENSE_OFFENSIVE_USE, 0xA9)
	EV(ENABLE_SAVING_ACTION_POINTS, 0xAA)
	EV(MULTIPLIER_SHIELD_BLOCK, 0xAB)
	EV(MULTIPLIER_REFLECT_DAMAGE, 0xAC)
	EV(MULTIPLIER_MAGICAL_SULFUR, 0xAD)
	EV(MULTIPLIER_MAGICAL_SULFUR_CURRENTLY_DAM, 0xAE)
	EV(CHARMED_MAX_CONSUMABLES_PER_TURN, 0xAF)
	EV(MULTIPLIER_FIRST_ACTION_BUFF, 0xB0)
	EV(UNSTABLE_BOMB_NEARBY, 0xB1)
	EV(UNSTABLE_BOMB_RADIUS, 0xB2)
	EV(TARGET_WEAK_ALLY, 0xB3)
	EV(AVENGE_ME_RADIUS, 0xB4)
	EV(AVENGE_ME_VITALITY_LEVEL, 0xB5)
END_ENUM()

BEGIN_ENUM(IngredientType, int)
	EV(None, 0)
	EV(Object, 1)
	EV(Category, 2)
	EV(Property, 3)
END_ENUM()

BEGIN_ENUM(IngredientTransformType, int)
	EV(None, 0)
	EV(Consume, 1)
	EV(Transform, 2)
	EV(Boost, 3)
	EV(Poison, 4)
END_ENUM()

BEGIN_ENUM(ItemDataRarity, uint8_t)
	EV(Common, 0)
	EV(Unique, 1)
	EV(Uncommon, 2)
	EV(Rare, 3)
	EV(Epic, 4)
	EV(Legendary, 5)
	EV(Divine, 6)
	EV(Sentinel, 7)
END_ENUM()

BEGIN_ENUM(RecipeCategory, int)
	EV(Common, 0)
	EV(Weapons, 1)
	EV(Potions, 2)
	EV(Grenades, 3)
	EV(Arrows, 4)
	EV(Armour, 5)
	EV(Food, 6)
	EV(Objects, 7)
	EV(Runes, 8)
	EV(Grimoire, 9)
END_ENUM()

BEGIN_ENUM(CraftingStationType, int)
	EV(None, 0)
	EV(Anvil, 1)
	EV(Oven, 2)
	EV(Wetstone, 3)
	EV(Well, 4)
	EV(BoilingPot, 5)
	EV(Beehive, 6)
	EV(SpinningWheel, 7)
	EV(Cauldron, 8)
	EV(Misc1, 9)
	EV(Misc2, 10)
	EV(Misc3, 11)
	EV(Misc4, 12)
END_ENUM()

BEGIN_ENUM(ShroudType, uint8_t)
	EV(Shroud, 0)
	EV(Sight, 1)
	EV(Sneak, 2)
	EV(RegionMask, 3)
END_ENUM()

BEGIN_ENUM(GameActionType, uint32_t)
	EV(RainAction, 1)
	EV(StormAction, 2)
	EV(WallAction, 4)
	EV(TornadoAction, 6)
	EV(PathAction, 7)
	EV(GameObjectMoveAction, 8)
	EV(StatusDomeAction, 9)
END_ENUM()

BEGIN_ENUM(SkillType, uint32_t)
	EV(Zone, 0x1)
	EV(SkillHeal, 0x2)
	EV(Jump, 0x3)
	EV(MultiStrike, 0x4)
	EV(Path, 0x5)
	EV(Projectile, 0x6)
	EV(ProjectileStrike, 0x7)
	EV(Quake, 0x8)
	EV(Rain, 0x9)
	EV(Rush, 0xA)
	EV(Shout, 0xB)
	EV(Storm, 0xC)
	EV(Summon, 0xD)
	EV(Target, 0xE)
	EV(Teleportation, 0xF)
	EV(Tornado, 0x10)
	EV(Wall, 0x11)
	EV(Dome, 0x12)
END_ENUM()


BEGIN_BITMASK(StatAttributeFlags, uint64_t)
	EV(FreezeImmunity, 1ull << 0)
	EV(BurnImmunity, 1ull << 1)
	EV(StunImmunity, 1ull << 2)
	EV(PoisonImmunity, 1ull << 3)
	EV(CharmImmunity, 1ull << 4)
	EV(FearImmunity, 1ull << 5)
	EV(KnockdownImmunity, 1ull << 6)
	EV(MuteImmunity, 1ull << 7)
	EV(ChilledImmunity, 1ull << 8)
	EV(WarmImmunity, 1ull << 9)
	EV(WetImmunity, 1ull << 10)
	EV(BleedingImmunity, 1ull << 11)
	EV(CrippledImmunity, 1ull << 12)
	EV(BlindImmunity, 1ull << 13)
	EV(CursedImmunity, 1ull << 14)
	EV(WeakImmunity, 1ull << 15)
	EV(SlowedImmunity, 1ull << 16)
	EV(DiseasedImmunity, 1ull << 17)
	EV(InfectiousDiseasedImmunity, 1ull << 18)
	EV(PetrifiedImmunity, 1ull << 19)
	EV(DrunkImmunity, 1ull << 20)
	EV(SlippingImmunity, 1ull << 21)
	EV(FreezeContact, 1ull << 22)
	EV(BurnContact, 1ull << 23)
	EV(StunContact, 1ull << 24)
	EV(PoisonContact, 1ull << 25)
	EV(ChillContact, 1ull << 26)
	EV(Torch, 1ull << 27)
	EV(Arrow, 1ull << 28)
	EV(Unbreakable, 1ull << 29)
	EV(Unrepairable, 1ull << 30)
	EV(Unstorable, 1ull << 31)
	EV(Grounded, 1ull << 32)
	EV(HastedImmunity, 1ull << 33)
	EV(TauntedImmunity, 1ull << 34)
	EV(SleepingImmunity, 1ull << 35)
	EV(AcidImmunity, 1ull << 36)
	EV(SuffocatingImmunity, 1ull << 37)
	EV(RegeneratingImmunity, 1ull << 38)
	EV(DisarmedImmunity, 1ull << 39)
	EV(DecayingImmunity, 1ull << 40)
	EV(ClairvoyantImmunity, 1ull << 41)
	EV(EnragedImmunity, 1ull << 42)
	EV(BlessedImmunity, 1ull << 43)
	EV(ProtectFromSummon, 1ull << 44)
	EV(Floating, 1ull << 45)
	EV(DeflectProjectiles, 1ull << 46)
	EV(IgnoreClouds, 1ull << 47)
	EV(MadnessImmunity, 1ull << 48)
	EV(ChickenImmunity, 1ull << 49)
	EV(IgnoreCursedOil, 1ull << 50)
	EV(ShockedImmunity, 1ull << 51)
	EV(WebImmunity, 1ull << 52)
	EV(LootableWhenEquipped, 1ull << 53)
	EV(PickpocketableWhenEquipped, 1ull << 54)
	EV(LoseDurabilityOnCharacterHit, 1ull << 55)
	EV(EntangledContact, 1ull << 56)
	EV(ShacklesOfPainImmunity, 1ull << 57)
	EV(MagicalSulfur, 1ull << 58)
	EV(ThrownImmunity, 1ull << 59)
	EV(InvisibilityImmunity, 1ull << 60)
END_ENUM()



BEGIN_ENUM_NS(stats, TalentType, TalentType, int)
	EV(None, 0)
	EV(ItemMovement, 1)
	EV(ItemCreation, 2)
	EV(Flanking, 3)
	EV(AttackOfOpportunity, 4)
	EV(Backstab, 5)
	EV(Trade, 6)
	EV(Lockpick, 7)
	EV(ChanceToHitRanged, 8)
	EV(ChanceToHitMelee, 9)
	EV(Damage, 10)
	EV(ActionPoints, 11)
	EV(ActionPoints2, 12)
	EV(Criticals, 13)
	EV(IncreasedArmor, 14)
	EV(Sight, 15)
	EV(ResistFear, 16)
	EV(ResistKnockdown, 17)
	EV(ResistStun, 18)
	EV(ResistPoison, 19)
	EV(ResistSilence, 20)
	EV(ResistDead, 21)
	EV(Carry, 22)
	EV(Throwing, 23)
	EV(Repair, 24)
	EV(ExpGain, 25)
	EV(ExtraStatPoints, 26)
	EV(ExtraSkillPoints, 27)
	EV(Durability, 28)
	EV(Awareness, 29)
	EV(Vitality, 30)
	EV(FireSpells, 31)
	EV(WaterSpells, 32)
	EV(AirSpells, 33)
	EV(EarthSpells, 34)
	EV(Charm, 35)
	EV(Intimidate, 36)
	EV(Reason, 37)
	EV(Luck, 38)
	EV(Initiative, 39)
	EV(InventoryAccess, 40)
	EV(AvoidDetection, 41)
	EV(AnimalEmpathy, 42)
	EV(Escapist, 43)
	EV(StandYourGround, 44)
	EV(SurpriseAttack, 45)
	EV(LightStep, 46)
	EV(ResurrectToFullHealth, 47)
	EV(Scientist, 48)
	EV(Raistlin, 49)
	EV(MrKnowItAll, 50)
	EV(WhatARush, 51)
	EV(FaroutDude, 52)
	EV(Leech, 53)
	EV(ElementalAffinity, 54)
	EV(FiveStarRestaurant, 55)
	EV(Bully, 56)
	EV(ElementalRanger, 57)
	EV(LightningRod, 58)
	EV(Politician, 59)
	EV(WeatherProof, 60)
	EV(LoneWolf, 61)
	EV(Zombie, 62)
	EV(Demon, 63)
	EV(IceKing, 64)
	EV(Courageous, 65)
	EV(GoldenMage, 66)
	EV(WalkItOff, 67)
	EV(FolkDancer, 68)
	EV(SpillNoBlood, 69)
	EV(Stench, 70)
	EV(Kickstarter, 71)
	EV(WarriorLoreNaturalArmor, 72)
	EV(WarriorLoreNaturalHealth, 73)
	EV(WarriorLoreNaturalResistance, 74)
	EV(RangerLoreArrowRecover, 75)
	EV(RangerLoreEvasionBonus, 76)
	EV(RangerLoreRangedAPBonus, 77)
	EV(RogueLoreDaggerAPBonus, 78)
	EV(RogueLoreDaggerBackStab, 79)
	EV(RogueLoreMovementBonus, 80)
	EV(RogueLoreHoldResistance, 81)
	EV(NoAttackOfOpportunity, 82)
	EV(WarriorLoreGrenadeRange, 83)
	EV(RogueLoreGrenadePrecision, 84)
	EV(WandCharge, 85)
	EV(DualWieldingDodging, 86)
	EV(Human_Inventive, 87)
	EV(Human_Civil, 88)
	EV(Elf_Lore, 89)
	EV(Elf_CorpseEating, 90)
	EV(Dwarf_Sturdy, 91)
	EV(Dwarf_Sneaking, 92)
	EV(Lizard_Resistance, 93)
	EV(Lizard_Persuasion, 94)
	EV(Perfectionist, 95)
	EV(Executioner, 96)
	EV(ViolentMagic, 97)
	EV(QuickStep, 98)
	EV(Quest_SpidersKiss_Str, 99)
	EV(Quest_SpidersKiss_Int, 100)
	EV(Quest_SpidersKiss_Per, 101)
	EV(Quest_SpidersKiss_Null, 102)
	EV(Memory, 103)
	EV(Quest_TradeSecrets, 104)
	EV(Quest_GhostTree, 105)
	EV(BeastMaster, 106)
	EV(LivingArmor, 107)
	EV(Torturer, 108)
	EV(Ambidextrous, 109)
	EV(Unstable, 110)
	EV(ResurrectExtraHealth, 111)
	EV(NaturalConductor, 112)
	EV(Quest_Rooted, 113)
	EV(PainDrinker, 114)
	EV(DeathfogResistant, 115)
	EV(Sourcerer, 116)
	EV(Rager, 117)
	EV(Elementalist, 118)
	EV(Sadist, 119)
	EV(Haymaker, 120)
	EV(Gladiator, 121)
	EV(Indomitable, 122)
	EV(WildMag, 123)
	EV(Jitterbug, 124)
	EV(Soulcatcher, 125)
	EV(MasterThief, 126)
	EV(GreedyVessel, 127)
	EV(MagicCycles, 128)
	EV(Max, MagicCycles)
END_ENUM_NS()


BEGIN_ENUM(SurfaceType, uint32_t)
	EV(Fire, 0x0)
	EV(FireBlessed, 0x1)
	EV(FireCursed, 0x2)
	EV(FirePurified, 0x3)
	EV(Water, 0x4)
	EV(WaterElectrified, 0x5)
	EV(WaterFrozen, 0x6)
	EV(WaterBlessed, 0x7)
	EV(WaterElectrifiedBlessed, 0x8)
	EV(WaterFrozenBlessed, 0x9)
	EV(WaterCursed, 0xA)
	EV(WaterElectrifiedCursed, 0xB)
	EV(WaterFrozenCursed, 0xC)
	EV(WaterPurified, 0xD)
	EV(WaterElectrifiedPurified, 0xE)
	EV(WaterFrozenPurified, 0xF)
	EV(Blood, 0x10)
	EV(BloodElectrified, 0x11)
	EV(BloodFrozen, 0x12)
	EV(BloodBlessed, 0x13)
	EV(BloodElectrifiedBlessed, 0x14)
	EV(BloodFrozenBlessed, 0x15)
	EV(BloodCursed, 0x16)
	EV(BloodElectrifiedCursed, 0x17)
	EV(BloodFrozenCursed, 0x18)
	EV(BloodPurified, 0x19)
	EV(BloodElectrifiedPurified, 0x1A)
	EV(BloodFrozenPurified, 0x1B)
	EV(Poison, 0x1C)
	EV(PoisonBlessed, 0x1D)
	EV(PoisonCursed, 0x1E)
	EV(PoisonPurified, 0x1F)
	EV(Oil, 0x20)
	EV(OilBlessed, 0x21)
	EV(OilCursed, 0x22)
	EV(OilPurified, 0x23)
	EV(Lava, 0x24)
	EV(Source, 0x25)
	EV(Web, 0x26)
	EV(WebBlessed, 0x27)
	EV(WebCursed, 0x28)
	EV(WebPurified, 0x29)
	EV(Deepwater, 0x2A)
	EV(Custom, 0x2B)
	EV(CustomBlessed, 0x2C)
	EV(CustomCursed, 0x2D)
	EV(CustomPurified, 0x2E)
	EV(FireCloud, 0x2F)
	EV(FireCloudBlessed, 0x30)
	EV(FireCloudCursed, 0x31)
	EV(FireCloudPurified, 0x32)
	EV(WaterCloud, 0x33)
	EV(WaterCloudElectrified, 0x34)
	EV(WaterCloudBlessed, 0x35)
	EV(WaterCloudElectrifiedBlessed, 0x36)
	EV(WaterCloudCursed, 0x37)
	EV(WaterCloudElectrifiedCursed, 0x38)
	EV(WaterCloudPurified, 0x39)
	EV(WaterCloudElectrifiedPurified, 0x3A)
	EV(BloodCloud, 0x3B)
	EV(BloodCloudElectrified, 0x3C)
	EV(BloodCloudBlessed, 0x3D)
	EV(BloodCloudElectrifiedBlessed, 0x3E)
	EV(BloodCloudCursed, 0x3F)
	EV(BloodCloudElectrifiedCursed, 0x40)
	EV(BloodCloudPurified, 0x41)
	EV(BloodCloudElectrifiedPurified, 0x42)
	EV(PoisonCloud, 0x43)
	EV(PoisonCloudBlessed, 0x44)
	EV(PoisonCloudCursed, 0x45)
	EV(PoisonCloudPurified, 0x46)
	EV(SmokeCloud, 0x47)
	EV(SmokeCloudBlessed, 0x48)
	EV(SmokeCloudCursed, 0x49)
	EV(SmokeCloudPurified, 0x4A)
	EV(ExplosionCloud, 0x4B)
	EV(FrostCloud, 0x4C)
	EV(Deathfog, 0x4D)
	EV(ShockwaveCloud, 0x4E)
	EV(Sentinel, 0x4F)
END_ENUM()


BEGIN_ENUM(SurfaceLayer, uint32_t)
	EV(Ground, 0)
	EV(Cloud, 1)
	EV(None, 2)
END_ENUM()


BEGIN_ENUM_NS(esv, SurfaceVisionFlags, ServerSurfaceVisionFlags, uint8_t)
	EV(CantSeeThrough, 0x40)
	EV(CantShootThrough, 0x80)
END_ENUM_NS()


BEGIN_ENUM(TemplateType, uint32_t)
	EV(RootTemplate, 0)
	EV(GlobalTemplate, 1)
	EV(LocalTemplate, 2)
	EV(GlobalCacheTemplate, 3)
	EV(LevelCacheTemplate, 5)
END_ENUM()


BEGIN_BITMASK(GameObjectTemplateFlags, uint32_t)
	EV(IsCustom, 1)
END_ENUM()


BEGIN_ENUM(SurfaceActionType, uint32_t)
	EV(CreateSurfaceAction, 1)
	EV(CreatePuddleAction, 2)
	EV(ExtinguishFireAction, 3)
	EV(ZoneAction, 4)
	EV(TransformSurfaceAction, 5)
	EV(ChangeSurfaceOnPathAction, 6)
	EV(RectangleSurfaceAction, 7)
	EV(PolygonSurfaceAction, 8)
	EV(SwapSurfaceAction, 9)
END_ENUM()


BEGIN_ENUM(SurfaceTransformActionType, uint32_t)
	E(None)
	E(Ignite)
	E(Bless)
	E(Purify)
	E(Curse)
	E(Electrify)
	E(Melt)
	E(Freeze)
	E(Condense)
	E(Vaporize)
	E(Bloodify)
	E(Contaminate)
	E(Oilify)
	E(Shatter)
END_ENUM()


BEGIN_BITMASK(VisionFlags, uint16_t)
	EV(VisionBlock, 0x1)
	EV(ProjectileBlock, 0x2)
	EV(Cover, 0x4)
	EV(NoShootThrough, 0x8)
	EV(NoCoverAmount, 0x10)
	EV(NoCharacterShootThrough, 0x20)
	EV(CantSeeThroughSurface, 0x40)
	EV(CantShootThroughSurface, 0x80)
	EV(Roof, 0x100)
	EV(Flag200, 0x200)
	EV(OutsideGrid, 0x400)
	EV(IsDoor, 0x800)
	EV(NoWalkThrough, 0x1000)
END_ENUM()


BEGIN_BITMASK(ESurfaceFlag, uint64_t)
	// AI grid painted flags
	EV(MovementBlock, 0x1)
	EV(ProjectileBlock, 0x4)

	// Flags set by eoc::Ai
	EV(WalkThroughBlockCharacter, 0x10)
	EV(ShootThroughBlockCharacter, 0x40)
	EV(WalkThroughBlock, 0x80)
	EV(ShootThroughBlock, 0x100)
	EV(GroundSurfaceBlock, 0x200)
	EV(CloudSurfaceBlock, 0x400)
	EV(Dead, 0x1000)
	EV(SurfaceExclude, 0x10000)

	// Flags set by AddPortal()
	EV(Portal, 0x20000)
	EV(Portal2, 0x40000)

	// Flags set by AiGrid flood() code
	EV(SurfaceShapeFlood, 0x80000)
	EV(Door, 0x100000)
	EV(DoorNoShootThrough, 0x200000)

	// --- BASE TYPE START
	EV(Fire, 0x1000000)
	EV(Water, 0x2000000)
	EV(Blood, 0x4000000)
	EV(Poison, 0x8000000)
	EV(Oil, 0x10000000)
	EV(Lava, 0x20000000)
	EV(Source, 0x40000000)
	EV(Web, 0x80000000)
	EV(Deepwater, 0x100000000)
	EV(Sulfurium, 0x200000000)
	// UNUSED = 0x400000000
	// --- BASE TYPE END


	// --- CLOUD TYPE START
	EV(FireCloud, 0x800000000)
	EV(WaterCloud, 0x1000000000)
	EV(BloodCloud, 0x2000000000)
	EV(PoisonCloud, 0x4000000000)
	EV(SmokeCloud, 0x8000000000)
	EV(ExplosionCloud, 0x10000000000)
	EV(FrostCloud, 0x20000000000)
	EV(Deathfog, 0x40000000000)
	EV(ShockwaveCloud, 0x80000000000)
	// UNUSED = 0x100000000000
	// UNUSED = 0x200000000000
	// --- CLOUD TYPE END

	EV(Blessed, 0x400000000000)
	EV(Cursed, 0x800000000000)
	EV(Purified, 0x1000000000000)
	// ??? = 0x2000000000000

	// --- SURFACE ADJ START
	EV(CloudBlessed, 0x4000000000000)
	EV(CloudCursed, 0x8000000000000)
	EV(CloudPurified, 0x10000000000000)
	// UNUSED = 0x20000000000000
	// --- SURFACE ADJ END

	// --- GROUND MOD START
	EV(Electrified, 0x40000000000000)
	EV(Frozen, 0x80000000000000)
	EV(CloudElectrified, 0x100000000000000)
	// --- GROUND MOD END

	// --- CLOUD MOD START
	EV(ElectrifiedDecay, 0x200000000000000)
	EV(SomeDecay, 0x400000000000000)
	// UNUSED = 0x800000000000000
	// --- CLOUD MOD END

	// AI grid painted flags
	EV(Irreplaceable, 0x4000000000000000)
	EV(IrreplaceableCloud, 0x800000000000000)
END_ENUM()

BEGIN_BITMASK(UIObjectFlags, uint32_t)
	EV(OF_Load, 0x1)
	EV(OF_Loaded, 0x2)
	EV(OF_RequestDelete, 0x4)
	EV(OF_Visible, 0x8)
	EV(OF_Activated, 0x10)
	EV(OF_PlayerInput1, 0x20)
	EV(OF_PlayerInput2, 0x40)
	EV(OF_PlayerInput3, 0x80)
	EV(OF_PlayerInput4, 0x100)
	EV(OF_PlayerModal1, 0x200)
	EV(OF_PlayerModal2, 0x400)
	EV(OF_PlayerModal3, 0x800)
	EV(OF_PlayerModal4, 0x1000)
	EV(OF_KeepInScreen, 0x8000)
	EV(OF_KeepCustomInScreen, 0x10000)
	EV(OF_DeleteOnChildDestroy, 0x20000)
	EV(OF_PauseRequest, 0x40000)
	EV(OF_SortOnAdd, 0x80000)
	EV(OF_FullScreen, 0x400000)
	EV(OF_PlayerTextInput1, 0x800000)
	EV(OF_PlayerTextInput2, 0x1000000)
	EV(OF_PlayerTextInput3, 0x2000000)
	EV(OF_PlayerTextInput4, 0x4000000)
	EV(OF_DontHideOnDelete, 0x10000000)
	EV(OF_PrecacheUIData, 0x20000000)
	EV(OF_PreventCameraMove, 0x40000000)
END_ENUM()

BEGIN_BITMASK(UIDirtyFlag, uint64_t)
	EV(CharacterAP, 0x1)
	EV(CharacterEquipment, 0x2)
	EV(CharacterInventory, 0x4)
	EV(CharacterSkills, 0x8)
	EV(CharacterStats, 0x10)
	EV(CharacterStatuses, 0x20)
	EV(CharacterStatusLifeTimes, 0x40)
	EV(JournalUnknown3, 0x80)
	EV(JournalUnknown2, 0x100)
	EV(JournalUnknown, 0x200)
	EV(Journal, 0x400)
	EV(Secrets, 0x800)
	EV(Trophies, 0x1000)
	EV(CharacterMP, 0x2000)
	EV(CharacterArmor, 0x8000)
	EV(JournalDialogLog, 0x10000)
	EV(CombatActions, 0x20000)
	EV(CharacterHP, 0x40000)
	EV(CharacterSkillSet, 0x80000)
	EV(Party, 0x100000)
	EV(Recipes, 0x200000)
	EV(CharacterAbilityPoints, 0x400000)
	EV(InputTask, 0x800000)
	EV(CharacterInventoryView, 0x1000000)
	EV(CharacterSkillMemory, 0x2000000)
	EV(CharacterCombat, 0x4000000)
	EV(GMSelectedCharacter, 0x8000000)
	EV(CharacterTransform, 0x10000000)
	EV(GMTarget, 0x20000000)
	EV(ItemBoosts, 0x40000000)
	EV(CharacterRelations, 0x80000000)
END_ENUM()
