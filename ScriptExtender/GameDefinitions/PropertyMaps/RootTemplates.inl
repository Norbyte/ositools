BEGIN_CLS(GameObjectTemplate)

#if defined(GENERATING_TYPE_INFO)
ADD_TYPE("Type", TemplateType)
ADD_TYPE("Handle", uint32_t)
#endif

#if defined(GENERATING_PROPMAP)
pm.AddProperty("Type",
	[](lua_State* L, LifetimeHandle const& lifetime, GameObjectTemplate* obj, std::size_t offset, uint64_t flag) {
		push(L, obj->Handle.Type());
		return PropertyOperationResult::Success;
	}
);
pm.AddProperty("Handle",
	[](lua_State* L, LifetimeHandle const& lifetime, GameObjectTemplate* obj, std::size_t offset, uint64_t flag) {
		push(L, obj->Handle.Value);
		return PropertyOperationResult::Success;
	}
);
#endif

P_RO(Flags)
P_REF(Tags)
P_RO(Id)
P_RO(Name)
P_RO(RootTemplate)
P_RO(IsGlobal)
P_RO(IsDeleted)
P_RO(LevelName)
P_RO(ModFolder)
P_RO(GroupID)
P_REF(Transform)
P_RO(NonUniformScale)
P(VisualTemplate)
P(PhysicsTemplate)
P(CastShadow)
P(ReceiveDecal)
P(AllowReceiveDecalWhenAnimated)
P(IsReflecting)
P(IsShadowProxy)
P(RenderChannel)
P(CameraOffset)
P_RO(HasParentModRelation)
// TODO - ContainingLevelTemplate
P(HasGameplayValue)
P_RO(FileName)
END_CLS()


BEGIN_CLS(EoCGameObjectTemplate)
INHERIT(GameObjectTemplate)
P(AIBoundsMin)
P(AIBoundsMax)
P(AIBoundsRadius)
P(AIBoundsHeight)
P(AIBoundsAIType)
P(DisplayName)
P(Opacity)
P(Fadeable)
P(FadeIn)
P(SeeThrough)
P(FadeGroup)
P(GameMasterSpawnSection)
P(GameMasterSpawnSubSection)
END_CLS()


BEGIN_CLS(VisualSet)
P_REF(Visuals)
P_REF(Colors)
END_CLS()


BEGIN_CLS(SkillAIConditions)
P(MinimumHealthPercentage)
P(MaximumHealthPercentage)
P(HasNoPhysicalArmor)
P(HasNoMagicalArmor)
P(Tags)
END_CLS()


BEGIN_CLS(SkillAIParams)
P(ScoreModifier)
P(StartRound)
P(MinimumImpact)
P(OnlyCastOnSelf)
P(AIFlags)
P_REF(SourceConditions)
P_REF(TargetConditions)
P(CasualExplorer)
P(Classic)
P(TacticianHardcore)
P(HonorHardcore)
END_CLS()


BEGIN_CLS(CharacterSkillData)
P(SkillId)
P_REF(AIParams)
END_CLS()


BEGIN_CLS(InventoryItemData)
P(UUID)
P(TemplateID)
P(field_10)
P(ItemName)
P(Type)
P(LevelName)
P(Amount)
P_REF(AIParams)
END_CLS()


BEGIN_CLS(CharacterTemplate)
INHERIT(EoCGameObjectTemplate)
P_REF(CombatComponent)
PN_REF(CombatTemplate, CombatComponent) // v55 compatibility
P(Icon)
P(Stats)
P(SkillSet)
P(Equipment)
P_REF(Treasures)
P_REF(TradeTreasures)
P(LightID)
P(HitFX)
P(DefaultDialog)
P(SpeakerGroup)
P(GeneratePortrait)
P(WalkSpeed)
P(RunSpeed)
P(ClimbAttachSpeed)
P(ClimbLoopSpeed)
P(ClimbDetachSpeed)
P(CanShootThrough)
P(WalkThrough)
P(CanClimbLadders)
P(IsPlayer)
P(Floating)
P(SpotSneakers)
P(CanOpenDoors)
P(AvoidTraps)
P(InfluenceTreasureLevel)
P(HardcoreOnly)
P(NotHardcore)
P(JumpUpLadders)
P(NoRotate)
P(IsHuge)
P(EquipmentClass)
P_REF(OnDeathActions)
P(BloodSurfaceType)
P(ExplodedResourceID)
P(ExplosionFX)
// TODO - Scripts, SkillList, ItemList
P_REF(SkillList)
P_REF(ItemList)
P(VisualSetResourceID)
P_REF(VisualSetIndices)
P(TrophyID)
P(SoundInitEvent)
P(SoundAttachBone)
P(SoundAttenuation)
P(CoverAmount)
P(LevelOverride)
P(ForceUnsheathSkills)
P(CanBeTeleported)
P(ActivationGroupId)
P_REF(PickingPhysicsTemplates)
P(SoftBodyCollisionTemplate)
P(RagdollTemplate)
// TODO - FootStepInfos
P(DefaultState)
P(GhostTemplate)
P(IsLootable)
P(IsEquipmentLootable)
P(InventoryType)
P(IsArenaChampion)
P(FootstepWeight)
P_RO(EmptyVisualSet)
P_REF(VisualSet)

P_FUN(GetVisualChoices, GetVisualChoices)
P_FUN(GetColorChoices, GetColorChoices)
END_CLS()

BEGIN_CLS(ItemTemplateEquipment)
P_REF(VisualResources)
P_REF(SyncAnimationWithParent)
P(VisualSetSlots)
P(EquipmentSlots)
END_CLS()

BEGIN_CLS(ItemTemplate)
INHERIT(EoCGameObjectTemplate)
P_REF(CombatComponent)
P(Icon)
P(CanBePickedUp)
P(CanBeMoved)
P(CoverAmount)
P(CanShootThrough)
P(CanClickThrough)
P(Destroyed)
P(WalkThrough)
P(WalkOn)
P(Wadable)
P(IsInteractionDisabled)
P(IsPinnedContainer)
P_REF(PinnedContainerTags)
P(StoryItem)
P(FreezeGravity)
P(IsKey)
P(IsTrap)
P(IsSurfaceBlocker)
P(IsSurfaceCloudBlocker)
P(TreasureOnDestroy)
P(IsHuge)
P(HardcoreOnly)
P(NotHardcore)
P(UsePartyLevelForTreasureLevel)
P(Unimportant)
P(Hostile)
P(UseOnDistance)
P(UseRemotely)
P(IsBlocker)
P(IsPointerBlocker)
P(UnknownDisplayName)
P(Tooltip)
P(Stats)
P_REF(Treasures)
P_REF(OnUsePeaceActions)
P_REF(OnDestroyActions)
P(OnUseDescription)
// TODO - Scripts
P_REF(ItemList)
P(DefaultState)
P(Owner)
P(Key)
P(HitFX)
P(LockLevel)
P(Amount)
P(MaxStackAmount)
P(TreasureLevel)
P_REF(Equipment)
P(DropSound)
P(PickupSound)
P(UseSound)
P(EquipSound)
P(UnequipSound)
P(InventoryMoveSound)
P(LoopSound)
P(SoundInitEvent)
P(SoundAttachBone)
P(SoundAttenuation)
P(BloodSurfaceType)
P(Description)
P(UnknownDescription)
P(Speaker)
P(AltSpeaker)
P(SpeakerGroup)
P(ActivationGroupId)
P(Race)
P(IsWall)
P(LevelOverride)
P(Floating)
P(IsSourceContainer)
P(MeshProxy)
P(IsPublicDomain)
P(AllowSummonTeleport)
END_CLS()


BEGIN_CLS(ProjectileTemplate)
INHERIT(EoCGameObjectTemplate)
P(LifeTime)
P(Speed)
P(Acceleration)
P(CastBone)
P(ImpactFX)
P(TrailFX)
P(DestroyTrailFXOnImpact)
P(BeamFX)
P(PreviewPathMaterial)
P(PreviewPathImpactFX)
P(PreviewPathRadius)
P(ImpactFXSize)
P(RotateImpact)
P(IgnoreRoof)
P(DetachBeam)
P(NeedsArrowImpactSFX)
P(ProjectilePath)
P(PathShift)
P(PathRadius)
P(PathMinArcDist)
P(PathMaxArcDist)
P(PathRepeat)
END_CLS()


BEGIN_CLS(CombatComponentTemplate)
P(Alignment)
P(CanFight)
P(CanJoinCombat)
P(CombatGroupID)
P(IsBoss)
P(IsInspector)
P(StartCombatRange)
END_CLS()


BEGIN_CLS(VisualSetIndices)
P_FUN(GetColor, LuaGetColorIndex)
P_FUN(GetVisual, LuaGetVisualIndex)
P_FUN(SetColor, LuaSetColorIndex)
P_FUN(SetVisual, LuaSetVisualIndex)
END_CLS()


BEGIN_CLS(SurfaceTemplate::VisualData)
P(Visual)
P(Height)
P(Rotation)
P(Scale)
P(GridSize)
P(SpawnCell)
P(RandomPlacement)
P(SurfaceNeeded)
P(SurfaceRadiusMax)
END_CLS()


BEGIN_CLS(SurfaceTemplate::StatusData)
P(StatusId)
P(Chance)
P(Duration)
P(RemoveStatus)
P(OnlyWhileMoving)
P(ApplyToCharacters)
P(ApplyToItems)
P(KeepAlive)
P(VanishOnReapply)
P(ForceStatus)
END_CLS()


BEGIN_CLS(SurfaceTemplate)
INHERIT(GameObjectTemplate)
P_RO(SurfaceTypeId)
P_RO(SurfaceType)
P(DisplayName)
P(Description)
P(DecalMaterial)
P(CanEnterCombat)
P(AlwaysUseDefaultLifeTime)
P(DefaultLifeTime)
P(SurfaceGrowTimer)
P(FadeInSpeed)
P(FadeOutSpeed)
P(Seed)
P_REF(InstanceVisual)
P_REF(IntroFX)
P_REF(FX)
P_REF(Statuses)
P(DamageWeapon)
P(Summon)
P(DamageCharacters)
P(DamageItems)
P(DamageTorches)
P(RemoveDestroyedItems)
P(CanSeeThrough)
P(CanShootThrough)
END_CLS()


BEGIN_CLS(TriggerTemplate)
INHERIT(GameObjectTemplate)
P(TriggerType)
P(PhysicsType)
P(Color4)
P(TriggerGizmoOverride)
END_CLS()


BEGIN_CLS(LevelTemplate)
INHERIT(GameObjectTemplate)
P_RO(SubLevelName)
P_RO(IsPersistent)
P_REF(LocalLevelBound)
P_REF(WorldLevelBound)
P_RO(LevelBoundTrigger)
END_CLS()


BEGIN_CLS(DecalTemplate)
INHERIT(GameObjectTemplate)
P(Material)
P(UUID)
P(Tiling)
P(Offset)
P(Dimensions)
P(DecalType)
END_CLS()


BEGIN_CLS(LightTemplate)
INHERIT(GameObjectTemplate)
P(Color)
P(Angle)
P(Radius)
P(Intensity)
P(Speed)
P(Amount)
P(MovementSpeed)
P(MovementAmount)
P(VolumetricLightIntensity)
P(VolumetricLightCollisionProbability)
P(Enabled)
P(IsFlickering)
P(IsMoving)
P(Shadow)
P(LightVolume)
P(LightType)
P(LightVolumeSamplesCount)
P(TextureMapping)
P(LightVolumeTexture)
END_CLS()


BEGIN_CLS(LightProbeTemplate)
INHERIT(GameObjectTemplate)
P(Intensity)
P(Size)
P(Radius)
P(TransitionDistance)
P(InfiniteCapture)
P(Enabled)
P(LightProbeType)
P(LightProbeShape)
P(CaptureType)
P(TriggerAtmosphere)
END_CLS()


BEGIN_CLS(PrefabTemplate)
INHERIT(GameObjectTemplate)
P(field_1D0)
P_REF(PrefabChildren)
P_REF(PrefabChildrenTransforms)
END_CLS()


BEGIN_CLS(TerrainLayerSetting)
P(MaterialResource)
END_CLS()


BEGIN_CLS(TerrainTemplate)
INHERIT(GameObjectTemplate)
P(Size)
P(MaterialResource)
P(Data)
P(Physics)
P_REF(Layers)
END_CLS()

BEGIN_CLS(WallBuildingLayerData)
P_REF(Vertices)
P_REF(Indices)
P(BoundMin)
P(BoundMax)
END_CLS()

BEGIN_CLS(WallConstructionTemplate)
INHERIT(EoCGameObjectTemplate)
P_REF(WallTiles)
P_REF(WallIntersections)
P_REF(Walls)
P_REF(BuildingLayer)
P(BuildingLayerMaterial)
P(BuildingLayer1Height)
P(BuildingLayer2Height)
P(BuildingLayer1Inset)
P(BuildingLayer2Inset)
P(BuildingLayerTiling)
P(BuildingLayerType)
P(BuildingLayerWalkable)
P(WalkOn)
P(CanSeeThrough)
P(CanShootThrough)
END_CLS()


BEGIN_CLS(LocalTemplateManager)
P_REF(Templates)
P_REF(TemplatesByType)
P_REF(TemplatesByHandle)
END_CLS()


BEGIN_CLS(CacheTemplateManagerBase)
P(TemplateManagerType)
P_REF(Templates)
P_REF(TemplatesByHandle)
P_REF(RefCountsByHandle)
P_REF(NewTemplates)
END_CLS()


BEGIN_CLS(GlobalCacheTemplateManager)
INHERIT(CacheTemplateManagerBase)
END_CLS()


BEGIN_CLS(LevelCacheTemplateManager)
INHERIT(CacheTemplateManagerBase)
P_RO(LevelName)
END_CLS()
