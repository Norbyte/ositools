BEGIN_CLS(Skeleton)
// No simple way to expose bones for now
END_CLS()


BEGIN_CLS(MeshBinding)
P_REF(Link)
P(Transform)
P_REF(Bound)
END_CLS()


BEGIN_CLS(Actor)
P_REF(Skeleton)
P_REF(MeshBindings)
P_REF(PhysicsRagdoll)
P(TextKeyPrepareFlags)
P_REF(Visual)
P_REF(Time)
END_CLS()


BEGIN_CLS(MoveableObject)
P_REF(LocalTransform)
P_REF(WorldTransform)
// TODO - no reason to expose - P_REF(ContainingScene)
P(ObjectFlags)
P(DirtyFlags)
P_REF(WorldBound)
P_REF(LocalBound)
P_REF(BaseBound)
END_CLS()


BEGIN_CLS(AnimationSet::AnimationDescriptor)
P_RO(ID)
P_RO(Name)
END_CLS()


BEGIN_CLS(AnimationSet)
P_REF(AnimationSubSets)
P_RO(Type)
END_CLS()


BEGIN_CLS(VisualResource::ClothParam)
P(UUID)
P(LinearStiffness)
P(BendingStiffness)
P(Iterations)
P(PoseMatching)
P(Margin)
P(MassPerMeterSqr)
P(AtmosphericWindEnabled)
P(Lift)
P(Drag)
P(FrontalWindSpeed)
P(FrontalWindFrequency)
P(FrontalWindVariance)
END_CLS()


BEGIN_CLS(VisualResource::ObjectDesc)
P(ObjectID)
P(MaterialID)
P(LOD)
END_CLS()


BEGIN_CLS(VisualResource::Attachment)
P(UUID)
P(Name)
END_CLS()


BEGIN_CLS(VisualResource::BonePosRot)
P(Position)
P(Rotation)
END_CLS()


BEGIN_CLS(VisualResource)
P_RO(Template)
P_REF(Objects)
P_REF(LODDistances)
P_REF(Attachments)
P_REF(KnownAnimationSetOverrides)
P_REF(AnimationWaterfall)
P_REF(CustomAnimationSet)
P_REF(ResolvedAnimationSet)
P(BlueprintInstanceResourceID)
P_REF(ClothParams)
P_REF(Bones)
END_CLS()


BEGIN_CLS(VisualSetResource)
P_REF(VisualSet)
P_REF(VisualSetIndices)
P(LastUsedPreviewVisual)
END_CLS()


BEGIN_CLS(Visual::Attachment)
P_REF(Visual)
P(DummyAttachmentBoneIndex)
P(BoneIndex)
P(AttachmentBoneName)
P_BITMASK(Flags)
END_CLS()


BEGIN_CLS(Visual::ObjectDesc)
P_REF(Renderable)
P_RO(field_8)
END_CLS()


BEGIN_CLS(Visual)
INHERIT(MoveableObject)
P_RO(Handle)
P_REF(Actor)
P_REF(Skeleton)
P_REF(SubObjects)
P_REF(LODDistances)
P_REF(Attachments)
P_REF(Parent)
P_REF(VisualResource)
P_REF(GameObject)
P_BITMASK(VisualFlags)
P(TextKeyPrepareFlags)
P(CullFlags)
P(PlayingAttachedEffects)
P(ShowMesh)
P(HasCloth)
P(ChildVisualHasCloth)
P(FadeOpacity)
P(ReceiveColorFromParent)

P_FUN(OverrideScalarMaterialParameter, OverrideMaterialParameter<float>)
P_FUN(OverrideVec2MaterialParameter, OverrideMaterialParameter<glm::vec2>)
P_FUN(OverrideVec3MaterialParameter, OverrideVec3MaterialParameter)
P_FUN(OverrideVec4MaterialParameter, OverrideVec4MaterialParameter)
P_FUN(OverrideTextureMaterialParameter, OverrideTextureMaterialParameter)
END_CLS()


BEGIN_CLS(dse::PropertyList)
P(RenderPasses)
P(OpaqueChannel)
P(AlphaChannel)
P(field_6)
P(field_7)
P(TransformType)
END_CLS()


BEGIN_CLS(RenderableObject)
INHERIT(MoveableObject)
// TODO - Model, ClothModel
P(IsSimulatedCloth)
P_REF(PropertyList)
P_REF(ParentVisual)
P_REF(AppliedMaterials)
P_REF(ActiveAppliedMaterial)
P_REF(AppliedOverlayMaterials)
P(HasPhysicsProxy)
P_REF(ClothPhysicsShape)
P(LOD)
P_REF(MeshRandomData)
END_CLS()


BEGIN_CLS(AnimatableObject)
INHERIT(RenderableObject)
P_REF(MeshBinding)
P(IsRigid)
// TODO - OverrideTransforms?
END_CLS()


BEGIN_CLS(Light)
INHERIT(MoveableObject)
P(TranslateOffset)
P(TranslateOffset2)
P(Color)
P_REF(SpotLightAngles)
P(Radius)
P(Intensity)
P(IntensityOffset)
P(FlickerSpeed)
P(FlickerAmount)
P(MovementSpeed)
P(MovementAmount)
P(VolumetricLightIntensity)
P(VolumetricLightCollisionProbability)
P(IsFlickering)
P(IsMoving)
P(CastShadow)
P(LightVolume)
P(IsEnabled)
P(LightType)
P(LightVolumeSamples)
P_RO(LightVolumeTexture)
P(LightVolumeMapping)
P_REF(Template)
P_RO(IsUpdateJobRunning)
END_CLS()


BEGIN_CLS(LightProbeCapture)
P(Atmosphere)
P(DiffuseIBLTextureHandle)
P(DiffuseAlphaIBLTextureHandle)
P(SpecularIBLTextureHandle)
P(SpecularAlphaIBLTextureHandle)
P(IsSpecular)
P_REF(LightProbe)
END_CLS()


BEGIN_CLS(LightProbe)
INHERIT(MoveableObject)
P_REF(Component)
P(ID)
P(AtmosphereTriggerID)
P(Intensity)
P(Radius)
P(Size)
P(TransitionDistance)
P(InfiniteCapture)
P(LightProbeType)
P(LightProbeShape)
P(CaptureType)
P(Enabled)
P_REF(Captures)
P_REF(Template)
P(CaptureFlags)
END_CLS()


BEGIN_CLS(DecalBasicObject)
INHERIT(RenderableObject)
P(IsDirty)
P(Dimensions)
P(TilingUV)
P(OffsetUV)
P_REF(CameraController)
P(CameraControllerID)
END_CLS()


BEGIN_CLS(NodeObjectDescription)
P_REF(Object)
P(CullFlags)
END_CLS()


BEGIN_CLS(RenderNode)
P_REF(ChildNodes)
P_REF(Objects)
P(OuterSize)
P(InnerSize)
P(Depth)
P(NonLeaf)
P(IsDirty)
P_REF(StrictWorldBound)
P_REF(LooseWorldBound)
END_CLS()


BEGIN_CLS(InstanceGroupPaintParams)
P(Slow)
P(RandomRotX)
P(RandomRotY)
P(RandomRotZ)
P(AlignNormal)
P(ScaleMin)
P(ScaleMax)
END_CLS()


BEGIN_CLS(InstanceGroup)
P(Width)
P(Height)
P(ModName)
P(field_10)
P_REF(Batches)
P_REF(DirtyBatches)
// TODO P_REF(InstanceManager)
P_REF(Visual)
P(BurnRadius)
P(BurnTimeMin)
P(BurnTimeMax)
P(BurnFadeOut)
P(FileID)
P(VisualID)
P(DestroyVisualID)
P(BurnEffectID)
P(GridSize)
P(Visible)
P(CastShadow)
P(ShouldUpdateEmptyBatches)
P(HasChanges)
P(CanEverSave)
P_REF(LevelTemplate)
P(LevelTemplateWorldOffset)
P_REF(PaintParams)
END_CLS()


BEGIN_CLS(InstanceBatch)
INHERIT(RenderableObject)
P(ModName)
P(ActiveModName)
P(IsOverride)
P_REF(InstanceTransforms)
P_REF(DestroyInstanceIndices)
P_REF(ParentGroup)
// TODO P_REF(Renderer)
// TODO P_REF(BoundLine)
P_RO(VertexFormatNumAttributes)
P_RO(VertexBufferHandle)
P(GridIndexes)
P(GridSize)
P(HasDirtyBatches)
P(HasChanges)
P_REF(Bounds)
P(CullFlags)
END_CLS()

