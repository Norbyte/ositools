<?xml version="1.0" encoding="UTF-8"?>
<BinaryMappings>
  <Mappings Version="3.6.117.3735" Default="true">

    <DllImport Symbol="CrtAlloc" Module="ucrtbase.dll" Proc="malloc" />
    <DllImport Symbol="CrtFree" Module="ucrtbase.dll" Proc="free" />
    
    <DllImport Symbol="IgValuePathMakeNameRef" Module="iggy_w64.dll" Proc="Igg&#121;ValuePathMakeNameRef" />
    <DllImport Symbol="IgValuePathPathMakeArrayRef" Module="iggy_w64.dll" Proc="Igg&#121;ValuePathMakeArrayRef" />
    <DllImport Symbol="IgValuePathSetArrayIndex" Module="iggy_w64.dll" Proc="Igg&#121;ValuePathSetArrayIndex" />
    <DllImport Symbol="IgValueGetType" Module="iggy_w64.dll" Proc="Igg&#121;ValueGetTypeRS" />
    <DllImport Symbol="IgValueGetArrayLength" Module="iggy_w64.dll" Proc="Igg&#121;ValueGetArrayLengthRS" />
    <DllImport Symbol="IgValueGetBoolean" Module="iggy_w64.dll" Proc="Igg&#121;ValueGetBooleanRS" />
    <DllImport Symbol="IgValueGetF64" Module="iggy_w64.dll" Proc="Igg&#121;ValueGetF64RS" />
    <DllImport Symbol="IgValueGetStringUTF8" Module="iggy_w64.dll" Proc="Igg&#121;ValueGetStringUTF8RS" />
    <DllImport Symbol="IgValueSetBoolean" Module="iggy_w64.dll" Proc="Igg&#121;ValueSetBooleanRS" />
    <DllImport Symbol="IgValueSetF64" Module="iggy_w64.dll" Proc="Igg&#121;ValueSetF64RS" />
    <DllImport Symbol="IgValueSetStringUTF8" Module="iggy_w64.dll" Proc="Igg&#121;ValueSetStringUTF8RS" />
    <DllImport Symbol="IgPlayerCreateFastNameUTF8" Module="iggy_w64.dll" Proc="Igg&#121;PlayerCreateFastNameUTF8" />
    <DllImport Symbol="IgPlayerCallMethod" Module="iggy_w64.dll" Proc="Igg&#121;PlayerCallMethodRS" />
    
    <DllImport Symbol="IgSetWarningCallback" Module="iggy_w64.dll" Proc="Igg&#121;SetWarningCallback" />
    <DllImport Symbol="IgSetTraceCallbackUTF8" Module="iggy_w64.dll" Proc="Igg&#121;SetTraceCallbackUTF8" />

    <Mapping Name="esv::StatusHit::__vftable" Scope="Custom">
      40 55  // push    rbp
      41 54  // push    r12
      41 57  // push    r15
      <Target Type="Absolute" Offset="0" EngineCallback="FindStatusHit" />
    </Mapping>

    <Mapping Name="esv::StatusHeal::__vftable" Scope="Custom">
      48 89 5C 24 10  // mov     [rsp-8+arg_8], rbx
      48 89 74 24 18  // mov     [rsp-8+arg_10], rsi
      <Target Type="Absolute" Offset="0" EngineCallback="FindStatusHeal" />
    </Mapping>

    <Mapping Name="CharacterStatGetters::GetAbility" Scope="Custom">
      45 33 C9  // xor     r9d, r9d
      45 33 C0  // xor     r8d, r8d
      8B D0  // mov     edx, eax
      48 8B CB  // mov     rcx, rbx
      @func E8 ?? ?? ?? ??  // call    CDivinityStats_Character__GetAbility
      <Target Type="Indirect" Offset="@func" Symbol="CharacterStatGetters__GetAbility" />
    </Mapping>

    <Mapping Name="CharacterStatGetters::GetTalent" Scope="Custom">
      45 0F B6 C7  // movzx   r8d, r15b
      BA 03 00 00 00  // mov     edx, 3
      48 8B CB  // mov     rcx, rbx
      03 F7  // add     esi, edi
      @func E8 ?? ?? ?? ??  // call    CDivinityStats_Character__HasTalent
      <Target Type="Indirect" Offset="@func" Symbol="CharacterStatGetters__GetTalent" />
    </Mapping>

    <Mapping Name="CharacterStatGetters::GetChanceToHitBoost" Scope="Custom">
      48 0F 4D C2  // cmovge  rax, rdx
      8B 18  // mov     ebx, [rax]
      @func E8 ?? ?? ?? ??  // call    CDivinityStats_Character__GetChanceToHitBoost
      <Target Type="Indirect" Offset="@func" Symbol="CharacterStatGetters__GetChanceToHitBoost" />
    </Mapping>

    <Mapping Name="eoc::SkillPrototype::GetSkillDamage" Scope="Custom">
      44 88 4C 24 20  // mov     byte ptr [rsp+arg_18], r9b
      48 89 54 24 10  // mov     [rsp+damageList], rdx
      <Target Type="Absolute" Offset="0" Symbol="SkillPrototype__GetSkillDamage" /> <!-- eoc::SkillPrototype::GetSkillDamage2 -->
    </Mapping>

    <Mapping Name="EoCMemoryMgr" Critical="true" >
      89 41 10  // mov     [rcx+10h], eax
      @free E8 ?? ?? ?? ??  // call    ls__GlobalAllocator__Free
      48 8B 47 08  // mov     rax, [rdi+8]
      BA 28 01 00 00  // mov     edx, 128h
      48 89 46 08  // mov     [rsi+8], rax
      48 C7 47 08 00 00 00 00  // mov     qword ptr [rdi+8], 0
      C7 07 00 00 00 00  // mov     dword ptr [rdi], 0
      @alloc E8 ?? ?? ?? ??  // call    ls__GlobalAllocator__Malloc
      33 D2  // xor     edx, edx
      <Target Type="Indirect" Offset="@alloc" Symbol="EoCAlloc" /> <!-- EoCAlloc -->
      <Target Type="Indirect" Offset="@free" Symbol="EoCFree" /> <!-- EoCFree -->
    </Mapping>

	<Mapping Name="CDivinityStats_Character::GetWeaponAnimationSetType">
		48 8b 05 ?? ?? ?? ?? //      MOV        RAX,qword ptr [DAT_142554400]                    = 00002B992DDFA232h
		48 33 c4 //       XOR        RAX,RSP
		48 89 45 2f //    MOV        qword ptr [RBP + local_30],RAX
		4c 8b f9 //       MOV        R15,RCX
		48 89 4d bf //    MOV        qword ptr [RBP + local_a0],RCX
		48 8b 89 ?? ?? ?? ?? //      MOV        RCX,qword ptr [RCX + 0x138]
		@call e8 ?? ?? ?? ?? //      CALL       GetWeaponAnimationSetType                        undefined GetWeaponAnimationSetT
		<Target Type="Indirect" Offset="@call" Symbol="CDivinityStats_Character_GetWeaponAnimationSetType" />
	</Mapping>

    <Mapping Name="ls::FixedString::Create" Critical="true" >
      48 8B F0  // mov     rsi, rax
      48 85 C0  // test    rax, rax
      0F ?? ?? ?? 00 00  // jz      loc_xxx
      83 CA FF  // or      edx, 0FFFFFFFFh
      4C 89 74 ?? 60  // mov     [rsp+0DB0h+var_D50], r14
      @damage 48 8D 0D ?? ?? ?? ??  // lea     rcx, str_Damage ; "Damage"
      @func E8 ?? ?? ?? ??  // call    ls__FixedString__Create
      83 CA FF  // or      edx, 0FFFFFFFFh
      <Condition Type="String" Offset="@damage" Value="Damage" />
      <Target Type="Indirect" Offset="@func" Symbol="ls__FixedString__Create" /> <!-- ls::FixedString::Create -->
    </Mapping>

    <Mapping Name="ls::FileReader::FileReader" Critical="true" >
      F3 0F 7F 45 D7  // movdqu  [rbp+4Fh+var_78], xmm0
      E8 ?? ?? ?? ??  // call    xxx
      45 33 C0  // xor     r8d, r8d
      89 75 17  // mov     [rbp+4Fh+var_38], esi
      48 8B D7  // mov     rdx, rdi
      48 89 75 1F  // mov     [rbp+4Fh+var_30], rsi
      48 8D 4D CF  // lea     rcx, [rbp+4Fh+var_80]
      @ctor E8 ?? ?? ?? ??  // call    ls__FileReader__FileReader
      48 8D 55 CF  // lea     rdx, [rbp+4Fh+var_80]
      48 8D 4C 24 30  // lea     rcx, [rsp+110h+var_E0]
      E8 ?? ?? ?? ??  // call    sub_1411CF840
      48 8D 4D CF  // lea     rcx, [rbp+4Fh+var_80]
      @dtor E8 ?? ?? ?? ??  // call    ls__FileReader__dtor
      <Target Type="Indirect" Offset="@ctor" Symbol="ls__FileReader__ctor" /> <!-- ls::FileReader::FileReader -->
      <Target Type="Indirect" Offset="@dtor" Symbol="ls__FileReader__dtor" /> <!-- ls::FileReader::~FileReader -->
    </Mapping>

    // TODO - find FileReaderDtor

    <Mapping Name="PathRoots" Critical="true" >
      48 83 EC 20  // sub     rsp, 20h
      0F B7 C2  // movzx   eax, dx
      48 8B D9  // mov     rbx, rcx
      @ref 48 8D 0D ?? ?? ?? ??  // lea     rcx, ls__Path__s_Roots
      49 8B F8  // mov     rdi, r8
      48 8D 34 C1  // lea     rsi, [rcx+rax*8]
      <Target Type="Indirect" Offset="@ref" Symbol="ls__PathRoots" /> <!-- PathRoots -->
    </Mapping>

    <Mapping Name="esv::GameActionManager::CreateAction">
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fsx_GameAction
      ?? 8B ??  // mov     xx, xx
      FF 90 80 00 00 00  // call    qword ptr [rax+80h]
      84 C0  // test    al, al
      0F 84 ?? ?? 00 00  // jz      xxx
      45 84 FF  // test    r15b, r15b
      74 ??  // jz      short loc_xxx
      4C 8B 06  // mov     r8, [rsi]
      49 8B ??  // mov     rcx, xx
      8B 56 08  // mov     edx, [rsi+8]
      @func E8 ?? ?? ?? ??  // call    esv__GameActionManager__CreateAction
      <Condition Type="FixedString" Offset="@str" Value="GameAction" />
      <Target Type="Indirect" Offset="@func" Symbol="esv__GameActionManager__CreateAction" /> <!-- esv::GameActionManager::CreateAction -->
    </Mapping>

    <Mapping Name="esv::ProjectileHelpers::ShootProjectile">
      C6 45 AE 01  // mov     [rbp+50h+var_A2], 1
      F6 80 08 02 00 00 0C  // test    byte ptr [rax+208h], 0Ch
      0F 95 45 AD  // setnz   [rbp+50h+var_A3]
      @func E8 ?? ?? ?? ??  // call    esv__ProjectileHelpers__ShootProjectile
      <Target Type="Indirect" Offset="@func" Symbol="esv__ProjectileHelpers__ShootProjectile" /> <!-- esv::ProjectileHelpers::ShootProjectile -->
    </Mapping>

    <Mapping Name="esv::Projectile::Explode">
      48 8D AC 24 F0 FD FF FF  // lea     rbp, [rsp-210h]
      48 81 EC 10 03 00 00  // sub     rsp, 310h
      44 0F 29 B4 24 80 02 00 00  // movaps  [rsp+330h+var_B0], xmm14
      44 0F 29 BC 24 70 02 00 00  // movaps  [rsp+330h+var_C0], xmm15
      <Target Type="Absolute" Offset="-0x13" Symbol="esv__Projectile__Explode" /> <!-- esv::Projectile::Explode -->
    </Mapping>
    
    <Mapping Name="esv::LevelManager" Scope="Custom">
      @mgr 48 8B 05 ?? ?? ?? ??  // mov     rax, cs:ls__gServerLevelAllocator
      4C 8D 44 24 60  // lea     r8, [rsp+58h+arg_0]
      48 8D 54 24 70  // lea     rdx, [rsp+58h+arg_10]
      C7 44 24 60 FF FF FF FF  // mov     dword ptr [rsp+58h+arg_0], 0FFFFFFFFh
      48 8B 88 80 00 00 00  //  mov     rcx, [rax+80h]
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:ls__ObjectHandle__Unassigned
      48 89 44 24 70  // mov     [rsp+58h+arg_10], rax
      48 8B B9 D0 00 00 00  // mov     rdi, [rcx+0D0h]
      48 8B CF  // mov     rcx, rdi
      E8 ?? ?? ?? ??  // call    xxx
      4C 8D 46 70  // lea     r8, [rsi+70h]
      48 8B C8  // mov     rcx, rax
      48 8D 56 68  // lea     rdx, [rsi+68h]
      48 8B D8  // mov     rbx, rax
      @setup E8 ?? ?? ?? ??  // call    esv__GameObjectMoveAction__Setup
      48 8D 8F 30 01 00 00  // lea     rcx, [rdi+130h]
      48 89 5C 24 60  // mov     [rsp+58h+arg_0], rbx
      48 8D 54 24 60  // lea     rdx, [rsp+58h+arg_0]
      @add E8 ?? ?? ?? ??  // call    esv__GameActionManager__AddGameAction
      <Target Type="Indirect" Offset="@mgr" Symbol="esv__LevelManager" /> <!-- esv::LevelManager -->
      <Target Type="Indirect" Offset="@setup" Symbol="esv__GameObjectMoveAction__Setup" /> <!-- esv::GameObjectMoveAction::Setup -->
      <Target Type="Indirect" Offset="@add" Symbol="esv__GameActionManager__AddGameAction" /> <!-- esv::GameActionManager::AddGameAction -->
    </Mapping>

    <Mapping Name="esv::LevelManager Initial">
      0F 84 ?? 00 00 00  // jz      xxx
      4C 8B 00  // mov     r8, [rax]
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_ForceMove
      48 8B C8  // mov     rcx, rax
      41 FF 50 28  // call    qword ptr [r8+28h]
      4D 8B 06  // mov     r8, [r14]
      49 8B CE  // mov     rcx, r14
      <Condition Type="FixedString" Offset="@str" Value="ForceMove" />
      <Target Type="Absolute" Offset="0" NextSymbol="esv::LevelManager" NextSymbolSeekSize="0x100" /> <!-- esv::LevelManager -->
    </Mapping>
    
    <Mapping Name="esv::WallAction::CreateWall" Scope="Custom">
      48 8B C4  // mov     rax, rsp
      48 89 58 10  // mov     [rax+10h], rbx
      48 89 70 18  // mov     [rax+18h], rsi
      <Target Type="Absolute" Offset="0" Symbol="esv__WallAction__CreateWall" /> <!-- esv::WallAction::CreateWall -->
    </Mapping>

    <Mapping Name="esv::WallAction::CreateWall Initial">
      F3 41 0F 5E C6  // divss   xmm0, xmm14
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_Template1
      49 8B CC  // mov     rcx, r12
      41 8B FE  // mov     edi, r14d
      <Condition Type="FixedString" Offset="@str" Value="Template1" />
      <Target Type="Absolute" Offset="-0x300" NextSymbol="esv::WallAction::CreateWall" NextSymbolSeekSize="0x300" /> <!-- esv::WallAction::CreateWall -->
    </Mapping>
    
    <Mapping Name="esv::TornadoAction::Setup" Scope="Custom">
      48 8B C4  // mov     rax, rsp
      53  // push    rbx
      <Target Type="Absolute" Offset="0" Symbol="esv__TornadoAction__Setup" /> <!-- esv::TornadoAction::Setup -->
    </Mapping>

    <Mapping Name="esv::TornadoAction::Setup Initial">
      EB ??  // jmp     short xxx
      48 8B 00  // mov     rax, [rax]
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fsx_RandomPoints
      48 8B ??  // mov     rcx, rbx
      FF 50 28  // call    qword ptr [rax+28h]
      4C 8B ??  // mov     r8, [rbx]
      <Condition Type="FixedString" Offset="@str" Value="RandomPoints" />
      <Target Type="Absolute" Offset="-0x200" NextSymbol="esv::TornadoAction::Setup" NextSymbolSeekSize="0x200" /> <!-- TornadoAction -->
    </Mapping>

    <Mapping Name="esv::SummonHelpers::Summon" Scope="Custom">
      48 8D 54 24 70  // lea     rdx, [rsp+220h+args]
      40 88 75 A1  // mov     byte ptr [rbp+120h+var_180+1], sil
      48 8D 4D 30  // lea     rcx, [rbp+120h+results]
      @func E8 ?? ?? ?? ??  // call    esv__SummonHelpers__Summon
      48 8B 55 30  // mov     rdx, [rbp+120h+results.SummonCharacterHandle]
      <Target Type="Indirect" Offset="@func" Symbol="esv__SummonHelpers__Summon" /> <!-- esv::SummonHelpers::Summon -->
    </Mapping>

    <Mapping Name="esv::SummonHelpers::Summon Initial">
      44 0F 28 94 24 90 01 00 00  // movaps  xmm10, [rsp+220h+var_90]
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_SpawnObject
      49 8B CC  // mov     rcx, r12
      <Condition Type="FixedString" Offset="@str" Value="SpawnObject" />
      <Target Type="Absolute" Offset="-0x400" NextSymbol="esv::SummonHelpers::Summon" NextSymbolSeekSize="0x400" /> <!-- esv::SummonHelpers::Summon -->
    </Mapping>
    
    <Mapping Name="esv::StatusMachine::ApplyStatus" Scope="Custom">
      C7 43 2C 00 00 00 00  // mov     dword ptr [rbx+2Ch], 0
      48 8B CF  // mov     rcx, rdi
      @func E8 ?? ?? ?? ??  // call    esv__StatusMachine__ApplyStatus
      48 8B 7C 24 40  // mov     rdi, [rsp+28h+arg_10]
      <Target Type="Indirect" Offset="@func" Symbol="esv__StatusMachine__ApplyStatus" /> <!-- esv::StatusMachine::ApplyStatus -->
    </Mapping>

    <Mapping Name="esv::StatusMachine::CreateStatus">
      83 7A 1C 00  // cmp     dword ptr [rdx+1Ch], 0
      48 8B F2  // mov     rsi, rdx
      4C 8B F1  // mov     r14, rcx
      0F 8E 8C 00 00 00  // jle     short xxx
      4C 8B 05 ?? ?? ?? ??  // mov     r8, cs:?Unassigned@ComponentHandle@ls@@2V12@B
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_LIFESTEAL
      48 89 5C 24 30  //  mov     [rsp+28h+arg_0], rbx
      48 89 7C 24 40  //  mov     [rsp+28h+arg_10], rdi
      48 8B B9 A0 01 00 00  //  mov     rdi, [rcx+1A0h]
      48 8B CF  //  mov     rcx, rdi
      @create E8 ?? ?? ?? ??  //  call    esv__StatusMachine__CreateStatus
      <Condition Type="FixedString" Offset="@str" Value="LIFESTEAL" />
      <Target Type="Indirect" Offset="@create" Symbol="esv__StatusMachine__CreateStatus" /> <!-- esv::StatusMachine::CreateStatus -->
      <Target Type="Absolute" Offset="55" NextSymbol="esv::StatusMachine::ApplyStatus" NextSymbolSeekSize="0x100" /> <!-- esv::StatusMachine::ApplyStatus -->
    </Mapping>

    <Mapping Name="esv::StatusMachine::Update" Scope="Custom">
      @ref 40 55 // push    rbp
      41 56 // push    r14
      48 83 ec 38 // sub     rsp, 38h
      8b 81 3c 01 00 00 // mov     eax, [rcx+13Ch]
      <Target Type="Absolute" Offset="@ref" Symbol="esv__StatusMachine__Update" />
    </Mapping>

    <Mapping Name="esv::StatusMachine::Update inner">
      @ref e8 ?? ?? ?? ?? // call    esv__Status__ShouldDelete
      0f b6 f0 // movzx   esi, al
      84 c0 // test    al, al
      75 4f // jnz     short loc_141897D59
      80 bb 88 00 00 00 80 // cmp     byte ptr [rbx+88h], 80h ; '€'
      73 38 // jnb     short loc_141897D4B
      f3 0f 10 43 2c // movss   xmm0, dword ptr [rbx+2Ch]
      0f 2f f0 // comiss  xmm6, xmm0
      f3 41 0f 5c 46 08 // subss   xmm0, dword ptr [r14+8]
      0f 93 c0 // setnb   al
      f3 0f 11 43 2c // movss   dword ptr [rbx+2Ch], xmm0
      <Target Type="Indirect" Offset="@ref" Symbol="esv__Status__ShouldDelete" />
      <Target Type="Absolute" Offset="-0x80" NextSymbol="esv::StatusMachine::Update" NextSymbolSeekSize="0x80" />
    </Mapping>

    <Mapping Name="esv::StatusMachine::EnterStatus">
      80 bb 88 00 00 00 80 // cmp     byte ptr [rbx+88h], 80h ; '€'
      73 38 // jnb     short loc_1418982BB
      f3 0f 10 43 2c // movss   xmm0, dword ptr [rbx+2Ch]
      0f 2f f0 // comiss  xmm6, xmm0
      f3 41 0f 5c 46 08 // subss   xmm0, dword ptr [r14+8]
      0f 93 c0 // setnb   al
      f3 0f 11 43 2c // movss   dword ptr [rbx+2Ch], xmm0
      84 c0 // test    al, al
      74 15 // jz      short loc_1418982B2
      48 8b d3 // mov     rdx, rbx
      48 8b cd // mov     rcx, rbp
      @ref1 e8 ?? ?? ?? ?? // call    esv__StatusMachine__DoEnter
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__StatusMachine__EnterStatus" />
    </Mapping>

    <Mapping Name="esv::StatusMachine::DeleteStatusByHandle">
      48 8b 86 30 01 00 00 // mov     rax, [rsi+130h]
      48 8b 0c f8 // mov     rcx, [rax+rdi*8]
      @str 48 8b 05 ?? ?? ?? ?? // mov     rax, cs:fs_INFUSED
      48 39 41 20 // cmp     [rcx+20h], rax
      75 20 // jnz     short loc_141866A6F
      48 8b 01 // mov     rax, [rcx]
      48 8d 54 24 20 // lea     rdx, [rsp+38h+var_18]
      ff 50 10 // call    qword ptr [rax+10h]
      48 8b d0 // mov     rdx, rax; uint64_t *
      48 8b ce // mov     rcx, rsi; esv::StatusManager *
      @ref2 e8 ?? ?? ?? ?? // call    esv__StatusMachine__DeleteStatusByHandle
      <Condition Type="FixedString" Offset="@str" Value="INFUSED" />
      <Target Type="Indirect" Offset="@ref2" Symbol="esv__StatusMachine__DeleteStatusByHandle" />
    </Mapping>

    <Mapping Name="esv::StatusMachine::ExitStatus">
      ff c8 // dec     eax
      89 87 3c 01 00 00 // mov     [rdi+13Ch], eax
      80 be 88 00 00 00 80 // cmp     byte ptr [rsi+88h], 80h ; '€'
      72 08 // jb      short loc_141896F26
      48 8b d6 // mov     rdx, rsi
      @ref1 e8 ?? ?? ?? ?? // call    esv__StatusMachine__ExitStatus
      48 8b 06 // mov     rax, [rsi]
      48 8d 54 24 30 // lea     rdx, [rsp+28h+arg_0]
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__StatusMachine__ExitStatus" />
    </Mapping>

    <Mapping Name="ecl::StatusMachine::ExitStatus">
      ff c8 // dec     eax
      89 83 3c 01 00 00 // mov     [rbx+13Ch], eax
      f6 47 40 02 // test    byte ptr [rdi+40h], 2
      74 0b // jz      short loc_141613406
      48 8b d7 // mov     rdx, rdi; status
      48 8b cb // mov     rcx, rbx; this
      @ref1 e8 ?? ?? ?? ?? // call    ecl__StatusMachine__ExitStatus
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__StatusMachine__ExitStatus" />
    </Mapping>

    <Mapping Name="esv::StatusHit::__vftable Initial">
      4C 8D 0D ?? ?? ?? ??  // lea     r9, fsx_Dummy_BodyFX
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fsx_RS3_FX_GP_Status_Retaliation_Beam_01
      E8 ?? ?? ?? ??  // call    esv__EffectFactory__CreateEffectWrapper
      48 8B D8  // mov     rbx, rax
      <Condition Type="FixedString" Offset="@str" Value="RS3_FX_GP_Status_Retaliation_Beam_01" />
      <Target Type="Absolute" Offset="-0x800" NextSymbol="esv::StatusHit::__vftable" NextSymbolSeekSize="0x800" />
    </Mapping>

    <Mapping Name="esv::StatusHit::Setup">
      40 55  // push    rbp
      41 54  // push    r12
      48 83 EC 38  // sub     rsp, 38h
      4C 89 74 24 28  // mov     [rsp+48h+var_20], r14
      48 8B E9  // mov     rbp, rcx
      4C 8D B1 A0 00 00 00  // lea     r14, [rcx+0A0h]
      4C 89 7C 24 20  // mov     [rsp+48h+var_28], r15
      49 8B CE  // mov     rcx, r14
      E8  // call    HitDamageInfo__Copy
      <Target Type="Absolute" Offset="0" Symbol="esv__StatusHit__Setup" /> <!-- esv::StatusHit::Setup -->
    </Mapping>

    <Mapping Name="esv::StatusHeal::__vftable Initial">
      45 33 C9  // xor     r9d, r9d
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fsx_TargetDependentHeal
      48 8B CB  // mov     rcx, rbx
      FF 90 B0 01 00 00  // call    qword ptr [rax+1B0h]
      <Condition Type="FixedString" Offset="@str" Value="TargetDependentHeal" />
      <Target Type="Absolute" Offset="-0x200" NextSymbol="esv::StatusHeal::__vftable" NextSymbolSeekSize="0xa00" /> <!-- esv::StatusHeal::__vftable -->
    </Mapping>

    <Mapping Name="esv::ParseItem">
      45 0F B6 C1  // movzx   r8d, r9b
      48 8B CF  // mov     rcx, rdi
      @parse E8 ?? ?? ?? ??  // call    esv__ParseItem
      33 D2  // xor     edx, edx
      48 8D 4C 24 38  // lea     rcx, [rsp+78h+var_40]
      @create E8 ?? ?? ?? ??  // call    esv__CreateItemFromParsed
      <Target Type="Indirect" Offset="@parse" Symbol="esv__ParseItem" /> <!-- esv::ParseItem -->
      <Target Type="Indirect" Offset="@create" Symbol="esv__CreateItemFromParsed" /> <!-- esv::CreateItemFromParsed -->
    </Mapping>

    <Mapping Name="UICharacterSheetHook">
      48 89 5D 60  // mov     [rbp+0D0h+var_70], rbx
      0F B6 88 B0 00 00 00  // movzx   ecx, byte ptr [rax+0B0h]
      41 3A CF  // cmp     cl, r15b
      F2 0F 11 75 08  // movsd   [rbp+0D0h+var_C8], xmm6
      48 8B 4E 18  // mov     rcx, [rsi+18h]
      C7 45 B0 03 00 00 00  // mov     [rbp+0D0h+var_120], 3
      // Replacement: c6 45 f8 01             mov    BYTE PTR [rbp-0x8],0x1
      @hook 0F 94 45 F8  // setz    [rbp+0D0h+var_D8]
      <Patch Type="Absolute" Offset="@hook">
        c6 45 f8 01
      </Patch>
    </Mapping>

    <Mapping Name="ActivateEntitySystemHook">
      48 03 93 D0 00 00 00  // add     rdx, [rbx+0D0h]
      E8 ?? ?? ?? ??  // call    ecs__EntityWorld__ActivateSystemInternal
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:ls__GlobalSwitches
      80 B8 F3 0B 00 00 01  // cmp     byte ptr [rax+0BF3h], 1
      // Replacement: 90 90
      @hook 75 ??  // jnz     short loc_1415A124C
      48 6B 15 ?? ?? ?? ?? 38  // imul    rdx, cs:qword_1428F14F0, 38h
      48 8B CB  // mov     rcx, rbx
      <Target Type="Absolute" Offset="@hook" EngineCallback="FindActivateEntitySystem" /> <!-- ActivateEntitySystemHook -->
    </Mapping>

    <Mapping Name="CustomStatUIRollHook">
      // Replacement: C3 (retn)
      @repl 4C 8B DC  // mov     r11, rsp
      48 81 EC 88 00 00 00  // sub     rsp, 88h
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:__security_cookie
      48 33 C4  // xor     rax, rsp
      48 89 44 24 70  // mov     [rsp+88h+var_18], rax
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:ecl__gEoCUIControl
      49 8D 53 A8  // lea     rdx, [r11-58h]
      @ref 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:ls__gPlayerManager
      49 89 43 98  // mov     [r11-68h], rax
      48 8D 05  // lea     rax, ecl__CustomStatsProtocolSomething__vftable
      <Target Type="Indirect" Offset="@ref" Symbol="ls__PlayerManager__Instance" />
      <Patch Type="Absolute" Offset="@repl">
        C3
      </Patch>
    </Mapping>

    <Mapping Name="esv::CustomStatsProtocol::ProcessMsg">
      // Replacement: C3 (retn)>
      4C 89 4C 24 20  // mov     [rsp+arg_18], r9
      53  // push    rbx
      57  // push    rdi
      41 56  // push    r14
      48 83 EC 30  // sub     rsp, 30h
      41 8B 51 08  // mov     edx, [r9+8]
      49 8B F9  // mov     rdi, r9
      4D 8B F0  // mov     r14, r8
      81 FA 3B 01 00 00  // cmp     edx, 13Bh
      <Target Type="Absolute" Offset="0" Symbol="esv__CustomStatsProtocol__ProcessMsg" /> <!-- esv::CustomStatsProtocol::ProcessMsg -->
    </Mapping>

    <Mapping Name="NetworkFixedStrings">
      @str 4C 8D 05 ?? ?? ?? ??  // lea     r8, aNetworkfixedst ; "NetworkFixedStrings"
      BA 01 00 00 00  // mov     edx, 1
      48 8B CF  // mov     rcx, rdi
      FF 90 80 00 00 00  // call    qword ptr [rax+80h]
      48 8B 15 ?? ?? ?? ??  // mov     rdx, cs:qword_14297F520
      @nfs 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:eoc__gNetworkFixedStrings
      48 83 C2 28  // add     rdx, 28h
      @init E8 ?? ?? ??  // call    eoc__NetworkFixedStrings__RegisterAll
      <Condition Type="String" Offset="@str" Value="NetworkFixedStrings" />
      <Target Type="Indirect" Offset="@nfs" Symbol="NetworkFixedStrings" /> <!-- NetworkFixedStrings -->
      <Target Type="Indirect" Offset="@init" Symbol="InitNetworkFixedStrings" /> <!-- InitNetworkFixedStrings -->
    </Mapping>

    <Mapping Name="ErrorFuncs">
      @client 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:ecl__gEocClient
      4C 8D 8D 08 04 00 00  // lea     r9, [rbp+8F8h+var_4F0]
      41 B0 01  // mov     r8b, 1
      48 8D 95 E8 03 00 00  // lea     rdx, [rbp+8F8h+var_510]
      @handle E8 ?? ?? ?? ??  // call    ecl__EocClient__HandleError
      48 8D 8D E8 03 00 00  // lea     rdx, [rbp+8F8h+var_510]
      <Target Type="Indirect" Offset="@client" Symbol="ecl__EoCClient" /> <!-- ecl::EoCClient -->
      <Target Type="Indirect" Offset="@handle" Symbol="ecl__EoCClient__HandleError" /> <!-- ecl::EoCClient::HandleError -->
    </Mapping>

    <Mapping Name="ecl::SkillStateFactory::Init">
      48 8b 07 // mov     rax, [rdi]
      @str1 4c 8d 05 ?? ?? ?? ?? // lea     r8, aSkillStates; "Skill States"
      8d 56 01 // lea     edx, [rsi+1]
      48 8b cf // mov     rcx, rdi
      ff 90 80 00 00 00 // call    qword ptr [rax+80h]
      @ref1 48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:ecl__gSkillStateFactory
      e8 ?? ?? ?? ?? // call    ecl__SkillStateFactory__Init
      48 8b 07 // mov     rax, [rdi]
      <Condition Type="String" Offset="@str1" Value="Skill States" />
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__SkillStateFactory" />
    </Mapping>

    <Mapping Name="esv::SkillStateFactory::Init">
      80 b9 c0 00 00 00 00 // cmp     byte ptr [rcx+0C0h], 0
      48 8b f1 // mov     rsi, rcx
      0f 85 55 02 00 00 // jnz     loc_14196F3FB
      48 8b 41 20 // mov     rax, [rcx+20h]
      83 b8 80 00 00 00 01 // cmp     dword ptr [rax+80h], 1
      0f 84 44 02 00 00 // jz      loc_14196F3FB
      @ref1 48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:esv__gSkillStateFactory
      48 89 5c 24 50 // mov     [rsp+48h+arg_0], rbx
      48 89 6c 24 58 // mov     [rsp+48h+arg_8], rbp
      48 89 7c 24 60 // mov     [rsp+48h+arg_10], rdi
      4c 89 6c 24 68 // mov     [rsp+48h+arg_18], r13
      4c 89 74 24 38 // mov     [rsp+48h+var_10], r14
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__SkillStateFactory" />
    </Mapping>

    <Mapping Name="eoc::SkillPrototypeManager::Init">
      @str 4C 8D 05 ?? ?? ?? ??  // lea     r8, str_Skills     ; "Skills"
      BA 01 00 00 00  // mov     edx, 1
      48 8B CF  // mov     rcx, rdi
      FF 90 80 00 00 00  // call    qword ptr [rax+80h]
      @mgr 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:eoc__gSkillPrototypeManager
      @init E8 ?? ?? ?? ??  // call    eoc__SkillPrototypeManager__Init
      <Condition Type="String" Offset="@str" Value="Skills" />
      <Target Type="Indirect" Offset="@init" Symbol="SkillPrototypeManager__Init" /> <!-- eoc::SkillPrototypeManager::Init -->
      <Target Type="Indirect" Offset="@mgr" Symbol="eoc__SkillPrototypeManager" /> <!-- eoc::SkillPrototypeManager -->
    </Mapping>

    <Mapping Name="RPGStats::ParseStructureFolder">
      @ref1 e8 ?? ?? ?? ?? // call    RPGStats__ParseStructureFolder
      48 8b d5 // mov     rdx, rbp
      48 8b ce // mov     rcx, rsi
      @ref2 e8 ?? ?? ?? ?? // call    RPGStats__ParseDataFolder
      48 8b d5 // mov     rdx, rbp
      48 8b ce // mov     rcx, rsi
      e8 ?? ?? ?? ?? // call    RPGStats__ParseDeltaMods
      48 8d 8e d8 00 00 00 // lea     rcx, [rsi+0D8h]
      48 8b 01 // mov     rax, [rcx]
      <Target Type="Indirect" Offset="@ref1" Symbol="RPGStats__ParseStructureFolder" />
      <Target Type="Indirect" Offset="@ref2" Symbol="RPGStats__ParseDataFolder" />
    </Mapping>

    <Mapping Name="RPGStats::Load">
      48 8D 55 80  // lea     rdx, [rbp+380h+modStatPaths]
      48 8B CB  // mov     rcx, rbx
      @func E8 ?? ?? ?? ??  // call    CRPGStats__Load
      48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:qword_1429E2700
      48 8B 01  // mov     rax, [rcx]
      FF 50 08  // call    qword ptr [rax+8]
      <Target Type="Indirect" Offset="@func" Symbol="RPGStats__Load" />
      <Target Type="Indirect" Offset="@func" NextSymbol="RPGStats::ParseStructureFolder" NextSymbolSeekSize="0x100" />
    </Mapping>

    <Mapping Name="RPGStats::GetItemLeveledBaseStat">
      4c 8b c2 // mov     r8, rdx
      8b d7 // mov     edx, edi
      @ref1 e8 ?? ?? ?? ?? // call    RPGStats__GetItemLeveledBaseStat
      48 85 c0 // test    rax, rax
      0f 84 8b 00 00 00 // jz      loc_141D29511
      49 8b 0e // mov     rcx, [r14]
      @str1 48 3b 0d ?? ?? ?? ?? // cmp     rcx, cs:fs_Damage.Str
      75 16 // jnz     short loc_141D294A8
      f3 0f 10 5c 24 60 // movss   xmm3, [rsp+38h+arg_20]
      <Condition Type="FixedString" Offset="@str1" Value="Damage" />
      <Target Type="Indirect" Offset="@ref1" Symbol="RPGStats__GetItemLeveledBaseStat" />
    </Mapping>

    <Mapping Name="eoc::StatusPrototypeManager::Init">
      @str 4C 8D 05 ?? ?? ?? ??  // lea     r8, aStatuses   ; "Statuses"
      BA 01 00 00 00  // mov     edx, 1
      48 8B CF  // mov     rcx, rdi
      FF 90 80 00 00 00  // call    qword ptr [rax+80h]
      @mgr 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:eoc__gStatusPrototypeManager
      <Condition Type="String" Offset="@str" Value="Statuses" />
      <Target Type="Indirect" Offset="@mgr" Symbol="eoc__StatusPrototypeManager" /> <!-- eoc::StatusPrototypeManager -->
    </Mapping>

    <Mapping Name="ecl::GameStateMachine::Update" Scope="Custom">
      48 89 5C 24 08  // mov     [rsp+arg_0], rbx
      48 89 6C 24 10  // mov     [rsp+arg_8], rbp
      48 89 74 24 18  // mov     [rsp+arg_10], rsi
      <Target Type="Absolute" Offset="0" Symbol="ecl__GameStateMachine__Update" /> <!-- ecl::GameStateMachine::Update -->
    </Mapping>

    <Mapping Name="ecl::GameStateEventManager::ExecuteGameStateChangedEvent" Critical="true">
      @str 4C 8D 0D ?? ?? ?? ??  // lea r9, aClientStateSwa ; "CLIENT STATE SWAP - from: %s, to: %s\n"
      4C 89 44 24 28  // mov     [rsp+68h+var_40], r8
      33 D2  // xor     edx, edx
      4C 8D 44 24 30  // lea     r8, [rsp+68h+var_38]
      <Condition Type="String" Offset="@str" Value="CLIENT STATE SWAP - from: %s, to: %s&#10;" />
      <Target Type="Indirect" Offset="0x2A" Symbol="ecl__GameStateEventManager__ExecuteGameStateChangedEvent" /> <!-- ecl::GameStateEventManager::ExecuteGameStateChangedEvent -->
      <Target Type="Absolute" Offset="-0x300" NextSymbol="ecl::GameStateMachine::Update" NextSymbolSeekSize="0x300" /> <!-- ecl::GameStateMachine::Update -->
    </Mapping>

    <Mapping Name="esv::GameStateMachine::Update" Scope="Custom">
      40 56  // push    rsi
      48 83 EC 60  // sub     rsp, 60h
      83 79 24 00  // cmp     dword ptr [rcx+24h], 0
      <Target Type="Absolute" Offset="0" Symbol="esv__GameStateMachine__Update" /> <!-- esv::GameStateMachine::Update -->
    </Mapping>

    <Mapping Name="esv::GameStateEventManager::ExecuteGameStateChangedEvent" Critical="true">
      @str 4C 8D 0D ?? ?? ?? ??  // lea     r9, aServerStateSwa ; "SERVER STATE SWAP - from: %s, to: %s\n"
      4C 89 44 24 28  // mov     [rsp+68h+var_40], r8
      33 D2  // xor     edx, edx
      4C 8D 44 24 30  // lea     r8, [rsp+68h+var_38]
      <Condition Type="String" Offset="@str" Value="SERVER STATE SWAP - from: %s, to: %s&#10;" />
      <Target Type="Indirect" Offset="0x2A" Symbol="esv__GameStateEventManager__ExecuteGameStateChangedEvent" /> <!-- esv::GameStateEventManager::ExecuteGameStateChangedEvent -->
      <Target Type="Absolute" Offset="-0x300" NextSymbol="esv::GameStateMachine::Update" NextSymbolSeekSize="0x300" /> <!-- esv::GameStateMachine::Update -->
    </Mapping>

    <Mapping Name="esv::GameStateThreaded::GameStateWorker::DoWork">
      48 8D 2D ?? ?? ?? ??  // lea     rbp, aEsvGamestateth ; "esv::GameStateThreaded::GameStateWorker::DoWork"
      <Condition Type="String" Offset="0" Value="esv::GameStateThreaded::GameStateWorker::DoWork" />
      <Target Type="Absolute" Offset="-0x35" Symbol="esv__GameStateThreaded__GameStateWorker__DoWork" /> <!-- esv::GameStateThreaded::GameStateWorker::DoWork -->
    </Mapping>

    <Mapping Name="ecl::GameStateThreaded::GameStateWorker::DoWork">
      48 8D 2D ?? ?? ?? ??  // lea     rbp, aEclGamestateth ; "ecl::GameStateThreaded::GameStateWorker::DoWork"
      <Condition Type="String" Offset="0" Value="ecl::GameStateThreaded::GameStateWorker::DoWork" />
      <Target Type="Absolute" Offset="-0x26" Symbol="ecl__GameStateThreaded__GameStateWorker__DoWork" /> <!-- ecl::GameStateThreaded::GameStateWorker::DoWork -->
    </Mapping>

    <Mapping Name="net::Host::AddProtocol">
      4C 8B C0  // mov     r8, rax
      BA 25 00 00 00  // mov     edx, 25h ; '%'
      48 8B CF  // mov     rcx, rdi
      @func E8 ?? ?? ?? ??  // call    net__Host__AddProtocol
      48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:xxx
      4C 8D 4D 10  // lea     r9, [rbp+arg_0]
      <Target Type="Indirect" Offset="@func" Symbol="net__Host__AddProtocol" /> <!-- net::Host::AddProtocol -->
    </Mapping>

    <Mapping Name="net::MessageFactory::RegisterMessage">
      @str 48 8D 0D ?? ?? ?? ??  // lea     rcx, aEocnetLevelloa ; "eocnet::LevelLoadMessage"
      41 B9 04 00 00 00  // mov     r9d, 4
      48 89 4C 24 20  // mov     [rsp+30h+var_10], rcx
      4C 8B C0  // mov     r8, rax
      48 8B CF  // mov     rcx, rdi
      BA FE 00 00 00  // mov     edx, 0FEh
      @func E8 ?? ?? ?? ??  // call    net__MessageFactory__RegisterMessage
      <Condition Type="String" Offset="@str" Value="eocnet::LevelLoadMessage" />
      <Target Type="Indirect" Offset="@func" Symbol="net__MessageFactory__RegisterMessage" /> <!-- net::MessageFactory::RegisterMessage -->
    </Mapping>

    <Mapping Name="net::MessageFactory::GetFreeMessage">
      84 C0  // test    al, al
      0F 84 ?? ?? 00 00  // jz      xxx
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:esv__gEoCServer
      BA 2D 00 00 00  // mov     edx, 2Dh
      48 8B B0 80 00 00 00  // mov     rsi, [rax+80h]
      48 8B 8E E8 01 00 00  // mov     rcx, [rsi+1E8h]
      @func E8 ?? ?? ?? ??  // call    net__MessageFactory__GetFreeMessage
      <Target Type="Indirect" Offset="@func" Symbol="net__MessageFactory__GetFreeMessage" /> <!-- net::MessageFactory::GetFreeMessage -->
    </Mapping>

    <Mapping Name="CharacterStatsGetters">
      40 84 ED  // test    bpl, bpl
      74 08  // jz      short loc_141C7A428
      8B 86 44 03 00 00  // mov     eax, [rsi+344h]
      EB 06  // jmp     short loc_141C7A42E
      8B 86 40 03 00 00  // mov     eax, [rsi+340h]
      40 0F B6 D5  // movzx   edx, bpl
      89 43 44  // mov     [rbx+44h], eax
      <Target Type="Absolute" Offset="0" EngineCallback="FindCharacterStatGetters" />
    </Mapping>

    <Mapping Name="CharacterStatGetters::GetHitChance">
      40 56  // push    rsi
      57  // push    rdi
      48 83 EC 28  // sub     rsp, 28h
      45 33 C0  // xor     r8d, r8d
      48 8B F2  // mov     rsi, rdx
      48 8B F9  // mov     rdi, rcx
      41 8D 50 78  // lea     edx, [r8+78h]
      E8 ?? ?? ?? ??  // call    CDivinityStats_Character__HasTalent
      <Target Type="Absolute" Offset="0" Symbol="CharacterStatGetters__GetHitChance" NextSymbol="CharacterStatGetters::GetChanceToHitBoost" NextSymbolSeekSize="0x200" />
    </Mapping>

    <Mapping Name="CharacterStatGetters::GetAttackAPCost">
      40 0f b6 c7 // movzx   eax, dil
      ff 84 81 a0 02 00 00 // inc     dword ptr [rcx+rax*4+2A0h]
      48 8b 76 08 // mov     rsi, [rsi+8]
      48 8b 8e f8 00 00 00 // mov     rcx, [rsi+0F8h]; this
      @ref1 e8 ?? ?? ?? ?? // call    CDivinityStats_Character__GetAttackAPCost
      8b d8 // mov     ebx, eax
      85 c0 // test    eax, eax
      74 18 // jz      short loc_1416EB999
      48 8b 8e f8 00 00 00 // mov     rcx, [rsi+0F8h]
      <Target Type="Indirect" Offset="@ref1" Symbol="CDivinityStats_Character__GetAttackAPCost" />
    </Mapping>

    <Mapping Name="Character::_HitInternal" Scope="Custom">
      88 44 24 28  // mov     [rsp+98h+noHitRoll], al
      89 7C 24 20  // mov     [rsp+98h+hitType], edi
      @func E8 ?? ?? ?? ??  // call    CDivinityStats_Character___HitInternal
      <Target Type="Indirect" Offset="@func" Symbol="CDivinityStats_Character__HitInternal" /> <!-- Character::_HitInternal -->
    </Mapping>

    <Mapping Name="esv::Character::CharacterHit" Scope="Custom">
      C7 44 24 20 05 00 00 00  // mov     dword ptr [rsp+140h+var_120], 5
      44 89 65 50  // mov     [rbp+40h+arg_0], r12d
      @func E8 ?? ?? ?? ??  // call    esv__Character__Hit
      4C 8B AE A0 01 00 00  // mov     r13, [rsi+1A0h]
      EB 5F  // jmp short xxx
      <Target Type="Indirect" Offset="@func" Symbol="esv__Character__Hit" NextSymbol="Character::_HitInternal" NextSymbolSeekSize="0x280" />
    </Mapping>

    <Mapping Name="esv::Character::Hit">
      74 74  // jz      short loc_141A3EED4
      48 8B 00  // mov     rax, [rax]
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_DamageItems
      48 8B CE  // mov     rcx, rsi
      FF 50 28  // call    qword ptr [rax+28h]
      <Condition Type="FixedString" Offset="@str" Value="DamageItems" />
      <Target Type="Absolute" Offset="0" NextSymbol="esv::Character::CharacterHit" NextSymbolSeekSize="0x400" /> <!-- esv::Character::Hit -->
    </Mapping>

    <Mapping Name="FindLibraries" AllowFail="true" >
      8B C8  // mov ecx, eax
      FF C0  // inc eax
      89 05 ?? ?? ?? ??  // mov cs:xxx, eax
      85 C9  // test ecx, ecx
      75 17  // jnz short loc_xxx
      44 8D 41 ??  // lea r8d, [rdx+XXh]
      48 8D 0D ?? ?? ?? ??  // lea rcx, xxx
      48 8D 15 ?? ?? ?? ??  // lea rdx, xxx
      <Target Type="Absolute" Offset="0" EngineCallback="FindLibraries" />
    </Mapping>

    <Mapping Name="esv::ActionMachine::UpdateSyncState">
      C6 44 24 28 01  // mov     [rsp+58h+var_30], 1
      45 33 C9  // xor     r9d, r9d
      45 33 C0  // xor     r8d, r8d
      C6 44 24 20 00  // mov     [rsp+58h+var_38], 0
      41 0F B6 D2  // movzx   edx, r10b
      41 C6 44 3B 53 00  // mov     byte ptr [r11+rdi+53h], 0
      48 8B CF  // mov     rcx, rdi
      E8 ?? ?? ?? ??  // call    xxx
      <Target Type="Indirect" Offset="29" EngineCallback="FindActionMachineSetState" /> <!-- esv::ActionMachine::UpdateSyncState -->
    </Mapping>

    <Mapping Name="esv::ActionMachine::ResetState">
      48 83 EC 30  // sub     rsp, 30h
      40 32 F6  // xor     sil, sil
      4C 89 74 24 50  // mov     [rsp+48h+arg_0], r14
      45 33 E4  // xor     r12d, r12d
      48 8D 79 53  // lea     rdi, [rcx+53h]
      0F B6 EA  // movzx   ebp, dl
      48 8D 59 18  // lea     rbx, [rcx+18h]
      4C 8B F9  // mov     r15, rcx
      <Target Type="Absolute" Offset="-20" EngineCallback="FindActionMachineResetState" /> <!-- esv::ActionMachine::ResetState -->
    </Mapping>

    <Mapping Name="eoc::SkillPrototype::FormatDescriptionParam" Scope="Custom">
      4C 8B DC  // mov     r11, rsp
      55  // push    rbp
      53  // push    rbx
      <Target Type="Absolute" Offset="0" Symbol="SkillPrototype__FormatDescriptionParam" /> <!-- eoc::SkillPrototype::FormatDescriptionParam2 -->
    </Mapping>

    <Mapping Name="eoc::SkillPrototype::FormatDescriptionParam Initial">
      48 83 CF FF  // or      rdi, 0FFFFFFFFFFFFFFFFh
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_Damage_Multiplier
      44 8B C7  // mov     r8d, edi
      48 8B CB  // mov     rcx, rbx
      E8 ?? ?? ?? ??  // call    sub_141C979B0
      8B C8  // mov     ecx, eax
      <Condition Type="FixedString" Offset="@str" Value="Damage Multiplier" />
      <Target Type="Absolute" Offset="-0x200" NextSymbol="eoc::SkillPrototype::FormatDescriptionParam" NextSymbolSeekSize="0x200" /> <!-- eoc::SkillPrototype::FormatDescriptionParam -->
    </Mapping>

    <Mapping Name="eoc::SkillPrototype::GetSkillDamage Initial">
      0F 84 4D 06 00 00  // jz      loc_xxx
      4C 8B 00  // mov     r8, [rax]
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_Damage_Multiplier
      48 8B C8  // mov     rcx, rax
      <Condition Type="FixedString" Offset="@str" Value="Damage Multiplier" />
      <Target Type="Absolute" Offset="-0x200" NextSymbol="eoc::SkillPrototype::GetSkillDamage" NextSymbolSeekSize="0x200" /> <!-- eoc::SkillPrototype::GetSkillDamage -->
    </Mapping>

    <Mapping Name="eoc::StatusPrototype::FormatDescriptionParam" Scope="Custom">
      4C 8B DC  // mov     r11, rsp
      55  // push    rbp
      56  // push    rsi
      <Target Type="Absolute" Offset="0" Symbol="StatusPrototype__FormatDescriptionParam" /> <!-- eoc::StatusPrototype::FormatDescriptionParam2 -->
    </Mapping>

    <Mapping Name="eoc::StatusPrototype::FormatDescriptionParam Initial">
      49 89 7B C8  // mov     [r11-38h], rdi
      0F 85 B5 00 00 00  // jnz     loc_xxx
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_DamageStats
      49 8B CE  // mov     rcx, r14
      <Condition Type="FixedString" Offset="@str" Value="DamageStats" />
      <Target Type="Absolute" Offset="-0x100" NextSymbol="eoc::StatusPrototype::FormatDescriptionParam" NextSymbolSeekSize="0x100" /> <!-- eoc::StatusPrototype::FormatDescriptionParam -->
    </Mapping>

    <Mapping Name="esv::EoCServer">
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_CurrentCellCount
      48 8B CB  // mov     rcx, rbx
      FF 90 90 01 00 00  // call    qword ptr [rax+190h]
      48 8B 03  // mov     rax, [rbx]
      48 8B CB  // mov     rcx, rbx
      @server 48 8B 3D ?? ?? ?? ??  //  mov     rdi, cs:esv__gEoCServer
      <Condition Type="FixedString" Offset="@str" Value="CurrentCellCount" />
      <Target Type="Indirect" Offset="@server" Symbol="esv__EoCServer" /> <!-- esv::EoCServer -->
    </Mapping>

    <Mapping Name="esv::TurnManager::UpdateTurnOrder">
      84 D2  // test    dl, dl
      0F 84 0E 05 00 00  // jz      xxx
      88 54 24 10  // mov     [rsp+arg_8], dl
      41 57  // push    r15
      48 83 EC 60  // sub     rsp, 60h
      44 8B 81 C4 00 00 00  // mov     r8d, [rcx+0C4h]
      <Target Type="Absolute" Offset="0" Symbol="esv__TurnManager__UpdateTurnOrder" /> <!-- esv::TurnManager::UpdateTurnOrder -->
    </Mapping>

    <Mapping Name="esv::TurnManager::TryEnterCombat">
      48 8b 08 // mov     rcx, [rax]
      80 65 70 f8 // and     [rbp+270h+targetEntity.Flags], 0F8h
      48 89 4d 50 // mov     [rbp+270h+targetEntity.EntityHandle], rcx
      48 85 db // test    rbx, rbx
      48 8d 4b f8 // lea     rcx, [rbx-8]
      4c 89 65 68 // mov     [rbp+270h+targetEntity.Item], r12
      49 0f 44 cc // cmovz   rcx, r12; this
      f3 0f 7f 45 58 // movdqu  xmmword ptr [rbp+270h+targetEntity.CombatComponentPtr], xmm0
      @ref1 e8 ?? ?? ?? ?? // call    esv__TurnManager__TryEnterCombat
      4c 8b 74 24 70 // mov     r14, [rsp+370h+var_300]
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__TurnManager__TryEnterCombat" />
    </Mapping>

    <Mapping Name="GlobalSwitches">
      48 81 c2 80 01 00 00 // add     rdx, 180h
      48 8b 01 // mov     rax, [rcx]
      ff 90 c0 00 00 00 // call    qword ptr [rax+0C0h]
      48 8b f8 // mov     rdi, rax
      48 85 c0 // test    rax, rax
      0f 84 84 00 00 00 // jz      loc_1404F592C
      @switches 48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:gGlobalSwitches
      48 63 53 08 // movsxd  rdx, dword ptr [rbx+8]
      f3 0f 10 0d ?? ?? ?? ?? // movss   xmm1, cs:dword_14225B898; Y
      48 81 c2 e9 00 00 00 // add     rdx, 0E9h ; 'é'
      <Target Type="Indirect" Offset="@switches" Symbol="ls__GlobalSwitches" /> <!-- GlobalSwitches -->
    </Mapping>

    <Mapping Name="ls::CoreGlobals">
      @ref1 48 8b 05 ?? ?? ?? ?? // mov     rax, cs:gCore__Mouse
      f2 0f 10 00 // movsd   xmm0, qword ptr [rax]
      f2 41 0f 11 86 d0 03 00 00 // movsd   qword ptr [r14+3D0h], xmm0
      e9 e4 08 00 00 // jmp     loc_141522C00
      @str1 48 8d 15 ?? ?? ?? ?? // lea     rdx, aStopdragging; "stopDragging"
      <Condition Type="String" Offset="@str1" Value="stopDragging" />
      <Target Type="Indirect" Offset="@ref1" Symbol="ls__CoreGlobals" />
    </Mapping>

    <Mapping Name="Item::FoldDynamicAttributes">
      4C 8B DC  // mov     r11, rsp
      49 89 4B 08  // mov     [r11+8], rcx
      55  // push    rbp
      41 55  // push    r13
      49 8D 6B A1  // lea     rbp, [r11-5Fh]
      48 81 EC B8 00 00 00  // sub     rsp, 0B8h
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:gGlobalSwitches
      4c 8b e9 // mov     r13, rcx
      80 b8 f3 0b 00 00 01 // cmp     byte ptr [rax+0BF3h], 1
      @ref 0f 85 a5 07 00 00 // jnz     loc_141CC53A1
      <Patch Type="Absolute" Offset="@ref">
        90 e9 a5 07 00 00 // call     loc_141CC53A1
      </Patch>
    </Mapping>

    <Mapping Name="ls::ModuleSettings::HasCustomMods" AllowFail="true" >
      48 89 6C 24 20  // mov     [rsp+arg_18], rbp
      56  // push    rsi
      8B 69 1C  // mov     ebp, [rcx+1Ch]
      33 F6  // xor     esi, esi
      48 85 ED  // test    rbp, rbp
      @ref 0F 84 ?? 00 00 00  // jz      xxx
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:fs_xxx
      <Patch Type="Absolute" Offset="@ref">
        90 E9
      </Patch>
    </Mapping>

    <Mapping Name="ls::ModuleSettings::HasCustomModsGB5" AllowFail="true" >
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:xxx
      33 ED  // xor     ebp, ebp
      48 8B 88 A8 00 00 00  // mov     rcx, [rax+0A8h]
      44 8B B9 A4 03 00 00  // mov     r15d, [rcx+3A4h]
      4D 85 FF  // test    r15, r15
      @ref 0f 84 84 00 00 00 // jz      loc_141AA6D1C
      <Patch Type="Absolute" Offset="@ref">
        90 E9
      </Patch>
    </Mapping>

    <Mapping Name="ls::ModuleSettings::Validate">
      41 54  // push    r12
      41 55  // push    r13
      41 57  // push    r15
      48 83 EC 40  // sub     rsp, 40h
      44 8B 79 1C  // mov     r15d, [rcx+1Ch]
      4D 8B E8  // mov     r13, r8
      8B 42 1C  // mov     eax, [rdx+1Ch]
      4C 8B E2  // mov     r12, rdx
      <Target Type="Absolute" Offset="0" Symbol="ModuleSettings__Validate" /> <!-- ls::ModuleSettings::Validate -->
    </Mapping>

    <Mapping Name="ls::Module::Hash">
      48 89 5C 24 20  // mov     [rsp+arg_18], rbx
      57  // push    rdi
      48 81 EC C0 00 00 00  // sub     rsp, 0C0h
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:__security_cookie
      48 33 C4  // xor     rax, rsp
      48 89 84 24 B0 00 00 00  // mov     [rsp+0C8h+var_18], rax
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:gEngine
      33 FF  // xor     edi, edi
      <Target Type="Absolute" Offset="0" Symbol="Module__Hash" /> <!-- ls::Module::Hash -->
    </Mapping>

    <Mapping Name="esv::LoadProtocol::HandleModuleLoaded">
      48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:xxx
      @str 4C 8D 3D ?? ?? ?? ??  // lea     r15, "esv::LoadProtocol::HandleModuleLoaded"
      49 8B D8  // mov     rbx, r8
      <Condition Type="String" Offset="@str" Value="esv::LoadProtocol::HandleModuleLoaded" />
      <Target Type="Absolute" Offset="-0x24" Symbol="esv__LoadProtocol__HandleModuleLoaded" /> <!-- esv::LoadProtocol::HandleModuleLoaded -->
    </Mapping>

    <Mapping Name="esv::Inventory::Equip">
      48 89 54 24 10  // mov     [rsp-8+arg_8], rdx
      55 56 57 41 54 41 56  // push    rbp, rsi, rdi, r12, r14
      48 8D 6C 24 E9  // lea     rbp, [rsp-17h]
      48 81 EC D0 00 00 00  // sub     rsp, 0D0h
      <Target Type="Absolute" Offset="0" Symbol="esv__Inventory__Equip" /> <!-- esv::Inventory::Equip -->
    </Mapping>

    <Mapping Name="ls::UIObjectManager">
      @instance 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:qword_1429824B0
      4D 8B C6  // mov     r8, r14
      48 81 C1 D8 00 00 00  // add     rcx, 0D8h
      BA 92 00 00 00  // mov     edx, 92h
      @register E8 ?? ?? ?? ??  // call    ls__UIObjectManager__RegisterUIObjectCreator
      <Target Type="Indirect" Offset="@instance" Symbol="UIObjectManager__Instance" /> <!-- ls::UIObjectManager -->
      <Target Type="Indirect" Offset="@register" Symbol="UIObjectManager__RegisterUIObjectCreator" /> <!-- ls::UIObjectManager::RegisterUIObjectCreator -->
    </Mapping>

    <Mapping Name="ls::UIObjectManager::CreateUIObject">
      89 44 24 20  // mov     [rsp+40h+var_20], eax
      45 8D 41 94  // lea     r8d, [r9-6Ch]
      @func E8 ?? ?? ?? ??  // call    ls__UIObjectManager__CreateUIObject
      48 8B 08  // mov     rcx, [rax]
      48 89 8B 10 02 00 00  // mov     [rbx+210h], rcx
      <Target Type="Indirect" Offset="@func" Symbol="UIObjectManager__CreateUIObject" /> <!-- ls::UIObjectManager::CreateUIObject -->
    </Mapping>

    <Mapping Name="ls::UIObjectManager::DestroyUIObject">
      48 8D 93 A8 02 00 00  // lea     rdx, [rbx+2A8h]
      48 8B CF  // mov     rcx, rdi
      @func E8 ?? ?? ?? ??  // call    ls__UIObjectManager__DestroyUIObject
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:ls__ObjectHandle__Unassigned
      48 89 83 A8 02 00 00  // mov     [rbx+2A8h], rax
      45 84 E4  // test    r12b, r12b
      <Target Type="Indirect" Offset="@func" Symbol="UIObjectManager__DestroyUIObject" /> <!-- ls::UIObjectManager::DestroyUIObject -->
    </Mapping>

    <Mapping Name="ls::UIObject::ClearFlag">
      89 9f 00 02 00 00 // mov     [rdi+200h], ebx
      ba e0 01 00 00 // mov     edx, 1E0h
      48 8b cf // mov     rcx, rdi
      @ref1 e8 ?? ?? ?? ?? // call    ls__UIObject__ClearFlag
      ba 20 00 00 00 // mov     edx, 20h ; ' '
      48 8b cf // mov     rcx, rdi
      @ref2 e8 ?? ?? ?? ?? // call    ls__UIObject__RaiseFlag
      <Target Type="Indirect" Offset="@ref1" Symbol="ls__UIObject__ClearFlag" />
      <Target Type="Indirect" Offset="@ref2" Symbol="ls__UIObject__RaiseFlag" />
    </Mapping>

    <Mapping Name="ecl::EoCUI::vftable" Scope="Custom">
      C7 83 48 01 00 00 00 00 00 00  // mov     dword ptr [rbx+148h], 0
      @func 48 8D 05 ?? ?? ?? ??  // lea     rax, ecl__EoCUI__vftable
      <Target Type="Indirect" Offset="@func" Symbol="ecl__EoCUI__vftable" /> <!-- ecl::EoCUI::vftable -->
    </Mapping>

    <Mapping Name="eoc::EoCUI::ctor">
      48 8B D9  // mov     rbx, rcx
      @func E8 ?? ?? ?? ??  // call    ecl__EocUI__ctor
      C7 83 98 01 00 00 00 00 A0 40  // mov     dword ptr [rbx+198h], 40A00000h
      48 8D 8B B0 01 00 00  // lea     rcx, [rbx+1B0h]
      C7 83 9C 01 00 00 FF FF FF FF  // mov     dword ptr [rbx+19Ch], 0FFFFFFFFh
      <Target Type="Indirect" Offset="@func" Symbol="ecl__EoCUI__ctor" NextSymbol="ecl::EoCUI::vftable" NextSymbolSeekSize="0x40" />
    </Mapping>

    <Mapping Name="ecl::CursorControl">
      ff 90 98 00 00 00 // call    qword ptr [rax+98h]
      48 c7 43 68 00 00 00 00 // mov     qword ptr [rbx+68h], 0
      @ref1 48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:ecl__gCursorControl
      83 79 34 30 // cmp     dword ptr [rcx+34h], 30h ; '0'
      75 07 // jnz     short loc_1415E9A81
      c7 41 2c 01 00 00 00 // mov     dword ptr [rcx+2Ch], 1
      c7 41 30 30 00 00 00 // mov     dword ptr [rcx+30h], 30h ; '0'
      e8 ?? ?? ?? ?? // call    sub_1413956E0
      48 8b 05 ?? ?? ?? ?? // mov     rax, cs:ls__gUIObjectManager
      c6 80 14 01 00 00 01 // mov     byte ptr [rax+114h], 1
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__CursorControl" />
    </Mapping>

    <Mapping Name="eoc::gSpeakerManager">
      @mgr 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:eoc__gSpeakerManager
      E8 ?? ?? ?? ??  // call    eoc__SpeakerManager__LoadVoiceMetaData
      48 8B 07  // mov     rax, [rdi]
      @str 4C 8D 05 ?? ?? ?? ??  // lea     r8, aRootTemplates ; "Root templates"
      <Condition Type="String" Offset="@str" Value="Root templates" />
      <Target Type="Indirect" Offset="@mgr" Symbol="eoc__SpeakerManager" /> <!-- eoc::gSpeakerManager -->
    </Mapping>

    <Mapping Name="ls::TranslatedStringRepository::UnloadOverrides">
      @str 4C 8D 05 ?? ?? ?? ??  // lea     r8, aLoadingModLoca ; "Loading Mod Localization"
      BA 01 00 00 00  // mov     edx, 1
      48 8B CF  // mov     rcx, rdi
      FF 90 80 00 00 00  // call    qword ptr [rax+80h]
      4C 8B 25 ?? ?? ?? ??  // mov     r12, cs:ls__gTranslatedStringRepository
      49 8B CC  // mov     rcx, r12
      @func E8 ?? ?? ?? ??  // call    ls__TranslatedStringRepository__UnloadOverrides
      <Condition Type="String" Offset="@str" Value="Loading Mod Localization" />
      <Target Type="Indirect" Offset="@func" Symbol="TranslatedStringRepository__UnloadOverrides" /> <!-- ls::TranslatedStringRepository::UnloadOverrides -->
    </Mapping>

    <Mapping Name="ls::TranslatedStringRepository::Get">
      @instance 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:ls__gTranslatedStringRepository
      4C 8D 44 ?? ??  // lea     r8, [rsp+190h+a3]
      C6 44 24 ?? ??  // mov     [rsp+190h+a6], 1
      48 8D 54 ?? ??  // lea     rdx, [rsp+190h+a2]
      45 33 C9  // xor     r9d, r9d
      88 5C ?? ??  // mov     [rsp+190h+a5], bl
      @get E8 ?? ?? ?? ??  // call    ls__TranslatedStringRepository__Get
      4C 8D 4C ?? ??  // lea     r9, [rsp+190h+var_140]
      4C 8B C0  // mov     r8, rax
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, aListcivilabili ; "listCivilAbilities"
      <Condition Type="String" Offset="@str" Value="listCivilAbilities" />
      <Target Type="Indirect" Offset="@instance" Symbol="TranslatedStringRepository__Instance" /> <!-- ls::TranslatedStringRepository::Instance -->
      <Target Type="Indirect" Offset="@get" Symbol="TranslatedStringRepository__Get" /> <!-- ls::TranslatedStringRepository::Get -->
    </Mapping>

    <Mapping Name="ls::TranslatedStringKeyManager::GetTranlatedStringFromKey">
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_DisplayName
      48 8B CB  // mov     rcx, rbx
      E8 ?? ?? ?? ??  // call    sub_141C6E690
      @instance 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:ls__gTranslatedStringKeyManager
      48 8D 55 30  // lea     rdx, [rbp+1C0h+var_190]
      41 B1 01  // mov     r9b, 1
      4C 8B C0  // mov     r8, rax
      4C 8B F0  // mov     r14, rax
      @get E8 ?? ?? ?? ??  // call    ls__TranslatedStringKeyManager__GetTranlatedStringFromKey
      <Condition Type="FixedString" Offset="@str" Value="DisplayName" />
      <Target Type="Indirect" Offset="@instance" Symbol="TranslatedStringKeyManager__Instance" /> <!-- ls::TranslatedStringKeyManager::Instance -->
      <Target Type="Indirect" Offset="@get" Symbol="TranslatedStringKeyManager__GetTranlatedStringFromKey" /> <!-- ls::TranslatedStringKeyManager::GetTranlatedStringFromKey -->
    </Mapping>

    <Mapping Name="ls::ModuleManager::CollectAvailableMods">
      C7 81 7C 03 00 00 00 00 00 00  // mov     dword ptr [rcx+37Ch], 0
      48 81 C1 68 03 00 00  // add     rcx, 368h
      @func E8 ?? ?? ?? ??  // call    ls__ModManager__CollectAvailableMods
      48 8B 93 70 03 00 00  // mov     rdx, [rbx+370h]
      <Target Type="Indirect" Offset="@func" Symbol="ModManager__CollectAvailableMods" /> <!-- ls::ModuleManager::CollectAvailableMods -->
    </Mapping>

    <Mapping Name="ls::ScriptCheckBlock::Build">
      4C 8B 4B 10  // mov     r9, [rbx+10h]
      48 8D 55 18  // lea     rdx, [rbp+18h]
      41 FF C9  // dec     r9d
      48 8D 4C 24 28  // lea     rcx, [rsp+78h+Dst]
      45 33 C0  // xor     r8d, r8d
      @func E8 ?? ?? ?? ??  // call    ls__ScriptCheckBlock__Build
      <Target Type="Indirect" Offset="@func" Symbol="ls__ScriptCheckBlock__Build" /> <!-- ls::ScriptCheckBlock::Build -->
    </Mapping>

    <Mapping Name="esv::OsirisVariableHelper::SavegameVisit" Critical="true">
      48 89 5C 24 18  // mov     [rsp+arg_10], rbx
      48 89 6C 24 20  // mov     [rsp+arg_18], rbp
      57  // push    rdi
      48 83 EC 20  // sub     rsp, 20h
      48 8B 02  // mov     rax, [rdx]
      48 8B DA  // mov     rbx, rdx
      48 8B E9  // mov     rbp, rcx
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_OsirisVariableHelper
      <Condition Type="FixedString" Offset="@str" Value="OsirisVariableHelper" />
      <Target Type="Absolute" Offset="0" Symbol="esv__OsirisVariableHelper__SavegameVisit" /> <!-- esv::OsirisVariableHelper::SavegameVisit -->
    </Mapping>

    <Mapping Name="esv::Character::ApplyDamage">
      48 89 44 24 20  // mov     [rsp+0D0h+var_B0], rax
      C7 45 CB 06 00 00 00  // mov     [rbp+57h+hitDamageInfo.AttackDirection_Enum], 6
      89 5D 07  // mov     [rbp+57h+var_50], r14d
      C7 45 0B 00 00 80 BF  // mov     [rbp+57h+var_4C], 0BF800000h
      89 5D 0F  // mov     [rbp+57h+var_48], r14d
      @func E8 ?? ?? ?? ??  // call    esv__Character__ApplyDamage
      <Target Type="Indirect" Offset="@func" Symbol="esv__Character__ApplyDamage" /> <!-- esv::Character::ApplyDamage {}, {}, -->
    </Mapping>

    <Mapping Name="ecl::InventoryFactory">
      @ref 48 8B 3D ?? ?? ?? ??  // mov     rdi, cs:ecl__gInventoryFactory
      48 8D 8F ?? ?? ?? ??  // lea     rcx, [rdi+88h]
      E8 ?? ?? ?? ??  // call    xxx
      48 8D 54 24 28  // lea     rdx, [rsp+98h+var_70]
      48 89 7C 24 28  // mov     [rsp+98h+var_70], rdi
      48 8D 8F A0 00 00 00  // lea     rcx, [rdi+0A0h]
      E8 ?? ?? ?? ??  // call    sub_140379950
      48 8D 8F A0 00 00 00  // lea     rcx, [rdi+0A0h]
      E8 ?? ?? ?? ??  // call    sub_1403796E0
      48 8B CF  // mov     rcx, rdi
      E8 ?? ?? ?? ??  // call    sub_140378F50
      48 8B 06  // mov     rax, [rsi]
      @str 4C 8D 05 ?? ?? ?? ??  // lea     r8, str_Triggers
      <Condition Type="String" Offset="@str" Value="Triggers" />
      <Target Type="Indirect" Offset="@ref" Symbol="ecl__InventoryFactory" /> <!-- ecl::InventoryFactory -->
    </Mapping>

    <Mapping Name="ecl::LevelManager">
      @str 4C 8D 05 ?? ?? ?? ??  // lea     r8, "NetworkFixedStrings"
      BA 01 00 00 00  // mov     edx, 1
      48 8B CF  // mov     rcx, rdi
      FF 90 80 00 00 00  // call    qword ptr [rax+80h]
      @func 48 8B 15 ?? ?? ?? ??  // mov     rdx, cs:ecl__gLevelManager
      48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:eoc__gNetworkFixedStrings
      <Condition Type="String" Offset="@str" Value="NetworkFixedStrings" />
      <Target Type="Indirect" Offset="@func" Symbol="ecl__LevelManager" /> <!-- esv::LevelManager -->
    </Mapping>

    <Mapping Name="esv::ItemHelpers::GenerateTreasureItem">
      48 83 EC 30  // sub     rsp, 30h
      48 8B 1D ?? ?? ?? ??  // mov     rbx, cs:gRPGStats
      8B F2  // mov     esi, edx
      4C 8B F1  // mov     r14, rcx
      48 8D 51 08  // lea     rdx, [rcx+8]
      33 FF  // xor     edi, edi
      33 ED  // xor     ebp, ebp
      48 8B 83 90 00 00 00  // mov     rax, [rbx+90h]
      <Target Type="Absolute" Offset="-0x14" Symbol="esv__ItemHelpers__GenerateTreasureItem" /> <!-- esv::ItemHelpers::GenerateTreasureItem -->
    </Mapping>

    <Mapping Name="esv::CombineManager::ExecuteCombination">
      48 8D AC 24 18 FF FF FF  // lea     rbp, [rsp-0E8h]
      48 81 EC E8 01 00 00  // sub     rsp, 1E8h
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:__security_cookie
      48 33 C4  // xor     rax, rsp
      48 89 85 B0 00 00 00  // mov     [rbp+100h+var_50], rax
      4C 8B AD 40 01 00 00  // mov     r13, [rbp+100h+combinationId]
      <Target Type="Absolute" Offset="-0x08" Symbol="esv__CombineManager__ExecuteCombination" /> <!-- esv::CombineManager::ExecuteCombination -->
    </Mapping>

    <Mapping Name="eoc::SurfaceTransformActionsFromType">
      83 F8 4F  // cmp     eax, 4Fh
      77 13  // ja      short xxx
      4C 69 E8 D0 02 00 00  // imul    r13, rax, 2D0h
      @ref 48 8D 05 ?? ?? ?? ??  // lea     rax, eoc__SurfaceTransformActionsFromType
      <Target Type="Indirect" Offset="@ref" Symbol="eoc__SurfaceTransformActionsFromType" /> <!-- eoc::SurfaceTransformActionsFromType -->
    </Mapping>

    <Mapping Name="eoc::SurfaceTemplates">
      48 63 81 90 01 00 00  // movsxd  rax, dword ptr [rcx+190h]
      85 C0  // test    eax, eax
      78 ??  // js      short ??
      @ref 48 8D 0D ?? ?? ?? ??  // lea     rcx, qword_14295B6E0
      48 39 1C C1  // cmp     [rcx+rax*8], rbx
      <Target Type="Indirect" Offset="@ref" Symbol="eoc__SurfaceTemplates" /> <!-- eoc::SurfaceTemplates -->
    </Mapping>

    <Mapping Name="esv::SurfaceActionFactory">
      BA 01 00 00 00  // mov     edx, 1
      @instance 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:esv__gSurfaceActionFactory
      @func E8 ?? ?? ?? ??  // call    esv__SurfaceActionFactory__CreateAction
      48 8B F8  // mov     rdi, rax
      49 8B CF  // mov     rcx, r15
      8B 45 18  // mov     eax, [rbp+18h]
      <Target Type="Indirect" Offset="@instance" Symbol="esv__SurfaceActionFactory" /> <!-- esv::SurfaceActionFactory -->
      <Target Type="Indirect" Offset="@func" Symbol="esv__SurfaceActionFactory__CreateAction" /> <!-- esv::SurfaceActionFactory::CreateAction -->
    </Mapping>

    <Mapping Name="esv::TransformSurfaceAction::Init">
      4C 8D 0D ?? ?? ?? ??  // lea     r9, xxx
      @str 48 8D 0D ?? ?? ?? ??  // lea     rcx, "TransformSurfaceAction Created! action: %u (%d:%s)"
      4C 8B 10  // mov     r10, [rax]
      <Condition Type="String" Offset="@str" Value="TransformSurfaceAction Created! action: %u (%d:%s)&#10;" />
      <Target Type="Absolute" Offset="-0x2A" Symbol="esv__TransformSurfaceAction__Init" /> <!-- esv::TransformSurfaceAction::Init -->
    </Mapping>

    <Mapping Name="eoc::SkillPrototype::GetAttackAPCost">
      41 57  // push    r15
      48 83 EC 48  // sub     rsp, 48h
      8B 79 28  // mov     edi, [rcx+28h]
      4D 8B F9  // mov     r15, r9
      <Target Type="Absolute" Offset="-0x0C" Symbol="SkillPrototype__GetAttackAPCost" /> <!-- eoc::SkillPrototype::GetAttackAPCost -->
    </Mapping>

    <Mapping Name="eoc::AiGrid::SearchForCell">
      4C 8B DC  // mov     r11, rsp
      41 56  // push    r14
      48 81 EC 90 00 00 00  // sub     rsp, 90h
      33 C0  // xor     eax, eax
      F3 0F 11 54 24 4C  // movss   dword ptr [rsp+98h+var_50+4], xmm2
      <Target Type="Absolute" Offset="0" Symbol="eoc__AiGrid__SearchForCell" /> <!-- eoc::AiGrid::SearchForCell -->
    </Mapping>

    <Mapping Name="eoc::VisionGrid::Raycast">
      4c 8d 45 97 // lea     r8, [rbp+57h+var_C0]
      be aa 09 00 00 // mov     esi, 9AAh
      48 89 7c 24 28 // mov     [rsp+0F0h+var_C8], rdi
      48 8d 55 67 // lea     rdx, [rbp+57h+arg_0]
      66 89 74 24 20 // mov     word ptr [rsp+0F0h+var_D0], si
      @ref1 e8 ?? ?? ?? ?? // call    eoc__VisionGrid__Raycast
      66 39 38 // cmp     [rax], di
      75 74 // jnz     short loc_1407980DC
      48 8b 4b 48 // mov     rcx, [rbx+48h]
      <Target Type="Indirect" Offset="@ref1" Symbol="eoc__VisionGrid__Raycast" />
    </Mapping>

    <Mapping Name="eoc::VisionGrid::Check3DLine">
      4c 8b c7 // mov     r8, rdi
      4c 8d 4d 6f // lea     r9, [rbp+57h+arg_8]
      48 89 44 24 20 // mov     [rsp+110h+var_F0], rax
      48 8d 55 97 // lea     rdx, [rbp+57h+var_C0]
      48 8d 4d 77 // lea     rcx, [rbp+57h+arg_10]
      @ref1 e8 ?? ?? ?? ?? // call    eoc__VisionGrid__Check3DLine
      66 83 38 00 // cmp     word ptr [rax], 0
      0f 85 e0 00 00 00 // jnz     loc_141BBDD89
      fe 4e 46 // dec     byte ptr [rsi+46h]
      @str1 48 8d 15 ?? ?? ?? ?? // lea     rdx, fs_AOO; statusNameFS
      <Condition Type="FixedString" Offset="@str1" Value="AOO" />
      <Target Type="Indirect" Offset="@ref1" Symbol="eoc__VisionGrid__Check3DLine" />
    </Mapping>

    <Mapping Name="esv::ExecutePropertyDataOnGroundHit">
      49 8D 6B C8  // lea     rbp, [r11-38h]
      48 81 EC 18 01 00 00  // sub     rsp, 118h
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:esv__gLevelManager
      4D 8B E8  // mov     r13, r8
      4C 8B F1  // mov     r14, rcx
      4C 8B A0 80 00 00 00  // mov     r12, [rax+80h]
      <Target Type="Absolute" Offset="-0x12" Symbol="esv__ExecutePropertyDataOnGroundHit" /> <!-- esv::ExecutePropertyDataOnGroundHit -->
    </Mapping>

    <Mapping Name="App::Instance">
      48 89 45 2F  // mov     [rbp+57h+var_28], rax
      48 8B F1  // mov     rsi, rcx
      BA 02 00 00 00  // mov     edx, 2
      @ref 48 8B 0D ?? ?? ?? ??  //  mov     rcx, cs:qword_142959A50
      48 8B 01  // mov     rax, [rcx]
      FF 90 40 02 00 00  // call    qword ptr [rax+240h]
      <Target Type="Indirect" Offset="@ref" Symbol="AppInstance" /> <!-- App::Instance -->
    </Mapping>

    <Mapping Name="ls::ResourceManager::Instance">
      48 3B 9F C0 00 00 00  // cmp     rbx, [rdi+0C0h]
      7C ??  // jl      short xxx
      @ref 48 8B 05 ?? ?? ?? ??  // mov     rax, cs:xxx
      45 33 C9  //  xor     r9d, r9d
      <Target Type="Indirect" Offset="@ref" Symbol="ResourceManager__Instance" /> <!-- ls::ResourceManager::Instance -->
    </Mapping>

    <Mapping Name="RPGStats::ParseProperties">
      41 57  // push    r15
      48 8D AC 24 20 FD FF FF  // lea     rbp, [rsp-2E0h]
      48 81 EC E0 03 00 00  // sub     rsp, 3E0h
      48 8B 05 ?? ?? ?? ??  // mov     rax, cs:__security_cookie
      48 33 C4  // xor     rax, rsp
      48 89 85 D8 02 00 00  // mov     [rbp+310h+var_38], rax
      <Target Type="Absolute" Offset="-0x0E" Symbol="RPGStats__ParseProperties" /> <!-- RPGStats::ParseProperties -->
    </Mapping>

    <Mapping Name="esv::ExecutePropertyDataOnPositionOnly">
      48 8B C4  // mov     rax, rsp
      F3 0F 11 58 20  // movss   dword ptr [rax+20h], xmm3
      4C 89 40 18  //  mov     [rax+18h], r8
      48 89 50 10  // mov     [rax+10h], rdx
      <Target Type="Absolute" Offset="0" Symbol="esv__ExecutePropertyDataOnPositionOnly" /> <!-- esv::ExecutePropertyDataOnPositionOnly -->
    </Mapping>

    <Mapping Name="esv::ExecuteCharacterExtraProperties">
      41 57  // push    r15
      48 8D AC 24 C8 FC FF FF  // lea     rbp, [rsp-338h]
      48 81 EC 38 04 00 00  // sub     rsp, 438h
      48 8B 85 98 03 00 00  // mov     rax, [rbp+350h+damageInfo]
      <Target Type="Absolute" Offset="-0x18" Symbol="esv__ExecuteCharacterSetExtraProperties" /> <!-- esv::ExecuteCharacterExtraProperties -->
    </Mapping>

    <Mapping Name="ecl::ClientConditionCheck::ProcessCondition" Scope="Custom">
      40 53 // push    rbx
      55 // push    rbp
      57 // push    rdi
      48 81 ec b0 00 00 00 // sub     rsp, 0B0h
      65 48 8b 04 25 58 00 00 00 // mov     rax, gs:58h
      48 8b e9 // mov     rbp, rcx
      b9 30 00 00 00 // mov     ecx, 30h ; '0'
      49 8b d8 // mov     rbx, r8
      <Target Type="Absolute" Offset="0" Symbol="ecl__ClientConditionCheck__ProcessCondition" />
    </Mapping>

    <Mapping Name="ecl::ClientConditionCheck::ProcessCondition Init">
      49 8b 8a 08 01 00 00 // mov     rcx, [r10+108h]
      48 85 c9 // test    rcx, rcx
      74 44 // jz      short loc_14170F63D
      48 8b 81 30 01 00 00 // mov     rax, [rcx+130h]
      8b 91 3c 01 00 00 // mov     edx, [rcx+13Ch]
      48 8d 0c d0 // lea     rcx, [rax+rdx*8]
      48 3b c8 // cmp     rcx, rax
      74 2e // jz      short loc_14170F63D
      @str1 48 8b 15 ?? ?? ?? ?? // mov     rdx, cs:fs_GROUNDED
      <Condition Type="FixedString" Offset="@str1" Value="GROUNDED" />
      <Target Type="Absolute" Offset="-0x900" NextSymbol="ecl::ClientConditionCheck::ProcessCondition" NextSymbolSeekSize="0x100" />
    </Mapping>

    <Mapping Name="esv::ServerConditionCheck::ProcessCondition" Scope="Custom">
      40 55 // push    rbp
      53 // push    rbx
      56 // push    rsi
      57 // push    rdi
      41 56 // push    r14
      48 8d 6c 24 f0 // lea     rbp, [rsp-10h]
      48 81 ec 10 01 00 00 // sub     rsp, 110h
      @ref1 65 48 8b 04 25 58 00 00 00 // mov     rax, gs:58h
      33 db // xor     ebx, ebx
      <Target Type="Absolute" Offset="0" Symbol="esv__ServerConditionCheck__ProcessCondition" />
    </Mapping>

    <Mapping Name="esv::ServerConditionCheck::ProcessCondition Init">
      48 8b 88 b0 01 00 00 // mov     rcx, [rax+1B0h]
      48 85 c9 // test    rcx, rcx
      74 14 // jz      short loc_141A3DD4F
      @str1 48 8d 15 ?? ?? ?? ?? // lea     rdx, fs_GROUNDED
      e8 ?? ?? ?? ?? // call    sub_141899780
      84 c0 // test    al, al
      0f 85 ?? ?? ?? ?? // jnz     loc_141A3D129
      49 8b 46 18 // mov     rax, [r14+18h]
      48 8b 88 48 01 00 00 // mov     rcx, [rax+148h]
      <Condition Type="FixedString" Offset="@str1" Value="GROUNDED" />
      <Target Type="Absolute" Offset="-0xD00" NextSymbol="esv::ServerConditionCheck::ProcessCondition" NextSymbolSeekSize="0x100" />
    </Mapping>

    <Mapping Name="CheckRequirement1">
      c6 44 24 30 00 // mov     [rsp+0A8h+excludeBoosts], 0; excludeBoosts
      48 8d 44 24 40 // lea     rax, [rsp+0A8h+var_68]
      48 89 5c 24 28 // mov     [rsp+0A8h+requirement], rbx; requirement
      45 33 c9 // xor     r9d, r9d; hasCharges
      45 33 c0 // xor     r8d, r8d; isImmobile
      48 89 44 24 20 // mov     [rsp+0A8h+tags], rax; tags
      33 d2 // xor     edx, edx; isInCombat
      @ref1 e8 ?? ?? ?? ?? // call    CheckRequirement1
      84 c0 // test    al, al
      75 0e // jnz     short loc_1413EA73F
      41 f6 86 e1 02 00 00 18 // test    byte ptr [r14+2E1h], 18h
      75 04 // jnz     short loc_1413EA73F
      0f ba ee 12 // bts     esi, 12h
      <Target Type="Indirect" Offset="@ref1" Symbol="CheckRequirement1" />
    </Mapping>

    <Mapping Name="CheckRequirement2">
      45 33 c9 // xor     r9d, r9d; hasCharges
      c6 44 24 30 01 // mov     byte ptr [rsp+30h], 1; excludeBoosts
      49 03 fd // add     rdi, r13
      48 89 7c 24 28 // mov     [rsp+510h+requirement], rdi; requirement
      45 33 c0 // xor     r8d, r8d; isImmobile
      33 d2 // xor     edx, edx; isInCombat
      4c 89 7c 24 20 // mov     [rsp+510h+tags], r15; tags
      48 8b cb // mov     rcx, rbx; this
      @ref1 e8 ?? ?? ?? ?? // call    CheckRequirement2
      8b 17 // mov     edx, [rdi]
      44 0f b6 f8 // movzx   r15d, al
      8d 8a 6b ff ff ff // lea     ecx, [rdx-95h]
      83 f9 16 // cmp     ecx, 16h
      0f 87 a2 00 00 00 // ja      loc_141C96EB2
      b8 01 00 48 00 // mov     eax, 480001h
      0f a3 c8 // bt      eax, ecx
      <Target Type="Indirect" Offset="@ref1" Symbol="CheckRequirement2" />
    </Mapping>

    <Mapping Name="ecl__Item__SetupDescriptionToFlash">
      44 8b 8f 10 02 00 00 // mov     r9d, [rdi+210h]; displayContext
      @str1 4c 8d 05 ?? ?? ?? ?? // lea     r8, aTooltipcompare; "tooltipCompare_array"
      48 8b d0 // mov     rdx, rax; flash
      49 8b cd // mov     rcx, r13; this
      8b 87 24 02 00 00 // mov     eax, [rdi+224h]
      89 44 24 30 // mov     [rsp+1E0h+a8], eax; a8
      48 8d 87 e0 01 00 00 // lea     rax, [rdi+1E0h]
      48 89 44 24 28 // mov     [rsp+1E0h+iconDrawStruct], rax; iconDrawStruct
      4c 89 74 24 20 // mov     [rsp+1E0h+owner], r14; owner
      @ref1 e8 ?? ?? ?? ?? // call    ecl__Item__SetupDescriptionToFlash
      <Condition Type="String" Offset="@str1" Value="tooltipCompare_array" />
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__Item__SetupDescriptionToFlash" />
    </Mapping>

    <Mapping Name="ecl__Character__CheckSkillRequirements">
      49 8b d7 // mov     rdx, r15; skillId
      48 8b ce // mov     rcx, rsi; a1
      @ref1 e8 ?? ?? ?? ?? // call    ecl__Character__CheckSkillRequirements
      8b f8 // mov     edi, eax
      41 23 fc // and     edi, r12d
      40 f6 c7 10 // test    dil, 10h
      74 6c // jz      short loc_141617AAB
      @str1 48 8d 15 ?? ?? ?? ?? // lea     rdx, aH80bd04faga566; "h80bd04faga566g4548g8ee1g2dc324aa3719"
      <Condition Type="String" Offset="@str1" Value="h80bd04faga566g4548g8ee1g2dc324aa3719" />
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__Character__CheckSkillRequirements" />
    </Mapping>

    <Mapping Name="esv__Character__CheckSkillRequirements">
      41 b1 01 // mov     r9b, 1; checkAP
      c6 44 24 20 00 // mov     [rsp+38h+mustHaveSkill], 0; mustHaveSkill
      45 33 c0 // xor     r8d, r8d; item
      48 8d 93 c0 01 00 00 // lea     rdx, [rbx+1C0h]; skillId
      48 8b c8 // mov     rcx, rax; this
      @ref1 e8 ?? ?? ?? ?? // call    esv__Character__CheckSkillRequirements
      85 c0 // test    eax, eax
      74 0e // jz      short loc_141A6F424
      a9 63 bd fe ff // test    eax, 0FFFEBD63h
      74 07 // jz      short loc_141A6F424
      80 8b 88 00 00 00 20 // or      byte ptr [rbx+88h], 20h
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__Character__CheckSkillRequirements" />
    </Mapping>

    <Mapping Name="CDivinityStats_Character__ReevaluateRequirements">
      4c 8d 44 24 20 // lea     r8, [rsp+0A8h+pRequirement]; pRequirement
      8b d5 // mov     edx, ebp; slot
      48 8b cf // mov     rcx, rdi; this
      @ref1 e8 ?? ?? ?? ?? // call    CDivinityStats_Character__ReevaluateRequirements
      85 c0 // test    eax, eax
      0f 84 0c 01 00 00 // jz      loc_141C9AA28
      48 8b 8e 38 02 00 00 // mov     rcx, [rsi+238h]
      45 8b c6 // mov     r8d, r14d
      48 8b 86 30 02 00 00 // mov     rax, [rsi+230h]
      4c 8b c9 // mov     r9, rcx
      4c 2b c8 // sub     r9, rax
      49 8b d6 // mov     rdx, r14
      49 83 c1 07 // add     r9, 7
      49 c1 e9 03 // shr     r9, 3
      <Target Type="Indirect" Offset="@ref1" Symbol="CDivinityStats_Character__ReevaluateRequirements" />
    </Mapping>

    <Mapping Name="ecl__SkillManager__CheckSkillRequirements">
      48 8b d0 // mov     rdx, rax; proto
      49 8b cd // mov     rcx, r13; a1
      @ref1 e8 ?? ?? ?? ?? // call    ecl__SkillManager__CheckSkillRequirements
      84 c0 // test    al, al
      0f 85 39 01 00 00 // jnz     loc_141619A44
      48 8b 05 ?? ?? ?? ?? // mov     rax, cs:ls__gResourceManager
      @str1 4c 8d 05 ?? ?? ?? ?? // lea     r8, aUiGameActionun; "UI_Game_ActionUnavailable"
      <Condition Type="String" Offset="@str1" Value="UI_Game_ActionUnavailable" />
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__SkillManager__CheckSkillRequirements" />
    </Mapping>

    <Mapping Name="GetSkillRequirements">
      44 8b c8 // mov     r9d, eax; checkRequirementFlags
      45 33 c0 // xor     r8d, r8d; item
      48 8d 44 24 30 // lea     rax, [rsp+0E8h+var_B8]
      48 8b d3 // mov     rdx, rbx; skillId
      48 8b cf // mov     rcx, rdi; character
      48 89 44 24 20 // mov     [rsp+0E8h+requirementsText], rax; requirementsText
      @ref1 e8 ?? ?? ?? ?? // call    ecl__GetSkillRequirements
      f3 0f 10 15 ?? ?? ?? ?? // movss   xmm2, cs:dword_14225B700
      48 8d 54 24 30 // lea     rdx, [rsp+0E8h+var_B8]
      41 b1 01 // mov     r9b, 1
      48 8b ce // mov     rcx, rsi
      <Target Type="Indirect" Offset="@ref1" Symbol="GetSkillRequirements" />
    </Mapping>

    <Mapping Name="esv__SkillManager__CanMemorize">
      f6 40 02 40 // test    byte ptr [rax+2], 40h
      0f 84 d9 00 00 00 // jz      loc_141A31D38
      48 8b cb // mov     rcx, rbx
      e8 ?? ?? ?? ?? // call    sub_141A01260
      48 8b d0 // mov     rdx, rax; skill
      41 b0 01 // mov     r8b, 1; checkMemoryRequirement
      49 8b cd // mov     rcx, r13; a1
      @ref1 e8 ?? ?? ?? ?? // call    esv__SkillManager__CanMemorize
      84 c0 // test    al, al
      0f 84 bb 00 00 00 // jz      loc_141A31D38
      40 80 f5 01 // xor     bpl, 1
      41 b0 01 // mov     r8b, 1
      44 0f b6 cd // movzx   r9d, bpl
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__SkillManager__CanMemorize" />
    </Mapping>

    <Mapping Name="RequirementToTranslatedString">
      8d 8a 6b ff ff ff // lea     ecx, [rdx-95h]
      83 f9 16 // cmp     ecx, 16h
      0f 87 a2 00 00 00 // ja      loc_141C96EB2
      b8 01 00 48 00 // mov     eax, 480001h
      0f a3 c8 // bt      eax, ecx
      0f 83 94 00 00 00 // jnb     loc_141C96EB2
      44 0f b6 47 10 // movzx   r8d, byte ptr [rdi+10h]
      48 8d 4d 30 // lea     rcx, [rbp+410h+var_3E0]
      @ref1 e8 ?? ?? ?? ?? // call    RequirementToTranslatedString
      41 b1 01 // mov     r9b, 1
      <Target Type="Indirect" Offset="@ref1" Symbol="RequirementToTranslatedString" />
    </Mapping>

    <Mapping Name="StringToRequirement">
      48 83 7d a0 10 // cmp     [rbp+20h+var_80], 10h
      48 8d 4d 88 // lea     rcx, [rbp+20h+Str1]
      48 0f 43 4d 88 // cmovnb  rcx, [rbp+20h+Str1]; Str1
      @ref1 e8 ?? ?? ?? ?? // call    StringToRequirement
      89 44 24 20 // mov     dword ptr [rsp+120h+var_100], eax
      44 8b f8 // mov     r15d, eax
      48 8d 4c 24 68 // lea     rcx, [rsp+68h]
      3d ac 00 00 00 // cmp     eax, 0ACh ; '¬'
      74 17 // jz      short loc_141C5BB6D
      48 83 7d 80 10 // cmp     [rbp+20h+var_A0], 10h
      48 0f 43 4c 24 68 // cmovnb  rcx, [rsp+68h]; String
      <Target Type="Indirect" Offset="@ref1" Symbol="StringToRequirement" />
    </Mapping>
    
    <Mapping Name="ls::UIHelper::CustomDrawObject">
      5F  // pop     rdi
      @func E9 ?? ?? ?? ??  // jmp     ls__UIHelper__CustomDrawObject
      41 B8 02 00 00 00  // mov     r8d, 2
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, aTt_0
      FF 15 ?? ?? ?? ??  // call    cs:wcsncmp
      <Condition Type="String" Offset="@str" Value="t" />
      <Target Type="Indirect" Offset="@func" Symbol="ls__UIHelper__CustomDrawObject" /> <!-- ls::UIHelper::CustomDrawObject -->
    </Mapping>

    <Mapping Name="ls::UIHelper::UIClearIcon">
      48 8B CF  // mov     rcx, rdi
      @func E8 ?? ?? ?? ??  // call    ls__UIHelper__UIClearIcon
      48 8D 4B 30  // lea     rcx, [rbx+30h]
      E8 ?? ?? ?? ??  // call    ls__UIHelper__UIClearIcon
      @vmt 48 8D 35 ?? ?? ?? ??  // lea     rsi, ls__CustomDrawStruct__VMT
      48 8D 4B 30  // lea     rcx, [rbx+30h]
      48 89 73 30  // mov     [rbx+30h], rsi
      <Target Type="Indirect" Offset="@func" Symbol="ls__UIHelper__UIClearIcon" /> <!-- ls::UIHelper::UIClearIcon -->
      <Target Type="Indirect" Offset="@vmt" Symbol="ls__CustomDrawStruct__VMT" /> <!-- ls::CustomDrawStruct::VMT -->
    </Mapping>

    <Mapping Name="ls::UIHelper::UICreateIconMesh">
      @str 48 8D 0D ?? ?? ?? ??  // lea     rcx, GEFS__strUIBaseMaterialUUID
      48 89 4C 24 20  // mov     [rsp+38h+var_18], rcx
      49 8B CA  // mov     rcx, r10
      44 8B C8  // mov     r9d, eax
      44 8B C0  // mov     r8d, eax
      @func E8 ?? ?? ?? ??  // call    ls__UIHelper__UICreateIconMesh
      <Condition Type="FixedString" Offset="@str" Value="9169b076-6e8d-44a4-bb52-95eedf9eab63" />
      <Target Type="Indirect" Offset="@func" Symbol="ls__UIHelper__UICreateIconMesh" /> <!-- ls::UIHelper::UICreateIconMesh -->
    </Mapping>

	<Mapping Name="ecl::EocUIHelper::UICreateIconMesh">
		44 8b 86 18 02 00 00 //      MOV        R8D,dword ptr [RSI + 0x218]
		@call e8 ?? ?? ?? ?? //      CALL       ecl::EocUIHelper::UICreateIconMesh               undefined UICreateIconMesh(undef
		eb 03 //          JMP        LAB_14153c9e5
		45 32 e4 //       XOR        R12B,R12B
		<Target Type="Indirect" Offset="@call" Symbol="ecl__EocUIHelper__UICreateIconMesh" />
	</Mapping>

    <Mapping Name="esv::CacheTemplateManager">
      49 8B D1 // mov     rdx, r9
      E9 ?? ?? ?? ?? // jmp     sub_141E5ACC0
      @ref 4C 8B 0D ?? ?? ?? ??  // mov     r9, cs:esv__gCacheTemplateManager
      33 D2 // xor     edx, edx
      <Target Type="Indirect" Offset="@ref" Symbol="esv__CacheTemplateManager" />
    </Mapping>

    <Mapping Name="ecl::CacheTemplateManager">
      48 8B 88 60 01 00 00 // mov     rcx, [rax+160h]
      EB ?? // jmp     short loc_xx
      83 F8 03 // cmp     eax, 3
      75 ?? // jnz     short loc_xx
      @ref 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:ecl__gCacheTemplateManager
      45 33 C9 // xor     r9d, r9d
      <Target Type="Indirect" Offset="@ref" Symbol="ecl__CacheTemplateManager" />
    </Mapping>

    <Mapping Name="ls::GlobalTemplateManager">
      33 C0 // xor     eax, eax
      C3  // retn
      @ref 48 8B 0D ?? ?? ?? ??  //  mov     rcx, cs:ls__GlobalTemplateManager
      49 8B D1 // mov     rdx, r9
      <Target Type="Indirect" Offset="@ref" Symbol="ls__GlobalTemplateManager" />
    </Mapping>

    <Mapping Name="esv::GetGameObjectTemplate">
      48 8B 88 80 00 00 00 // mov     rcx, [rax+80h]
      48 85 C9  // test    rcx, rcx
      74 06  // jz xxx
      48 8B 49 10  // mov     rcx, [rcx+10h]
      EB 0C  //  jmp xxx
      @ref 48 8B 0D ?? ?? ?? ?? // mov     rcx, cs:esv__gLocalTemplateManager
      48 85 C9 // test    rcx, rcx
      <Target Type="Indirect" Offset="@ref" Symbol="esv__LocalTemplateManager" />
      <Target Type="Absolute" Offset="0" NextSymbol="ls::GlobalTemplateManager" NextSymbolSeekSize="0x80" />
      <Target Type="Absolute" Offset="-0x80" NextSymbol="esv::CacheTemplateManager" NextSymbolSeekSize="0x80" />
    </Mapping>

    <Mapping Name="ecl::MultiEffectHandler::Init">
      @str 48 8D 15 ?? ?? ?? ?? // lea     rdx, aRs3FxGpStatusS
      48 8D 05 ?? ?? ?? ??  // lea     rax, fs_Empty_
      48 89 44 24 30  // mov     [rsp+68h+var_38], rax
      4C 89 7C 24 28  // mov     [rsp+68h+var_40], r15
      48 C7 44 24 20 00 00 00 00  // mov     [rsp+68h+var_48], 0
      @func E8 ?? ?? ?? ?? // call    ecl__MultiEffectHandler__Init
      <Condition Type="String" Offset="@str" Value="RS3_FX_GP_Status_Smelly_01:Dummy_StatusFX" />
      <Target Type="Indirect" Offset="@func" Symbol="ecl__MultiEffectHandler__Init" />
    </Mapping>

    <Mapping Name="ecl::MultiEffectHandler::Delete">
      F6 41 40 40 // test    byte ptr [rcx+40h], 40h
      48 8B F9  // mov     rdi, rcx
      0F 84 D5 00 00 00  // jz      loc_14173A698
      48 81 C1 D0 00 00 00  // add     rcx, 0D0h
      48 89 5C 24 38  // mov     [rsp+28h+arg_8], rbx
      33 D2  // xor     edx, edx
      @func E8 ?? ?? ?? ??  // call    ecl__MultiEffectHandler__Delete
      48 8D 8F A0 01 00 00 // lea     rcx, [rdi+1A0h]
      <Target Type="Indirect" Offset="@func" Symbol="ecl__MultiEffectHandler__Delete" />
    </Mapping>

    <Mapping Name="ecl::MultiEffectHandler::Update">
      C6 87 34 01 00 00 00 // mov     byte ptr [rdi+134h], 0
      48 8D 4F 38  // lea     rcx, [rdi+38h]
      @func E8 ?? ?? ?? ??  // call    ecl__MultiEffectHandler__Update
      F3 0F 10 45 08  // movss   xmm0, dword ptr [rbp+8]
      F3 0F 58 87 30 01 00 00  // addss   xmm0, dword ptr [rdi+130h]
      <Target Type="Indirect" Offset="@func" Symbol="ecl__MultiEffectHandler__Update" />
    </Mapping>

    <Mapping Name="ecl::MultiEffectHandler::AttachVisuals">
      C6 44 24 20 01 // mov     [rsp+100h+a5], 1
      @instantiate E8 ?? ?? ?? ??  // call    ls__ResourceManager__InstantiateVisual
      48 8B F8  // mov     rdi, rax
      48 85 C0 // test    rax, rax
      74 2A  // jz      short xxx
      44 8B 4D 87  // mov     r9d, [rbp+57h+var_D0]
      4C 8B C3  // mov     r8, rbx
      48 8B D0  // mov     rdx, rax
      C7 44 24 20 00 00 00 00  // mov     dword ptr [rsp+100h+a5], 0
      49 8B CE  // mov     rcx, r14
      @add E8 ?? ?? ?? ?? // call    ls__Visual__AddAttachment
      <Target Type="Indirect" Offset="@instantiate" Symbol="ResourceManager__InstantiateVisual" />
      <Target Type="Indirect" Offset="@add" Symbol="ls__Visual__AddAttachment" />
    </Mapping>

    <Mapping Name="ls::ResourceManager::DestroyVisual">
      4C 8D 82 C0 01 00 00 // lea     r8, [rdx+1C0h]
      49 8B 10  // mov     rdx, [r8]
      48 8B C2  // mov     rax, rdx
      48 C1 E8 36  // shr     rax, 36h
      25 FF 03 00 00  // and     eax, 3FFh
      3B 05 ?? ?? ?? ??  // cmp     eax, cs:ls__gVisualTypeIndex
      75 18  // jnz     short xxx
      48 B8 00 00 00 00 FF FF 3F 00  // mov     rax, 3FFFFF00000000h
      48 85 D0  // test    rax, rdx
      74 20  // jz      short xxx
      48 8B 49 20  // mov     rcx, [rcx+20h]
      @destroyVisual E9 ?? ?? ?? ??  // jmp     ls__VisualFactory__DestroyVisual
      3B 05 ?? ?? ?? ??  // cmp     eax, cs:ls__gEffectTypeIndex
      75 0F  // jnz     short xxx
      @ref 48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:ls__gEffectsManager
      49 8B D0  // mov     rdx, r8
      @destroyEffect E9 ?? ?? ?? ??  // jmp     ls__EffectsManager__DestroyEffect
      <Target Type="Indirect" Offset="@destroyVisual" Symbol="ls__VisualFactory__DestroyVisual" />
      <Target Type="Indirect" Offset="@ref" Symbol="ls__gEffectsManager" />
      <Target Type="Indirect" Offset="@destroyEffect" Symbol="ls__EffectsManager__DestroyEffect" />
    </Mapping>

    <Mapping Name="ls::CacheTemplateManagerBase::CacheTemplate">
      48 8B 85 80 00 00 00 // mov     rax, [rbp+80h]
      48 8B 88 20 01 00 00  // mov     rcx, [rax+120h]
      EB 07  // jmp     short xxx
      48 8B 0D ?? ?? ?? ??  // mov     rcx, cs:esv__gCacheTemplateManager
      48 8B D7  // mov     rdx, rdi
      @func E8 ?? ?? ?? ??  // call    ls__CacheTemplateManagerBase__CacheTemplate
      <Target Type="Indirect" Offset="@func" Symbol="ls__CacheTemplateManagerBase__CacheTemplate" />
    </Mapping>

    <Mapping Name="ls::UIObject::GetUIScaleMultiplier">
      @str 48 8D 15 ?? ?? ?? ?? // lea     rdx, aSetmcsize
      48 8B CB  // mov     rcx, rbx
      FF 15 ?? ?? ?? ??  // call    cs:__imp__stricmp
      85 C0  // test    eax, eax
      0F 85 ?? ?? ?? ??  // jnz     xxx
      83 7F 60 03  // cmp     dword ptr [rdi+60h], 3
      0F 85 ?? ?? ?? ??  // jnz     xxx
      48 8B CF  // mov     rcx, rdi
      0F 29 B4 24 C0 00 00 00  // movaps  [rsp+0F0h+var_30], xmm6
      @func E8 ?? ?? ?? ??  // call    sub_141245070
      <Condition Type="String" Offset="@str" Value="setMcSize" />
      <Target Type="Indirect" Offset="@func" Symbol="ls__UIObject__GetUIScaleMultiplier" />
    </Mapping>

    <Mapping Name="eoc::CharacterCreationManager">
      4C 8D B0 08 03 00 00 // lea     r14, [rax+308h]
      48 89 5C 24 30  // mov     [rsp+28h+arg_0], rbx
      48 8B 07  // mov     rax, [rdi]
      @str 48 8D 15 ?? ?? ?? ??  // lea     rdx, fs_MALE
      @ref 48 8B 1D ?? ?? ?? ??  // mov     rbx, cs:eoc__gCharacterCreationManager
      <Condition Type="FixedString" Offset="@str" Value="MALE" />
      <Target Type="Indirect" Offset="@ref" Symbol="eoc__CharacterCreationManager" />
    </Mapping>

    <Mapping Name="esv::AlignmentContainer">
      4c 89 74 24 60 // mov     [rsp+48h+arg_10], r14
      48 8b cf // mov     rcx, rdi
      44 8b 73 28 // mov     r14d, [rbx+28h]
      @ref 48 8b 1d ?? ?? ?? ?? // mov     rbx, cs:esv__gAlignmentContainer
      ff 90 90 00 00 00 // call    qword ptr [rax+90h]
      84 c0 // test    al, al
      74 09 // jz      short loc_141B08026
      @str 48 8d 05 ?? ?? ?? ?? // lea     rax, fs_Story_1
      <Condition Type="FixedString" Offset="@str" Value="Story" />
      <Target Type="Indirect" Offset="@ref" Symbol="esv__AlignmentContainer" />
    </Mapping>

    <Mapping Name="esv::AlignmentContainer::Load Hook">
      @ref1 48 8B 9A F0 02 00 00 // mov     rbx, [rdx+2F0h]
      @str 4C 8D 25 ?? ?? ?? ??  // lea     r12, aStoryAlignment ; "Story/Alignments/Alignment.lsx"
      @ref2 8B 82 FC 02 00 00 // mov     eax, [rdx+2FCh]
      48 69 F8 58 03 00 00 // imul    rdi, rax, 358h
      <Condition Type="WString" Offset="@str" Value="Story/Alignments/Alignment.lsx" />
      <Patch Type="Absolute" Offset="@ref1">
        48 8B 9A B0 02 00 00 // mov     rbx, [rdx+2B0h]
      </Patch>
      <Patch Type="Absolute" Offset="@ref2">
        8B 82 BC 02 00 00 // mov     eax, [rdx+2BCh]
      </Patch>
    </Mapping>

    <Mapping Name="esv::EffectManager::DestroyEffect">
      48 39 83 C8 01 00 00 // cmp     [rbx+1C8h], rax
      74 28 // jz      short xxx
      48 8B 93 C8 01 00 00 // mov     rdx, [rbx+1C8h]
      48 8B 8E D8 00 00 00 // mov     rcx, [rsi+0D8h]
      @ref E8 ?? ?? ?? ?? // call    esv__EffectManager__DestroyEffect
      <Target Type="Indirect" Offset="@ref" Symbol="esv__EffectManager__DestroyEffect" />
    </Mapping>

    <Mapping Name="esv::EffectManager::CreateEffect">
      0F B7 40 F8 // movzx   eax, word ptr [rax-8]
      48 85 C0 // test    rax, rax
      74 52 // jz      short xxx
      4C 8B 43 40 // mov     r8, [rbx+40h]
      4C 8D 8F 60 03 00 00 // lea     r9, [rdi+360h]
      48 8B 8E D8 00 00 00 // mov     rcx, [rsi+0D8h]
      @ref E8 ?? ?? ?? ?? // call    esv__EffectManager__CreateEffect
      <Target Type="Indirect" Offset="@ref" Symbol="esv__EffectManager__CreateEffect" />
    </Mapping>

    <Mapping Name="ecl::InventoryProtocol::PostUpdate">
      @ref 40 53 // push    rbx
      48 83 EC 60 // sub     rsp, 60h
      4C 89 74 24 48 // mov     [rsp+68h+var_20], r14
      48 8B D9 // mov     rbx, rcx
      45 33 F6 // xor     r14d, r14d
      44 39 71 24 // cmp     [rcx+24h], r14d
      0F 86 99 00 00 00 // jbe     loc_141637D34
      48 89 74 24 58 // mov     [rsp+68h+var_10], rsi
      4C 89 7C 24 40 // mov     [rsp+68h+var_28], r15
      45 33 FF // xor     r15d, r15d
      <Target Type="Absolute" Offset="@ref" Symbol="ecl__InventoryProtocol__PostUpdate" />
    </Mapping>

    <Mapping Name="ls::DragDropManager">
      49 83 c0 08 // add     r8, 8
      @ref1 48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:ls__gDragDropManager
      0f b7 d7 // movzx   edx, di
      f2 0f 11 44 24 20 // movsd   [rsp+4D0h+var_4B0], xmm0
      @ref2 e8 ?? ?? ?? ?? // call    ls__DragDropManager__StartDragFixedString
      48 8b 05 ?? ?? ?? ?? // mov     rax, cs:ls__gResourceManager
      @str1 4c 8d 05 ?? ?? ?? ?? // lea     r8, aItemGenericPic; "Item_Generic_PickUp"
      <Condition Type="String" Offset="@str1" Value="Item_Generic_PickUp" />
      <Target Type="Indirect" Offset="@ref1" Symbol="ls__DragDropManager" />
      <Target Type="Indirect" Offset="@ref2" Symbol="ls__DragDropManager__StartDragString" />
    </Mapping>

    <Mapping Name="ls::DragDropManager::StartDragObject">
      0f b7 d7 // movzx   edx, di
      f2 0f 11 44 24 20 // movsd   [rsp+68h+var_48], xmm0
      48 8b cd // mov     rcx, rbp
      @ref e8 ?? ?? ?? ?? // call    ls__DragDropManager__StartDragObject
      f3 0f 10 0d ?? ?? ?? ?? // movss   xmm1, cs:dword_14225C148
      @str 4c 8d 0d ?? ?? ?? ?? // lea     r9, fs_TUT_MoveItem_Title
      <Condition Type="FixedString" Offset="@str" Value="TUT_MoveItem_Title" />
      <Target Type="Indirect" Offset="@ref" Symbol="ls__DragDropManager__StartDragHandle" />
    </Mapping>

    <Mapping Name="ls::DragDropManager::StopDragging">
      0f b7 40 0c // movzx   eax, word ptr [rax+0Ch]
      48 8b 4d b0 // mov     rcx, [rbp+1D0h+var_220]
      0f b7 d0 // movzx   edx, ax
      @ref1 e8 ?? ?? ?? ?? // call    ls__DragDropManager__StopDragging
      e9 55 09 00 00 // jmp     loc_1414A0D11
      @str1 48 8d 15 ?? ?? ?? ?? // lea     rdx, aCanceldragging; "cancelDragging"
      <Condition Type="String" Offset="@str1" Value="cancelDragging" />
      <Target Type="Indirect" Offset="@ref1" Symbol="ls__DragDropManager__StopDrag" />
    </Mapping>

    <Mapping Name="ecl::DragDropManager">
      48 89 6b 08 // mov     [rbx+8], rbp
      @str1 4c 8d 05 ?? ?? ?? ?? // lea     r8, aDragdrop; "DragDrop"
      48 8b 06 // mov     rax, [rsi]
      ba 01 00 00 00 // mov     edx, 1
      48 8b ce // mov     rcx, rsi
      ff 90 80 00 00 00 // call    qword ptr [rax+80h]
      @ref1 48 8b 05 ?? ?? ?? ?? // mov     rax, cs:ecl__gDragDropManager
      <Condition Type="String" Offset="@str1" Value="DragDrop" />
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__DragDropManager" />
    </Mapping>

    <Mapping Name="esv::AiHelpers" Scope="Custom">
      ff 50 08 // call    qword ptr [rax+8]
      @ref1 48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:esv__gAiModifiers
      49 8b d6 // mov     rdx, r14
      e8 ?? ?? ?? ?? // call    eoc__AiModifiers__Init
      @ref2 48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:esv__gAiHelpers
      48 8b 89 98 00 00 00 // mov     rcx, [rcx+98h]
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__gAiModifiers" />
      <Target Type="Indirect" Offset="@ref2" Symbol="esv__gAiHelpers" />
    </Mapping>

    <Mapping Name="esv::AiHelpers start">
      80 78 59 00 // cmp     byte ptr [rax+59h], 0
      0f 84 56 01 00 00 // jz      xxx
      ba 04 00 00 00 // mov     edx, 4
      @str1 4c 8d 05 ?? ?? ?? ?? // lea     r8, aClientinitLsx; "clientInit.lsx"
      <Condition Type="String" Offset="@str1" Value="clientInit.lsx" />
      <Target Type="Absolute" Offset="-0x80" NextSymbol="esv::AiHelpers" NextSymbolSeekSize="0x80" />
    </Mapping>

    <Mapping Name="esv::AiHelpers::PeekAction">
      41 b1 01 // mov     r9b, 1; a4
      48 8b fa // mov     rdi, rdx
      48 8b f1 // mov     rsi, rcx
      @ref1 e8 ?? ?? ?? ?? // call    esv__AiHelpers__PeekAction
      48 8b d8 // mov     rbx, rax
      48 85 c0 // test    rax, rax
      74 40 // jz      short loc_1418CD925
      4c 8b 05 ?? ?? ?? ?? // mov     r8, cs:ls__ObjectHandle__Unassigned
      4c 39 80 b8 00 00 00 // cmp     [rax+0B8h], r8
      74 0f // jz      short loc_1418CD904
      48 8b 90 b8 00 00 00 // mov     rdx, [rax+0B8h]
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__AiHelpers__PeekAction" />
    </Mapping>

    <Mapping Name="esv::SortAiActions">
      f3 0f 5d f0 // minss   xmm6, xmm0
      49 8d 4c 24 10 // lea     rcx, [r12+10h]
      f3 0f 11 b3 a0 00 00 00 // movss   dword ptr [rbx+0A0h], xmm6
      f3 0f 11 b3 c0 00 00 00 // movss   dword ptr [rbx+0C0h], xmm6
      @ref1 e8 ?? ?? ?? ?? // call    esv__SortAiActions
      48 8d 4d b8 // lea     rcx, [rbp+370h+PerformanceCount]
      45 89 6c 24 48 // mov     [r12+48h], r13d
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__AiHelpers__SortActions" />
    </Mapping>

    <Mapping Name="ls::GraphicSettings">
      48 8b 89 d0 01 00 00 // mov     rcx, [rcx+1D0h]
      44 0f b6 40 08 // movzx   r8d, byte ptr [rax+8]
      e8 ?? ?? ?? ?? // call    sub_141203940
      @ref1 48 8b 05 ?? ?? ?? ?? // mov     rax, cs:gGraphicSettings
      @str1 48 8d 15 ?? ?? ?? ?? // lea     rdx, fs_FakeFullscreenEnabled
      <Condition Type="FixedString" Offset="@str1" Value="FakeFullscreenEnabled" />
      <Target Type="Indirect" Offset="@ref1" Symbol="ls__GraphicSettings" />
    </Mapping>

    <Mapping Name="ls::InputManager">
      49 89 43 e8 // mov     [r11-18h], rax
      @str1 48 8d 05 ?? ?? ?? ?? // lea     rax, aAux4Dungeons; "Aux4_Dungeons"
      49 89 43 f0 // mov     [r11-10h], rax
      e8 ?? ?? ?? ?? // call    sub_1412BEDA0
      @ref1 48 8b 35 ?? ?? ?? ?? // mov     rsi, cs:ls__InputManager
      <Condition Type="String" Offset="@str1" Value="Aux4_Dungeons" />
      <Target Type="Indirect" Offset="@ref1" Symbol="ls__InputManager" />
    </Mapping>

    <Mapping Name="ls::InputManager::InjectInput">
      0f 14 c6 // unpcklps xmm0, xmm6
      f2 0f 11 44 24 38 // movsd   qword ptr [rsp+98h+var_68+8], xmm0
      48 8b 0c d8 // mov     rcx, [rax+rbx*8]
      8b 44 24 28 // mov     eax, dword ptr [rsp+98h+var_70]
      48 89 4c 24 30 // mov     qword ptr [rsp+98h+var_68], rcx
      49 8b cc // mov     rcx, r12
      0f 10 44 24 30 // movups  xmm0, [rsp+98h+var_68]
      89 44 24 58 // mov     [rsp+98h+var_40], eax
      c6 44 24 5c 00 // mov     [rsp+98h+var_3C], 0
      0f 11 44 24 48 // movups  [rsp+98h+var_50], xmm0
      @ref1 e8 ?? ?? ?? ?? // call    ls__InputManager__DoInjectInputData
      <Target Type="Indirect" Offset="@ref1" Symbol="ls__InputManager__InjectInput" />
    </Mapping>

    <Mapping Name="ecl::GameStateLoad::IncLocalProgress">
      48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:ls__gLoadingScreenManager
      8b c2 // mov     eax, edx
      48 01 41 40 // add     [rcx+40h], rax
      c3 // retn
      cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc // db 12h dup(0CCh)
      48 8b 15 ?? ?? ?? ?? // mov     rdx, cs:ls__gLoadingScreenManager
      8b 41 18 // mov     eax, [rcx+18h]
      48 89 42 38 // mov     [rdx+38h], rax
      48 c7 42 40 00 00 00 00 // mov     qword ptr [rdx+40h], 0
      f2 0f 10 05 ?? ?? ?? ?? // movsd   xmm0, qword ptr cs:xmmword_14297EDE0
      <Target Type="Absolute" Offset="0" Symbol="ecl__GameStateLoad__IncLocalProgress" />
    </Mapping>

    <Mapping Name="esv::OsirisTaskFactory::CreateTask">
      44 89 6c 24 70 // mov     [rsp+58h+arg_10], r13d
      @str1 48 8d 15 ?? ?? ?? ?? // lea     rdx, fs_TaskId
      48 8b ce // mov     rcx, rsi
      ff 90 90 01 00 00 // call    qword ptr [rax+190h]
      44 8b 6c 24 70 // mov     r13d, [rsp+58h+arg_10]
      48 8b cb // mov     rcx, rbx
      4c 8b 45 10 // mov     r8, [rbp+10h]
      41 8b d5 // mov     edx, r13d
      @ref1 e8 ?? ?? ?? ?? // call    esv__OsirisTaskFactory__CreateTask
      <Condition Type="FixedString" Offset="@str1" Value="TaskId" />
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__OsirisTaskFactory__CreateTask" />
    </Mapping>

    <Mapping Name="esv::OsirisTaskFactory::ReleaseTask">
      41 83 7e 14 03 // cmp     dword ptr [r14+14h], 3
      74 11 // jz      short loc_141A0C0D9
      49 8b 06 // mov     rax, [r14]
      49 8b ce // mov     rcx, r14
      41 c7 46 14 03 00 00 00 // mov     dword ptr [r14+14h], 3
      ff 50 28 // call    qword ptr [rax+28h]
      @ref1 48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:esv__gOsirisTaskFactory
      49 8b d6 // mov     rdx, r14
      @ref2 e8 ?? ?? ?? ?? // call    esv__OsirisTaskFactory__ReleaseTask
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__OsirisTaskFactory" />
      <Target Type="Indirect" Offset="@ref2" Symbol="esv__OsirisTaskFactory__ReleaseTask" />
    </Mapping>

    <Mapping Name="rf::CameraManager">
      @str1 48 8d 15 ?? ?? ?? ?? // lea     rdx, fs_SpectatorCam
      @ref1 48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:rf__gCameraManager
      0f 29 7c 24 50 // movaps  [rsp+78h+var_28], xmm7
      <Condition Type="FixedString" Offset="@str1" Value="SpectatorCam" />
      <Target Type="Indirect" Offset="@ref1" Symbol="rf__CameraManager" />
    </Mapping>

    <Mapping Name="ecl::GameCamera">
      48 83 ec 20 // sub     rsp, 20h
      @ref1 48 8d 05 ?? ?? ?? ?? // lea     rax, ecl__GameCamera__VMT
      48 8b d9 // mov     rbx, rcx
      48 89 01 // mov     [rcx], rax
      48 8d 05 ?? ?? ?? ?? // lea     rax, off_142141308
      48 89 81 b0 03 00 00 // mov     [rcx+3B0h], rax
      48 8d 05 ?? ?? ?? ?? // lea     rax, off_142141428
      48 89 81 e0 03 00 00 // mov     [rcx+3E0h], rax
      48 8d 05 ?? ?? ?? ?? // lea     rax, off_1420F5D30
      48 89 81 98 04 00 00 // mov     [rcx+498h], rax
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__GameCamera__VMT" />
    </Mapping>

    <Mapping Name="ecl::EquipmentVisualsSystem::CreateVisuals">
      4c 8d 44 24 20 // lea     r8, [rsp+0D8h+params]; params
      25 00 00 f8 ff // and     eax, 0FFF80000h
      40 0f b6 cf // movzx   ecx, dil
      0b c8 // or      ecx, eax
      4c 89 b4 24 a0 00 00 00 // mov     qword ptr [rsp+0D8h+params.AttachFlags], r14
      89 8c 24 a8 00 00 00 // mov     [rsp+0D8h+params.SlotAndFlags], ecx
      48 8d 53 40 // lea     rdx, [rbx+40h]; entity
      48 8b cd // mov     rcx, rbp; a1
      @ref1 e8 ?? ?? ?? ?? // call    ecl__EquipmentVisualsSystem__CreateVisuals
      48 8d 4c 24 20 // lea     rcx, [rsp+0D8h+params]
      e8 ?? ?? ?? ?? // call    sub_1402F5280
      ff c7 // inc     edi
      83 ff 0e // cmp     edi, 0Eh
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__EquipmentVisualsSystem__CreateVisuals" />
    </Mapping>

	<Mapping Name="ecl::Character::RefreshEquipmentVisuals">
		e8 ?? ?? ?? ?? //      CALL       FUN_1416424f0                                    undefined FUN_1416424f0()
		48 8b cf //       MOV        param_1,RDI
		c6 46 3d 01 //    MOV        byte ptr [RSI + 0x3d],0x1
		@call e8 ?? ?? ?? ?? //      CALL       ecl::Character::RefreshEquipmentVisuals          undefined RefreshEquipmentVisual
		80 bc 24 e0 00 00 00 00 //      CMP        byte ptr [RSP + param_5],0x0
		<Target Type="Indirect" Offset="@call" Symbol="ecl__Character__RefreshEquipmentVisuals" />
	</Mapping>

    <Mapping Name="ecl::ShroudManager::InitObjects">
      89 4d c8 // mov     [rbp+1A0h+loadCmd.field_8], ecx
      89 4d f8 // mov     [rbp+1A0h+loadCmd.Format], ecx
      88 4d 22 // mov     [rbp+1A0h+loadCmd.AccessFlag], cl
      48 8d 4d c0 // lea     rcx, [rbp+1A0h+loadCmd]; this
      89 7c 24 28 // mov     [rsp+2A0h+layers], edi; height
      44 89 44 24 20 // mov     [rsp+2A0h+height], r8d; width
      4d 8b c4 // mov     r8, r12; texMemory
      48 89 75 c0 // mov     [rbp+1A0h+loadCmd.VMT], rsi
      c7 45 18 01 00 00 00 // mov     [rbp+1A0h+loadCmd.TexArraySize], 1
      @ref1 c7 45 1c 01 00 00 00 // mov     [rbp+1A0h+loadCmd.NumSamples], 1
      e8 ?? ?? ?? ?? // call    rf__DataLoaderCreateTextureFromMemoryCommand__Do
      48 8b 5d a0 // mov     rbx, [rbp+1A0h+pHandle]
      <Patch Type="Absolute" Offset="@ref1">
        c6 44 24 60 06 90 90
      </Patch>
    </Mapping>

    <Mapping Name="esv::StatusConsume::Enter" Scope="Custom">
      @ref1 41 57 // push    r15
      48 83 ec 30 // sub     rsp, 30h
      @str1 48 8b 05 ?? ?? ?? ?? // mov     rax, cs:fs_MADNESS.Str
      4c 8b f9 // mov     r15, rcx
      <Condition Type="FixedString" Offset="@str1" Value="MADNESS" />
      <Target Type="Absolute" Offset="@ref1" Symbol="esv__StatusConsume__Enter" />
    </Mapping>

    <Mapping Name="esv::StatusConsumeBase::Enter" Scope="Custom">
      49 8b cf // mov     rcx, r15
      48 83 c4 30 // add     rsp, 30h
      41 5f // pop     r15
      @ref1 e9 ?? ?? ?? ?? // jmp     esv__StatusConsumeBase__Enter
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__StatusConsumeBase__Enter" />
    </Mapping>

    <Mapping Name="esv::StatusConsume::Enter Initial" Deferred="true">
      33 c0 // xor     eax, eax
      48 8b 98 80 02 00 00 // mov     rbx, [rax+280h]
      8b 88 8c 02 00 00 // mov     ecx, [rax+28Ch]
      48 8d 3c cb // lea     rdi, [rbx+rcx*8]
      48 3b fb // cmp     rdi, rbx
      0f 84 c2 00 00 00 // jz      loc_141A7F0F0
      48 89 6c 24 48 // mov     [rsp+38h+arg_8], rbp
      48 89 74 24 50 // mov     [rsp+38h+arg_10], rsi
      4c 89 74 24 20 // mov     [rsp+38h+var_18], r14
      0f 1f 00 // nop     dword ptr [rax]
      <Target Type="Absolute" Offset="-0x60" NextSymbol="esv::StatusConsume::Enter" NextSymbolSeekSize="0x40" />
      <Target Type="Absolute" Offset="0x40" NextSymbol="esv::StatusConsumeBase::Enter" NextSymbolSeekSize="0x100" />
    </Mapping>

    <Mapping Name="esv::StatusConsume::Exit" Scope="Custom">
      @ref1 41 56 // push    r14
      48 83 ec 30 // sub     rsp, 30h
      @str1 48 8b 05 ?? ?? ?? ?? // mov     rax, cs:fs_MADNESS.Str
      4c 8b f1 // mov     r14, rcx
      <Condition Type="FixedString" Offset="@str1" Value="MADNESS" />
      <Target Type="Absolute" Offset="@ref1" Symbol="esv__StatusConsume__Exit" />
    </Mapping>

    <Mapping Name="esv::StatusConsumeBase::Exit" Scope="Custom">
      49 8b ce // mov     rcx, r14
      48 83 c4 30 // add     rsp, 30h
      41 5e // pop     r14
      @ref1 e9 ?? ?? ?? ?? // jmp     esv__StatusConsumeBase__Exit
      <Target Type="Indirect" Offset="@ref1" Symbol="esv__StatusConsumeBase__Exit" />
    </Mapping>

    <Mapping Name="esv::StatusConsume::Exit Initial" Deferred="true">
      33 c0 // xor     eax, eax
      48 8b 98 80 02 00 00 // mov     rbx, [rax+280h]
      8b 88 8c 02 00 00 // mov     ecx, [rax+28Ch]
      48 8d 3c cb // lea     rdi, [rbx+rcx*8]
      48 3b fb // cmp     rdi, rbx
      0f 84 b5 00 00 00 // jz      loc_141A7F233
      48 89 6c 24 50 // mov     [rsp+38h+arg_10], rbp
      48 89 74 24 28 // mov     [rsp+38h+var_10], rsi
      0f 1f 84 00 00 00 00 00 // nop     dword ptr [rax+rax+00000000h]
      <Target Type="Absolute" Offset="-0x60" NextSymbol="esv::StatusConsume::Exit" NextSymbolSeekSize="0x40" />
      <Target Type="Absolute" Offset="0x40" NextSymbol="esv::StatusConsumeBase::Exit" NextSymbolSeekSize="0x100" />
    </Mapping>

    <Mapping Name="osi::ShowNotification" Scope="Custom">
      @ref 48 89 5c 24 08 // mov     [rsp+arg_0], rbx
      57 // push    rdi
      48 83 ec 50 // sub     rsp, 50h
      <Target Type="Absolute" Offset="@ref" Symbol="osi__ShowNotification" />
    </Mapping>

    <Mapping Name="osi::ShowNotification Initial" Deferred="true">
      8b 53 10 // mov     edx, [rbx+10h]
      eb 06 // jmp     short loc_141B5266F
      8b 15 ?? ?? ?? ?? // mov     edx, cs:dword_1428ED20C
      @ref1 48 8b 05 ?? ?? ?? ?? // mov     rax, cs:esv__gEoCServer
      4c 8d 44 24 20 // lea     r8, [rsp+58h+var_38]
      48 8b 88 80 00 00 00 // mov     rcx, [rax+80h]
      48 8b 89 f8 02 00 00 // mov     rcx, [rcx+2F8h]
      48 8b 89 08 01 00 00 // mov     rcx, [rcx+108h]
      e8 ?? ?? ?? ?? // call    sub_1419EA0C0
      b3 01 // mov     bl, 1
      <Target Type="Absolute" Offset="-0x100" NextSymbol="osi::ShowNotification" NextSymbolSeekSize="0x80" />
    </Mapping>

    <Mapping Name="ecl::MaterialManager::AddMaterial">
      88 44 24 20 // mov     byte ptr [rsp+68h+var_48], al
      @ref1 e8 ?? ?? ?? ?? // call    ecl__MaterialManager__AddOverlayMaterial
      eb 49 // jmp     short loc_141397F90
      a8 04 // test    al, 4
      74 30 // jz      short loc_141397F7B
      f3 0f 10 43 28 // movss   xmm0, dword ptr [rbx+28h]
      24 01 // and     al, 1
      f3 0f 11 44 24 48 // movss   [rsp+68h+var_20], xmm0
      f3 0f 10 43 10 // movss   xmm0, dword ptr [rbx+10h]
      c6 44 24 38 00 // mov     [rsp+68h+var_30], 0
      88 44 24 30 // mov     byte ptr [rsp+68h+var_38], al
      0f b6 43 2c // movzx   eax, byte ptr [rbx+2Ch]
      88 44 24 28 // mov     [rsp+68h+var_40], al
      f3 0f 11 44 24 20 // movss   [rsp+68h+var_48], xmm0
      @ref2 e8 ?? ?? ?? ?? // call    ecl__MaterialManager__AddFadingOverlayMaterial
      eb 15 // jmp     short loc_141397F90
      44 0f b6 4b 2c // movzx   r9d, byte ptr [rbx+2Ch]
      24 01 // and     al, 1
      c6 44 24 28 00 // mov     [rsp+68h+var_40], 0
      88 44 24 20 // mov     byte ptr [rsp+68h+var_48], al
      @ref3 e8 ?? ?? ?? ?? // call    ecl__MaterialManager__AddReplacementMaterial
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__MaterialManager__AddOverlayMaterial" />
      <Target Type="Indirect" Offset="@ref2" Symbol="ecl__MaterialManager__AddFadingOverlayMaterial" />
      <Target Type="Indirect" Offset="@ref3" Symbol="ecl__MaterialManager__AddReplacementMaterial" />
    </Mapping>

    <Mapping Name="ecl::MaterialManager::RemoveMaterial">
      49 8b ce // mov     rcx, r14
      @ref1 e8 ?? ?? ?? ?? // call    ecl__MaterialManager__RemoveMaterial
      e9 15 01 00 00 // jmp     loc_141397F96
      49 8b 00 // mov     rax, [r8]
      48 85 c0 // test    rax, rax
      0f 84 09 01 00 00 // jz      loc_141397F96
      0f b7 40 f8 // movzx   eax, word ptr [rax-8]
      48 85 c0 // test    rax, rax
      0f 84 fc 00 00 00 // jz      loc_141397F96
      48 3b 15 ?? ?? ?? ?? // cmp     rdx, cs:ls__ObjectHandle__Unassigned
      0f 84 ef 00 00 00 // jz      loc_141397F96
      49 8b ce // mov     rcx, r14
      @ref3 e8 ?? ?? ?? ?? // call    ecl__MaterialManager__RemoveFadingMaterial
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__MaterialManager__RemoveMaterial" />
      <Target Type="Indirect" Offset="@ref3" Symbol="ecl__MaterialManager__RemoveFadingMaterial" />
    </Mapping>

    <Mapping Name="ecl::gMaterialManager">
      80 7b 10 00 // cmp     byte ptr [rbx+10h], 0
      74 13 // jz      short loc_141360324
      @ref1 48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:ecl__gMaterialManager
      @ref2 e8 ?? ?? ?? ?? // call    ecl__MaterialManager__Update
      48 8b 1d ?? ?? ?? ?? // mov     rbx, cs:ls__gEffectsManager
      <Target Type="Indirect" Offset="@ref1" Symbol="ecl__MaterialManager" />
      <Target Type="Indirect" Offset="@ref2" NextSymbol="ecl::MaterialManager::AddMaterial" NextSymbolSeekSize="0x200" />
      <Target Type="Indirect" Offset="@ref2" NextSymbol="ecl::MaterialManager::RemoveMaterial" NextSymbolSeekSize="0x100" />
    </Mapping>

    <Mapping Name="App::Update">
      48 8b 89 d8 01 00 00 // mov     rcx, [rcx+1D8h]
      e8 ?? ?? ?? ?? // call    ls__CommandBuffer__Flush
      48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:ls__ResourceLoadBatch__s_WorkerThreadBatch
      e8 ?? ?? ?? ?? // call    ls__WorkerThreadScheduler__FinishCompletedJobs
      48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:ls__IOProcessBatch__s_WorkerThreadBatch
      e8 ?? ?? ?? ?? // call    ls__WorkerThreadScheduler__FinishCompletedJobs
      48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:ls__IOProcessNoCompleteBatch__s_WorkerThreadBatch
      e8 ?? ?? ?? ?? // call    ls__WorkerThreadScheduler__FinishCompletedJobs
      48 8b 8b ?? ?? ?? ?? // mov     rcx, [rbx+108h]
      <Target Type="Absolute" Offset="0x200" NextSymbol="ecl::gMaterialManager" NextSymbolSeekSize="0x100" />
    </Mapping>

    <Mapping Name="esv::StoryUtils::GetDamageType">
      e8 ?? ?? ?? ?? // call    CDamageList__EnsureFullSize
      48 8b cb // mov     rcx, rbx; String2
      44 89 7d f7 // mov     dword ptr [rbp+57h+var_60], r15d
      89 7d fb // mov     dword ptr [rbp+57h+var_60+4], edi
      44 89 7d 33 // mov     dword ptr [rbp+57h+var_30.Items+4], r15d
      @ref1 e8 ?? ?? ?? ?? // call    esv__StoryUtils__GetDamageType
      83 f8 05 // cmp     eax, 5
      <Target Type="Indirect" Offset="@ref1" Symbol="eoc__GetDamageType" />
    </Mapping>

    <Mapping Name="esv::StoryUtils::GetDamageTypeString">
      48 85 ed // test    rbp, rbp
      0f 84 99 01 00 00 // jz      loc_1419333D0
      4d 85 ff // test    r15, r15
      0f 84 90 01 00 00 // jz      loc_1419333D0
      8b cb // mov     ecx, ebx
      4c 89 ac 24 98 00 00 00 // mov     [rsp+88h+arg_8], r13
      @ref1 e8 ?? ?? ?? ?? // call    esv__StoryUtils__GetDamageTypeString
      41 0f b6 cc // movzx   ecx, r12b
      4c 8b e8 // mov     r13, rax
      <Target Type="Indirect" Offset="@ref1" Symbol="eoc__GetDamageTypeString" />
    </Mapping>

    <Mapping Name="eoc::DamageTypeToTranslateString">
      ba 03 00 00 00 // mov     edx, 3
      44 8d 42 1d // lea     r8d, [rdx+1Dh]
      e8 ?? ?? ?? ?? // call    sub_141C79570
      41 8b 17 // mov     edx, [r15]
      48 8d 4d 90 // lea     rcx, [rbp+1D0h+var_240]
      @ref1 e8 ?? ?? ?? ?? // call    eoc__DamageTypeToTranslateString
      4c 8b c0 // mov     r8, rax
      ba 04 00 00 00 // mov     edx, 4
      48 8b ce // mov     rcx, rsi
      <Target Type="Indirect" Offset="@ref1" Symbol="eoc__DamageTypeToTranslateString" />
    </Mapping>

    <Mapping Name="eoc::DamageDescriptionToTranslateString">
      49 8d 45 a0 // lea     rax, [r13-60h]
      49 03 c7 // add     rax, r15
      8b 50 08 // mov     edx, [rax+8]
      48 8d 4c 24 50 // lea     rcx, [rsp+290h+var_240]
      @ref1 e8 ?? ?? ?? ?? // call    eoc__DamageDescriptionToTranslateString
      48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:qword_142959848
      48 8d 50 58 // lea     rdx, [rax+58h]
      <Target Type="Indirect" Offset="@ref1" Symbol="eoc__DamageDescriptionToTranslateString" />
    </Mapping>

    <Mapping Name="eoc::DamageTypeToTranslateStringExtended">
      ba 20 00 00 00 // mov     edx, 20h ; ' '
      48 8b cf // mov     rcx, rdi
      e8 ?? ?? ?? ?? // call    ls__Text__Concat
      8b d6 // mov     edx, esi
      48 8d 4c 24 40 // lea     rcx, [rsp+138h+var_F8]
      @ref1 e8 ?? ?? ?? ?? // call    eoc__DamageTypeToTranslateStringExtended
      48 8b 0d ?? ?? ?? ?? // mov     rcx, cs:qword_142959848
      48 8d 50 58 // lea     rdx, [rax+58h]
      <Target Type="Indirect" Offset="@ref1" Symbol="eoc__DamageTypeToTranslateStringExtended" />
    </Mapping>

    <Mapping Name="CDivinityStats_Character::GetResistance">
      49 8b 8f f8 00 00 00 // mov     rcx, [r15+0F8h]; this
      48 85 c9 // test    rcx, rcx
      0f 84 66 01 00 00 // jz      loc_14173F5F8
      41 8b 55 68 // mov     edx, [r13+68h]; damageType
      45 33 c0 // xor     r8d, r8d; excludeTalentBoosts
      @ref1 e8 ?? ?? ?? ?? // call    CDivinityStats_Character__GetResistance
      83 f8 64 // cmp     eax, 64h ; 'd'
      0f 85 51 01 00 00 // jnz     loc_14173F5F8
      48 8d 8d d0 0b 00 00 // lea     rcx, [rbp+3380h+var_27B0]
      <Target Type="Indirect" Offset="@ref1" Symbol="CDivinityStats_Character__GetResistance" />
    </Mapping>

    <Mapping Name="CDivinityStats_Character::GetDamageBoostByType">
      48 8b 4c 24 70 // mov     rcx, [rsp+0FA0h+srcCharStats]; this
      f3 0f 2c c0 // cvttss2si eax, xmm0
      3b c3 // cmp     eax, ebx
      0f 4f d8 // cmovg   ebx, eax
      @ref1 e8 ?? ?? ?? ?? // call    CDivinityStats_Character__GetDamageBoostByType
      f3 0f 10 35 ?? ?? ?? ?? // movss   xmm6, cs:dword_14225BD44
      0f 28 d0 // movaps  xmm2, xmm0
      0f 57 ff // xorps   xmm7, xmm7
      0f 2e d7 // ucomiss xmm2, xmm7
      7a 02 // jp      short loc_141CA713C
      <Target Type="Indirect" Offset="@ref1" Symbol="CDivinityStats_Character__GetDamageBoostByType" />
    </Mapping>

    <Mapping Name="CDivinityStats_Item::ComputeDamage">
      44 0f b6 c6 // movzx   r8d, sil; keepCurrentDamages
      48 8b d3 // mov     rdx, rbx; damages
      49 8b ce // mov     rcx, r14; this
      @ref1 e8 ?? ?? ?? ?? // call    CDivinityStats_Item__ComputeDamage
      44 8b 53 60 // mov     r10d, [rbx+60h]
      4c 8b cf // mov     r9, rdi
      4d 85 d2 // test    r10, r10
      74 35 // jz      short loc_141C8749E
      49 c7 c0 a0 ff ff ff // mov     r8, 0FFFFFFFFFFFFFFA0h
      <Target Type="Indirect" Offset="@ref1" Symbol="CDivinityStats_Item__ComputeDamage" />
    </Mapping>

    <Mapping Name="CDivinityStats_Character::ComputeScaledDamageInternals">
      49 8b cf // mov     rcx, r15; this
      89 7b 60 // mov     [rbx+60h], edi
      @ref1 e8 ?? ?? ?? ?? // call    CDivinityStats_Character__GetDamageBoost
      8b f0 // mov     esi, eax
      41 39 be dc 01 00 00 // cmp     [r14+1DCh], edi
      74 04 // jz      short loc_141C874D3
      8b c7 // mov     eax, edi
      eb 1b // jmp     short loc_141C874EE
      49 8b d6 // mov     rdx, r14; weapon
      49 8b cf // mov     rcx, r15; this
      @ref2 e8 ?? ?? ?? ?? // call    CDivinityStats_Character__GetWeaponAbility
      45 33 c9 // xor     r9d, r9d
      45 33 c0 // xor     r8d, r8d
      8b d0 // mov     edx, eax
      49 8b cf // mov     rcx, r15
      @ref3 e8 ?? ?? ?? ?? // call    CDivinityStats_Character__GetWeaponAbilityBoost
      45 33 c9 // xor     r9d, r9d; excludeBoosts
      89 7c 24 20 // mov     [rsp+100h+requirement], edi
      4c 8d 44 24 20 // lea     r8, [rsp+100h+requirement]; requirement
      49 8b d6 // mov     rdx, r14; weapon
      49 8b cf // mov     rcx, r15; this
      03 f0 // add     esi, eax
      @ref4 e8 ?? ?? ?? ?? // call    CDivinityStats_Character__GetItemRequirementAttribute
      f3 0f 10 35 ?? ?? ?? ?? // movss   xmm6, cs:dword_14225BD44
      8b cf // mov     ecx, edi
      85 c0 // test    eax, eax
      74 15 // jz      short loc_141C8752A
      8b c8 // mov     ecx, eax; attrVal
      @ref5 e8 ?? ?? ?? ?? // call    eoc__ScaledDamageFromPrimaryAttribute
      <Target Type="Indirect" Offset="@ref1" Symbol="CDivinityStats_Character__GetDamageBoost" />
      <Target Type="Indirect" Offset="@ref2" Symbol="CDivinityStats_Character__GetWeaponAbility" />
      <Target Type="Indirect" Offset="@ref3" Symbol="CDivinityStats_Character__GetWeaponAbilityBoost" />
      <Target Type="Indirect" Offset="@ref4" Symbol="CDivinityStats_Character__GetItemRequirementAttribute" />
      <Target Type="Indirect" Offset="@ref5" Symbol="eoc__ScaledDamageFromPrimaryAttribute" />
    </Mapping>

    <Mapping Name="CDivinityStats_Character::ComputeScaledDamage">
      48 89 b4 24 a8 00 00 00 // mov     qword ptr [rsp+108h+damages.AdditionalDescs.Capacity], rsi
      39 b2 dc 01 00 00 // cmp     [rdx+1DCh], esi
      75 1f // jnz     short loc_141C89384
      45 33 c9 // xor     r9d, r9d; keepCurrentDamages
      4c 8d 44 24 30 // lea     r8, [rsp+108h+damages]; damages
      49 8b ca // mov     rcx, r10; this
      @ref1 e8 ?? ?? ?? ?? // call    CDivinityStats_Item__ComputeScaledDamage
      8b 84 24 90 00 00 00 // mov     eax, [rsp+108h+damages.NumDamageDescs]
      4c 8b ac 24 a0 00 00 00 // mov     r13, [rsp+108h+damages.AdditionalDescs.Buf]
      <Target Type="Indirect" Offset="@ref1" Symbol="CDivinityStats_Character__ComputeScaledDamage" />
      <Target Type="Indirect" Offset="@ref1" NextSymbol="CDivinityStats_Item::ComputeDamage" NextSymbolSeekSize="0x100" />
      <Target Type="Indirect" Offset="@ref1" NextSymbol="CDivinityStats_Character::ComputeScaledDamageInternals" NextSymbolSeekSize="0x200" />
    </Mapping>
      
    <Mapping Name="ecl::HighlightManager">
		@ref 48 8b ?? ?? ?? ?? ?? //      MOV        RBX,qword ptr [ecl_HighlightManager_m]           = ??
		48 8b ce //       MOV        param_1,RSI
		e8 ?? ?? ?? ?? //      CALL       FUN_1416070e0                                    undefined FUN_1416070e0()
		41 b9 03 00 00 00 //      MOV        param_4,0x3
		4d 8b 06 //       MOV        param_3,qword ptr [R14]
		0f b7 d0 //       MOVZX      param_2,AX
		0f b6 84 24 90 00 00 00 //      MOVZX      EAX,byte ptr [RSP + param_5]
		48 8b cb //       MOV        param_1,RBX
		88 44 24 20 //    MOV        byte ptr [RSP + local_48],AL
		@call e8 ?? ?? ?? ?? //      CALL       ecl::HighlightManager::SetHighlight              undefined SetHighlight(undefined
	  <Target Type="Indirect" Offset="@ref" Symbol="ecl_HighlightManager" />
      <Target Type="Indirect" Offset="@call" Symbol="ecl_HighlightManager_SetHighlight" />
    </Mapping>

    <Mapping Name="ecl::GameControl">
      @ref 48 8b ?? ?? ?? ?? ?? //      MOV        cVar7,qword ptr [ecl_GameControl]                = ??
      80 78 09 00 //    CMP        byte ptr [cVar7 + 0x9],0x0
      0f 84 e0 00 00 00 //      JZ         LAB_1416d8148
      48 8d ?? ?? ?? ?? ?? //      LEA        item,[s_h4e0fd129g61efg4766ga765g3bc94bf_14215   = "h4e0fd129g61efg4766ga765g3bc9
      48 8d ?? ?? ?? //      LEA        ui=>local_2f8,[RSP + 0x70]
      e8 ?? ?? ?? ?? //      CALL       GetTranslatedStringByHandle                      undefined GetTranslatedStringByH
      48 8b ?? ?? ?? ?? ?? //      MOV        ui,qword ptr [TSKManagerMaybe]                   = ??
      4c 8d ?? ?? ?? ?? ?? //      LEA        R9,[s_Store_on_Lady_Vengeance_14215d548]         = "Store on Lady Vengeance"
      <Target Type="Indirect" Offset="@ref" Symbol="ecl_GameControl" />
    </Mapping>

    <Mapping Name="fmt::GetColorCodeDmg">
      83 3e 00 // cmp     dword ptr [rsi], 0
      8b 5e 04 // mov     ebx, [rsi+4]
      0f 8e 5b 01 00 00 // jle     loc_14172BFE0
      83 fb 0c // cmp     ebx, 0Ch
      77 09 // ja      short loc_14172BE93
      8b cb // mov     ecx, ebx
      @ref1 e8 ?? ?? ?? ?? // call    fmt__GetColorCodeDmg
      eb 03 // jmp     short loc_14172BE96
      83 c8 ff // or      eax, 0FFFFFFFFh
      <Target Type="Indirect" Offset="@ref1" Symbol="fmt__GetColorCodeDmg" />
    </Mapping>

    <Mapping Name="fmt::ColorCodeAndTypeDmg">
      c1 e9 09 // shr     ecx, 9
      41 33 d1 // xor     edx, r9d
      80 e1 01 // and     cl, 1
      41 2b d0 // sub     edx, r8d
      44 0f b6 c1 // movzx   r8d, cl
      44 8b cb // mov     r9d, ebx
      48 8d 8d 00 03 00 00 // lea     rcx, [rbp+3E0h+var_E0]
      @ref1 e8 ?? ?? ?? ?? // call    fmt__ColorCodeAndTypeDmg
      40 84 ff // test    dil, dil
      74 13 // jz      short loc_14172BEF8
      48 8d 15 ?? ?? ?? ?? // lea     rdx, qword_1420E8658
      48 8d 8d 00 03 00 00 // lea     rcx, [rbp+3E0h+var_E0]
      <Target Type="Indirect" Offset="@ref1" Symbol="fmt__ColorCodeAndTypeDmg" />
    </Mapping>

    <Mapping Name="fmt::GetColorCodeDmg_Patch1">
      83 3e 00 // cmp     dword ptr [rsi], 0
      8b 5e 04 // mov     ebx, [rsi+4]
      0f 8e 5b 01 00 00 // jle     loc_14172BFE0
      @hook 83 fb 0c // cmp     ebx, 0Ch
      77 09 // ja      short loc_14172BE93
      8b cb // mov     ecx, ebx
      e8 ?? ?? ?? ?? // call    fmt__GetColorCodeDmg
      eb 03 // jmp     short loc_14172BE96
      83 c8 ff // or      eax, 0FFFFFFFFh
      41 83 c8 ff // or      r8d, 0FFFFFFFFh
      <Patch Type="Absolute" Offset="@hook">
        83 fb ff
      </Patch>
    </Mapping>

    <Mapping Name="fmt::GetColorCodeDmg_Patch2">
      85 ff // test    edi, edi
      7e 35 // jle     short loc_14173F1DF
      8b 4b 04 // mov     ecx, [rbx+4]
      @hook 83 f9 0c // cmp     ecx, 0Ch
      77 0a // ja      short loc_14173F1BC
      e8 ?? ?? ?? ?? // call    fmt__GetColorCodeDmg
      44 8b c0 // mov     r8d, eax
      eb 04 // jmp     short loc_14173F1C0
      41 83 c8 ff // or      r8d, 0FFFFFFFFh
      8b c7 // mov     eax, edi
      <Patch Type="Absolute" Offset="@hook">
        90 90 90 90 90
      </Patch>
    </Mapping>

    <Mapping Name="fmt::GetColorCodeDmg_Patch3">
      83 f9 04 // cmp     ecx, 4
      0f 84 cd 00 00 00 // jz      loc_141741043
      41 83 3e 00 // cmp     dword ptr [r14], 0
      7c 13 // jl      short loc_141740F8F
      @hook 83 f9 0c // cmp     ecx, 0Ch
      77 09 // ja      short loc_141740F8A
      e8 ?? ?? ?? ?? // call    fmt__GetColorCodeDmg
      8b d8 // mov     ebx, eax
      eb 08 // jmp     short loc_141740F92
      83 cb ff // or      ebx, 0FFFFFFFFh
      eb 03 // jmp     short loc_141740F92
      <Patch Type="Absolute" Offset="@hook">
        90 90 90 90 90
      </Patch>
    </Mapping>

    <Mapping Name="fmt::GetColorCodeDmg_Patch4">
      8b d8 // mov     ebx, eax
      83 f8 01 // cmp     eax, 1
      74 23 // jz      short loc_141C71224
      @hook 83 f8 0c // cmp     eax, 0Ch
      77 09 // ja      short loc_141C7120F
      8b c8 // mov     ecx, eax
      e8 ?? ?? ?? ?? // call    fmt__GetColorCodeDmg
      eb 03 // jmp     short loc_141C71212
      83 c8 ff // or      eax, 0FFFFFFFFh
      41 83 c8 ff // or      r8d, 0FFFFFFFFh
      8b d0 // mov     edx, eax
      <Patch Type="Absolute" Offset="@hook">
        90 90 90 90 90
      </Patch>
    </Mapping>

    <Mapping Name="fmt::GetColorCodeDmg_Patch5">
      ff c0 // inc     eax
      3b c3 // cmp     eax, ebx
      0f 4c c3 // cmovl   eax, ebx
      8b d8 // mov     ebx, eax
      @hook 83 fe 0c // cmp     esi, 0Ch
      77 09 // ja      short loc_141CA71A9
      8b ce // mov     ecx, esi
      e8 ?? ?? ?? ?? // call    fmt__GetColorCodeDmg
      eb 02 // jmp     short loc_141CA71AB
      8b c7 // mov     eax, edi
      44 8b c7 // mov     r8d, edi
      48 8d 4d e0 // lea     rcx, [rbp+0EA0h+var_EC0]
      <Patch Type="Absolute" Offset="@hook">
        90 90 90 90 90
      </Patch>
    </Mapping>

    <Mapping Name="fmt::GetColorCodeDmg_Patch6">
      48 8b 45 90 // mov     rax, [rbp+0EA0h+var_F10]
      48 03 85 20 09 00 00 // add     rax, [rbp+0EA0h+var_580]
      48 03 c3 // add     rax, rbx
      8b 48 08 // mov     ecx, [rax+8]
      @hook 83 f9 0c // cmp     ecx, 0Ch
      77 07 // ja      short loc_141CA763A
      e8 ?? ?? ?? ?? // call    fmt__GetColorCodeDmg
      eb 02 // jmp     short loc_141CA763C
      8b c7 // mov     eax, edi
      44 8b c7 // mov     r8d, edi
      <Patch Type="Absolute" Offset="@hook">
        90 90 90 90 90
      </Patch>
    </Mapping>

    <Mapping Name="fmt::GetColorCodeDmg_Patch7">
      8b 44 24 48 // mov     eax, dword ptr [rsp+0FA0h+damageType]
      48 8b 9d 98 00 00 00 // mov     rbx, [rbp+0EA0h+var_E08]
      @hook 83 f8 0c // cmp     eax, 0Ch
      0f 87 e3 00 00 00 // ja      loc_141CA819B
      8b c8 // mov     ecx, eax
      e8 ?? ?? ?? ?? // call    fmt__GetColorCodeDmg
      48 63 f8 // movsxd  rdi, eax
      83 ff ff // cmp     edi, 0FFFFFFFFh
      0f 84 d0 00 00 00 // jz      loc_141CA819B
      48 8b 53 10 // mov     rdx, [rbx+10h]
      <Patch Type="Absolute" Offset="@hook">
        90 90 90 90 90 90 90 90 90
      </Patch>
    </Mapping>

    <Mapping Name="fmt::GetColorCodeDmg_Patch8">
      48 83 cb ff // or      rbx, 0FFFFFFFFFFFFFFFFh
      48 89 ac 24 08 01 00 00 // mov     [rsp+138h+var_30], rbp
      @hook 83 fe 0c // cmp     esi, 0Ch
      77 58 // ja      short loc_141D28A0C
      8b ce // mov     ecx, esi
      e8 ?? ?? ?? ?? // call    fmt__GetColorCodeDmg
      48 63 e8 // movsxd  rbp, eax
      3b eb // cmp     ebp, ebx
      74 4c // jz      short loc_141D28A0E
      48 8d 15 ?? ?? ?? ?? // lea     rdx, xmmword_1421EE428
      <Patch Type="Absolute" Offset="@hook">
        90 90 90 90 90
      </Patch>
    </Mapping>

    <Mapping Name="fmt::GetColorCodeDmg_Patch9">
      85 ff // test    edi, edi
      7e 35 // jle     short loc_14173F1DF
      8b 4b 04 // mov     ecx, [rbx+4]
      @hook 83 f9 0c // cmp     ecx, 0Ch
      77 0a // ja      short loc_14173F1BC
      e8 ?? ?? ?? ?? // call    fmt__GetColorCodeDmg
      44 8b c0 // mov     r8d, eax
      eb 04 // jmp     short loc_14173F1C0
      41 83 c8 ff // or      r8d, 0FFFFFFFFh
      8b c7 // mov     eax, edi
      <Patch Type="Absolute" Offset="@hook">
        90 90 90 90 90
      </Patch>
    </Mapping>

    <Mapping Name="fmt::GetColorCodeAndTypeDmg_Patch1">
      41 c1 f8 1f // sar     r8d, 1Fh
      @hook 83 fb 0b // cmp     ebx, 0Bh
      77 26 // ja      short loc_14172BEE0
      41 8b 4f 20 // mov     ecx, [r15+20h]
      41 8b d0 // mov     edx, r8d
      c1 e9 09 // shr     ecx, 9
      41 33 d1 // xor     edx, r9d
      80 e1 01 // and     cl, 1
      41 2b d0 // sub     edx, r8d
      44 0f b6 c1 // movzx   r8d, cl
      44 8b cb // mov     r9d, ebx
      48 8d 8d 00 03 00 00 // lea     rcx, [rbp+3E0h+var_E0]
      e8 ?? ?? ?? ?? // call    fmt__ColorCodeAndTypeDmg
      40 84 ff // test    dil, dil
      <Patch Type="Absolute" Offset="@hook">
        90 90 90 90 90
      </Patch>
    </Mapping>
  </Mappings>
</BinaryMappings>